{"ast":null,"code":"var _jsxFileName = \"/Users/anton/Downloads/myApp-1/client/src/components/Pages/DetailsPage/DetailsContainer.jsx\";\nimport React from 'react';\nimport DetailsPage from './DetailsPage';\nimport { connect } from 'react-redux';\nimport { getGoodsThunkById, removeGood } from '../../../redux/CatalogReducer';\nimport { addToCart } from '../../../redux/CardReducer';\nimport { setItemOfReview } from '../../../redux/ReviewsReducer';\nimport { compose } from 'redux';\nconst ProductContext = React.createContext();\n\nclass DetailsContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      modalOpen: false,\n      modalProduct: null\n    };\n\n    this.getItem = id => {\n      const product = this.props.cardItems.find(item => item._id === id);\n      return product;\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalProduct: null,\n          modalOpen: false\n        };\n      });\n    };\n  }\n\n  refreshProfile() {\n    const id = this.props.match.params.id;\n\n    if (id) {\n      this.props.getGoodsThunkById(id);\n    }\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.id !== prevProps.match.params.id) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: {\n        openModal: this.openModal,\n        closeModal: this.closeModal\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DetailsPage, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 10\n      }\n    })));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    goodItem: state.goods.goodItem,\n    items: state.card.items\n  };\n};\n\nconst ProductConsumer = ProductContext.Consumer;\nexport default compose(connect(mapStateToProps, {\n  getGoodsThunkById,\n  addToCart,\n  removeGood,\n  setItemOfReview\n}))(DetailsContainer, ProductConsumer);","map":{"version":3,"sources":["/Users/anton/Downloads/myApp-1/client/src/components/Pages/DetailsPage/DetailsContainer.jsx"],"names":["React","DetailsPage","connect","getGoodsThunkById","removeGood","addToCart","setItemOfReview","compose","ProductContext","createContext","DetailsContainer","Component","state","modalOpen","modalProduct","getItem","id","product","props","cardItems","find","item","_id","openModal","setState","closeModal","refreshProfile","match","params","componentDidMount","componentDidUpdate","prevProps","render","mapStateToProps","goodItem","goods","items","card","ProductConsumer","Consumer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,iBAAT,EAA2BC,UAA3B,QAA6C,+BAA7C;AACA,SAASC,SAAT,QAA0B,4BAA1B;AACA,SAAQC,eAAR,QAA8B,+BAA9B;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,MAAMC,cAAc,GAAGR,KAAK,CAACS,aAAN,EAAvB;;AAEA,MAAMC,gBAAN,SAA+BV,KAAK,CAACW,SAArC,CAA+C;AAAA;AAAA;AAAA,SAC3CC,KAD2C,GACnC;AACJC,MAAAA,SAAS,EAAE,KADP;AAEJC,MAAAA,YAAY,EAAC;AAFT,KADmC;;AAAA,SAoB3CC,OApB2C,GAoBjCC,EAAE,IAAI;AACZ,YAAMC,OAAO,GAAG,KAAKC,KAAL,CAAWC,SAAX,CAAqBC,IAArB,CAA0BC,IAAI,IAAIA,IAAI,CAACC,GAAL,KAAaN,EAA/C,CAAhB;AACA,aAAOC,OAAP;AACH,KAvB0C;;AAAA,SAwB3CM,SAxB2C,GAwB/BP,EAAE,IAAI;AACd,YAAMC,OAAO,GAAG,KAAKF,OAAL,CAAaC,EAAb,CAAhB;AACA,WAAKQ,QAAL,CAAc,MAAM;AAChB,eAAO;AAAEV,UAAAA,YAAY,EAAEG,OAAhB;AAAwBJ,UAAAA,SAAS,EAAC;AAAlC,SAAP;AACD,OAFH;AAGH,KA7B0C;;AAAA,SA8B1CY,UA9B0C,GA8B7B,MAAM;AAChB,WAAKD,QAAL,CAAc,MAAM;AAChB,eAAO;AAACV,UAAAA,YAAY,EAAE,IAAf;AAAoBD,UAAAA,SAAS,EAAE;AAA/B,SAAP;AACD,OAFH;AAGH,KAlC0C;AAAA;;AAK3Ca,EAAAA,cAAc,GAAG;AACb,UAAMV,EAAE,GAAG,KAAKE,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBZ,EAAnC;;AACA,QAAIA,EAAJ,EAAQ;AACJ,WAAKE,KAAL,CAAWf,iBAAX,CAA6Ba,EAA7B;AACH;AAEJ;;AACDa,EAAAA,iBAAiB,GAAG;AAChB,SAAKH,cAAL;AACH;;AACDI,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC1B,QAAI,KAAKb,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBZ,EAAxB,KAA+Be,SAAS,CAACJ,KAAV,CAAgBC,MAAhB,CAAuBZ,EAA1D,EAA8D;AAC1D,WAAKU,cAAL;AACH;AACJ;;AAgBDM,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,cAAD,CAAgB,QAAhB;AACA,MAAA,KAAK,EAAE;AACHT,QAAAA,SAAS,EAAC,KAAKA,SADZ;AAEHE,QAAAA,UAAU,EAAC,KAAKA;AAFb,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKH,oBAAC,WAAD,oBAAiB,KAAKP,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OALG,CADJ;AAUH;;AA9C0C;;AAgD/C,IAAIe,eAAe,GAAIrB,KAAD,IAAW;AAC7B,SAAO;AACHsB,IAAAA,QAAQ,EAAEtB,KAAK,CAACuB,KAAN,CAAYD,QADnB;AAEHE,IAAAA,KAAK,EAACxB,KAAK,CAACyB,IAAN,CAAWD;AAFd,GAAP;AAIH,CALD;;AAMA,MAAME,eAAe,GAAG9B,cAAc,CAAC+B,QAAvC;AAEA,eAAehC,OAAO,CAClBL,OAAO,CAAC+B,eAAD,EAAkB;AAAC9B,EAAAA,iBAAD;AAAoBE,EAAAA,SAApB;AAA+BD,EAAAA,UAA/B;AAA0CE,EAAAA;AAA1C,CAAlB,CADW,CAAP,CAEbI,gBAFa,EAEI4B,eAFJ,CAAf","sourcesContent":["import React from 'react'\nimport DetailsPage from './DetailsPage'\nimport { connect } from 'react-redux'\nimport { getGoodsThunkById,removeGood } from '../../../redux/CatalogReducer'\nimport { addToCart } from '../../../redux/CardReducer'\nimport {setItemOfReview} from '../../../redux/ReviewsReducer'\nimport { compose } from 'redux'\nconst ProductContext = React.createContext();\n\nclass DetailsContainer extends React.Component {\n    state = {\n        modalOpen: false,\n        modalProduct:null ,\n      };\n    refreshProfile() {\n        const id = this.props.match.params.id;\n        if (id) {\n            this.props.getGoodsThunkById(id)\n        }\n    \n    }\n    componentDidMount() {\n        this.refreshProfile();\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.match.params.id !== prevProps.match.params.id) {\n            this.refreshProfile();\n        }\n    }\n    getItem = id => {\n        const product = this.props.cardItems.find(item => item._id === id)\n        return product;\n    }\n    openModal = id => {\n        const product = this.getItem(id);\n        this.setState(() => {\n            return { modalProduct: product,modalOpen:true };\n          });\n    }\n     closeModal = () => {\n        this.setState(() => {\n            return {modalProduct: null,modalOpen :false};\n          });\n    }\n    render() {\n        return (\n            <ProductContext.Provider\n            value={{\n                openModal:this.openModal,\n                closeModal:this.closeModal\n            }}>\n         <DetailsPage {...this.props} />\n            </ProductContext.Provider>\n          \n        )\n    }\n}\nlet mapStateToProps = (state) => {\n    return {\n        goodItem: state.goods.goodItem,\n        items:state.card.items\n    }\n}\nconst ProductConsumer = ProductContext.Consumer;\n\nexport default compose(\n    connect(mapStateToProps, {getGoodsThunkById, addToCart ,removeGood,setItemOfReview})\n)(DetailsContainer,ProductConsumer)\n\n"]},"metadata":{},"sourceType":"module"}