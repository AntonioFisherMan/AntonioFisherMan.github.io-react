{"ast":null,"code":"const CARD_ADD_ITEMS = \"CARD_ADD_ITEMS\";\nconst CARD_REMOVE_ITEMS = \"CARD_REMOVE_ITEMS\";\nconst REMOVE_CARD_ITEMS = \"REMOVE_CARD_ITEMS\";\nconst CHANGE_ITEMS_QUANTITY = \"CHANGE_ITEMS_QUANTITY\";\nconst CARD_ADD_INSURANCE = \"CARD_ADD_INSURANCE\";\nlet initialState = {\n  items: [],\n  isLoaded: false,\n  totalPrice: 0\n};\n\nconst CardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CARD_ADD_ITEMS:\n      return { ...state,\n        items: [...state.items, action.payload],\n        isLoaded: true\n      };\n\n    case CARD_REMOVE_ITEMS:\n      return { ...state,\n        items: state.items.filter(i => i._id !== action.itemId)\n      };\n\n    case REMOVE_CARD_ITEMS:\n      return { ...state,\n        items: [],\n        totalPrice: null,\n        totalItemCount: null\n      };\n\n    case CHANGE_ITEMS_QUANTITY:\n      return { ...state,\n        items: state.items.filter(i => i._id === action.id ? i.quantity : action.quantity)\n      };\n\n    case CARD_ADD_INSURANCE:\n      debugger;\n      return { ...state,\n        totalPrice: action.insurance\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addToCart = payload => ({\n  type: CARD_ADD_ITEMS,\n  payload\n});\nexport const clearCardItems = () => ({\n  type: REMOVE_CARD_ITEMS\n});\nexport const removeProduct = itemId => ({\n  type: CARD_REMOVE_ITEMS,\n  itemId\n});\nexport const changeQuantity = (id, quantity) => ({\n  type: CHANGE_ITEMS_QUANTITY,\n  id,\n  quantity\n});\nexport const addInsurance = (id, insurance) => ({\n  type: CARD_ADD_INSURANCE,\n  id,\n  insurance\n});\nexport default CardReducer;","map":{"version":3,"sources":["/Users/anton/Downloads/myApp-1/client/src/redux/CardReducer.js"],"names":["CARD_ADD_ITEMS","CARD_REMOVE_ITEMS","REMOVE_CARD_ITEMS","CHANGE_ITEMS_QUANTITY","CARD_ADD_INSURANCE","initialState","items","isLoaded","totalPrice","CardReducer","state","action","type","payload","filter","i","_id","itemId","totalItemCount","id","quantity","insurance","addToCart","clearCardItems","removeProduct","changeQuantity","addInsurance"],"mappings":"AAAA,MAAMA,cAAc,GAAG,gBAAvB;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AACA,MAAMC,kBAAkB,GAAC,oBAAzB;AAGA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,QAAQ,EAAE,KAFO;AAGjBC,EAAAA,UAAU,EAAE;AAHK,CAAnB;;AAOA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,cAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,KAAK,EAAE,CAAC,GAAGI,KAAK,CAACJ,KAAV,EAAiBK,MAAM,CAACE,OAAxB,CAFF;AAGLN,QAAAA,QAAQ,EAAE;AAHL,OAAP;;AAKF,SAAKN,iBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAoBC,CAAD,IAAOA,CAAC,CAACC,GAAF,KAAUL,MAAM,CAACM,MAA3C;AAFF,OAAP;;AAIF,SAAKf,iBAAL;AACE,aAAO,EAAE,GAAGQ,KAAL;AAAYJ,QAAAA,KAAK,EAAE,EAAnB;AAAuBE,QAAAA,UAAU,EAAE,IAAnC;AAAyCU,QAAAA,cAAc,EAAE;AAAzD,OAAP;;AACF,SAAKf,qBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,KAAK,EAAEI,KAAK,CAACJ,KAAN,CAAYQ,MAAZ,CAAoBC,CAAD,IACxBA,CAAC,CAACC,GAAF,KAAUL,MAAM,CAACQ,EAAjB,GAAsBJ,CAAC,CAACK,QAAxB,GAAmCT,MAAM,CAACS,QADrC;AAFF,OAAP;;AAMA,SAAKhB,kBAAL;AACE;AACA,aAAM,EAAC,GAAGM,KAAJ;AAAUF,QAAAA,UAAU,EAACG,MAAM,CAACU;AAA5B,OAAN;;AACJ;AACE,aAAOX,KAAP;AAzBJ;AA2BD,CA5BD;;AA8BA,OAAO,MAAMY,SAAS,GAAIT,OAAD,KAAc;AAAED,EAAAA,IAAI,EAAEZ,cAAR;AAAwBa,EAAAA;AAAxB,CAAd,CAAlB;AACP,OAAO,MAAMU,cAAc,GAAG,OAAO;AAAEX,EAAAA,IAAI,EAAEV;AAAR,CAAP,CAAvB;AACP,OAAO,MAAMsB,aAAa,GAAIP,MAAD,KAAa;AAAEL,EAAAA,IAAI,EAAEX,iBAAR;AAA2BgB,EAAAA;AAA3B,CAAb,CAAtB;AACP,OAAO,MAAMQ,cAAc,GAAG,CAACN,EAAD,EAAKC,QAAL,MAAmB;AAC/CR,EAAAA,IAAI,EAAET,qBADyC;AAE/CgB,EAAAA,EAF+C;AAG/CC,EAAAA;AAH+C,CAAnB,CAAvB;AAKP,OAAO,MAAMM,YAAY,GAAC,CAACP,EAAD,EAAIE,SAAJ,MAAiB;AAACT,EAAAA,IAAI,EAACR,kBAAN;AAAyBe,EAAAA,EAAzB;AAA4BE,EAAAA;AAA5B,CAAjB,CAAnB;AAEP,eAAeZ,WAAf","sourcesContent":["const CARD_ADD_ITEMS = \"CARD_ADD_ITEMS\";\nconst CARD_REMOVE_ITEMS = \"CARD_REMOVE_ITEMS\";\nconst REMOVE_CARD_ITEMS = \"REMOVE_CARD_ITEMS\";\nconst CHANGE_ITEMS_QUANTITY = \"CHANGE_ITEMS_QUANTITY\";\nconst CARD_ADD_INSURANCE=\"CARD_ADD_INSURANCE\";\n\n\nlet initialState = {\n  items: [],\n  isLoaded: false,\n  totalPrice: 0,\n};\n\n\nconst CardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CARD_ADD_ITEMS:\n      return {\n        ...state,\n        items: [...state.items, action.payload],\n        isLoaded: true,\n      };\n    case CARD_REMOVE_ITEMS:\n      return {\n        ...state,\n        items: state.items.filter((i) => i._id !== action.itemId),\n      };\n    case REMOVE_CARD_ITEMS:\n      return { ...state, items: [], totalPrice: null, totalItemCount: null };\n    case CHANGE_ITEMS_QUANTITY:\n      return {\n        ...state,\n        items: state.items.filter((i) =>\n          i._id === action.id ? i.quantity : action.quantity\n        ),\n      };\n      case CARD_ADD_INSURANCE:\n        debugger\n        return{...state,totalPrice:action.insurance}\n    default:\n      return state;\n  }\n};\n\nexport const addToCart = (payload) => ({ type: CARD_ADD_ITEMS, payload });\nexport const clearCardItems = () => ({ type: REMOVE_CARD_ITEMS });\nexport const removeProduct = (itemId) => ({ type: CARD_REMOVE_ITEMS, itemId });\nexport const changeQuantity = (id, quantity) => ({\n  type: CHANGE_ITEMS_QUANTITY,\n  id,\n  quantity,\n});\nexport const addInsurance=(id,insurance)=>({type:CARD_ADD_INSURANCE,id,insurance})\n\nexport default CardReducer;\n"]},"metadata":{},"sourceType":"module"}