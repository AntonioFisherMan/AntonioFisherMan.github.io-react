{"ast":null,"code":"import * as axios from \"axios\";\nimport { saveProfile, savePhoto } from \"../redux/UsersReducer\";\nconst baseUrl = \"https://social-network.samuraijs.com/api/1.0/\";\nlet instance = axios.create({\n  baseUrl: baseUrl,\n  withCredentials: true,\n  headers: {\n    \"API-KEY\": \"34b87ad1-2221-48b1-ac66-9b97be6c625a\"\n  }\n});\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 10) {\n    return instance.get(baseUrl + `users?page=${currentPage}&count=${pageSize}`).then(response => response.data);\n  },\n\n  getStatus(user_id) {\n    return instance.get(baseUrl + `profile/status/${user_id}`).then(response => response.data);\n  },\n\n  updateStatus(status) {\n    return instance.put(baseUrl + 'profile/status/', {\n      status: status\n    }).then(response => response.data);\n  },\n\n  getProfileInform(user_id) {\n    return instance.get(baseUrl + `profile/${user_id}`);\n  },\n\n  saveProfile(profile) {\n    return instance.put(baseUrl + 'profile', profile);\n  },\n\n  savePhoto(photo) {\n    debugger;\n    const photoData = new FormData();\n    photoData.append(\"image\", photo);\n    return instance.put(baseUrl + 'profile/photo', photoData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n};\nexport const authAPI = {\n  getAuth: () => instance.get(baseUrl + \"/auth/me\"),\n\n  login(email, password, rememberMe = false, captcha) {\n    return instance.post(baseUrl + \"/auth/login\", {\n      email,\n      password,\n      rememberMe,\n      captcha\n    });\n  },\n\n  logout() {\n    return instance.delete(baseUrl + \"/auth/login\");\n  }\n\n};\nexport const testAPI = {\n  getMyUsers() {\n    return axios.get(\"http://localhost:5000/users\").then(response => response.data);\n  },\n\n  getGoods() {\n    return axios.get(\"http://localhost:5000/goods\").then(response => response.data);\n  },\n\n  login(email, password) {\n    return axios.post(\"http://localhost:5000/auth/\", {\n      email,\n      password\n    });\n  },\n\n  register(name, email, password) {\n    return axios.post(\"http://localhost:5000/users\", {\n      name,\n      email,\n      password\n    });\n  }\n\n};\nexport const securityAPI = {\n  getCaptchaUrl() {\n    return instance.get(baseUrl + 'security/get-captcha-url');\n  }\n\n};","map":{"version":3,"sources":["/Volumes/Anton/FullStack/myApp/client/src/api/api.js"],"names":["axios","saveProfile","savePhoto","baseUrl","instance","create","withCredentials","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","getStatus","user_id","updateStatus","status","put","getProfileInform","profile","photo","photoData","FormData","append","authAPI","getAuth","login","email","password","rememberMe","captcha","post","logout","delete","testAPI","getMyUsers","getGoods","register","name","securityAPI","getCaptchaUrl"],"mappings":"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","sourcesContent":["import * as axios from \"axios\";\nimport { saveProfile, savePhoto } from \"../redux/UsersReducer\";\n\nconst baseUrl=\"https://social-network.samuraijs.com/api/1.0/\";\nlet instance = axios.create({\n  baseUrl: baseUrl,\n  withCredentials: true,\n  headers:{\n  \"API-KEY\":\"34b87ad1-2221-48b1-ac66-9b97be6c625a\"\n  }\n});\n\nexport const usersAPI = {\n  getUsers(currentPage = 1, pageSize = 10) {\n    return instance\n      .get(baseUrl + `users?page=${currentPage}&count=${pageSize}`)\n      .then(response => response.data);  \n  },\n  getStatus(user_id){\n    return instance.get(baseUrl+`profile/status/${user_id}`)\n    .then(response=>response.data)\n  },\n  updateStatus(status) {\n    return instance.put(baseUrl + 'profile/status/', {status: status})\n        .then(response => response.data)\n  },\n  getProfileInform(user_id){\n    return instance.get(baseUrl+`profile/${user_id}`)\n  },\n  saveProfile(profile){\n    return instance.put(baseUrl+'profile',profile)\n  },\n  savePhoto(photo){\n    debugger\n    const photoData=new FormData();\n    photoData.append(\"image\",photo);\n   return instance.put(baseUrl+'profile/photo',photoData,{\n     headers:{\n     'Content-Type':'multipart/form-data'\n     }\n   })\n  }\n}\n\nexport const authAPI = {\n  getAuth:()=>instance.get(baseUrl+\"/auth/me\"),\n  login(email,password,rememberMe=false,captcha){\n    return instance.post(baseUrl+\"/auth/login\",{email,password,rememberMe,captcha})\n  },\n  logout(){\n    return instance.delete(baseUrl+\"/auth/login\")\n  }\n};\n\nexport const testAPI={\n  getMyUsers(){\n    return axios.get(\"http://localhost:5000/users\")\n    .then(response=>response.data)\n  },\n  getGoods(){\n    return axios.get(\"http://localhost:5000/goods\")\n    .then(response=>response.data)\n  },\n  login(email,password){\n    return axios.post(\"http://localhost:5000/auth/\",{email,password})\n  },\n  register(name,email,password){\n    return axios.post(\"http://localhost:5000/users\",{name,email,password})\n  }\n \n}\nexport const securityAPI={\n  getCaptchaUrl(){\n    return instance.get(baseUrl+'security/get-captcha-url'); \n  }\n}\n\n\n"]},"metadata":{},"sourceType":"module"}