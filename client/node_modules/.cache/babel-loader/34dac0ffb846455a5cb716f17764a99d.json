{"ast":null,"code":"import { clearCardItems } from './CardReducer';\nimport { testAPI } from \"../api/api\";\nconst ADD_ORDERS = \"ADD_ORDERS\";\nlet initialState = {\n  orders: [],\n  inform: null\n};\n\nlet OrdersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_ORDERS:\n      debugger;\n      return { ...state,\n        orders: [...state.orders, ...action.order.items],\n        inform: action.order.inform\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addOrders = order => ({\n  type: ADD_ORDERS,\n  order\n});\nexport const addOrdersThunk = ({\n  items,\n  inform,\n  id\n}) => dispatch => {\n  debugger;\n  testAPI.setOrders(items, inform, id).then(response => {\n    dispatch(addOrders(order));\n    dispatch(clearCardItems(null, null, null));\n  });\n};\nexport default OrdersReducer;","map":{"version":3,"sources":["/Users/anton/Desktop/myApp/client/src/redux/OrdersReducer.js"],"names":["clearCardItems","testAPI","ADD_ORDERS","initialState","orders","inform","OrdersReducer","state","action","type","order","items","addOrders","addOrdersThunk","id","dispatch","setOrders","then","response"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,eAA7B;AACA,SAASC,OAAT,QAAwB,YAAxB;AAGA,MAAMC,UAAU,GAAC,YAAjB;AAGA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,MAAM,EAAC;AAFU,CAAnB;;AAKA,IAAIC,aAAa,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,UAAL;AACI;AACA,aAAM,EAAC,GAAGK,KAAJ;AAAUH,QAAAA,MAAM,EAAC,CAAC,GAAGG,KAAK,CAACH,MAAV,EAAiB,GAAGI,MAAM,CAACE,KAAP,CAAaC,KAAjC,CAAjB;AAAyDN,QAAAA,MAAM,EAACG,MAAM,CAACE,KAAP,CAAaL;AAA7E,OAAN;;AACN;AACE,aAAOE,KAAP;AALJ;AAOD,CARD;;AAWC,OAAO,MAAMK,SAAS,GAAEF,KAAD,KAAU;AAACD,EAAAA,IAAI,EAACP,UAAN;AAAiBQ,EAAAA;AAAjB,CAAV,CAAhB;AAGR,OAAO,MAAMG,cAAc,GAAC,CAAC;AAACF,EAAAA,KAAD;AAAON,EAAAA,MAAP;AAAcS,EAAAA;AAAd,CAAD,KAAqBC,QAAQ,IAAE;AACvD;AACAd,EAAAA,OAAO,CAACe,SAAR,CAAkBL,KAAlB,EAAwBN,MAAxB,EAA+BS,EAA/B,EAAmCG,IAAnC,CAAwCC,QAAQ,IAAE;AAC9CH,IAAAA,QAAQ,CAACH,SAAS,CAACF,KAAD,CAAV,CAAR;AACAK,IAAAA,QAAQ,CAACf,cAAc,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAAf,CAAR;AACD,GAHH;AAKH,CAPM;AASP,eAAeM,aAAf","sourcesContent":["import {clearCardItems} from './CardReducer'\nimport { testAPI } from \"../api/api\";\n\n\nconst ADD_ORDERS=\"ADD_ORDERS\"\n\n\nlet initialState = {\n  orders: [],\n  inform:null\n};\n\nlet OrdersReducer = (state = initialState, action) => {\n  switch (action.type) {\n      case ADD_ORDERS:\n          debugger\n          return{...state,orders:[...state.orders,...action.order.items],inform:action.order.inform}\n    default:\n      return state;\n  }\n};\n\n\n export const addOrders=(order)=>({type:ADD_ORDERS,order})\n \n\nexport const addOrdersThunk=({items,inform,id})=>dispatch=>{\n    debugger\n    testAPI.setOrders(items,inform,id).then(response=>{\n        dispatch(addOrders(order))\n        dispatch(clearCardItems(null,null,null))\n      })\n    \n}\n\nexport default OrdersReducer"]},"metadata":{},"sourceType":"module"}