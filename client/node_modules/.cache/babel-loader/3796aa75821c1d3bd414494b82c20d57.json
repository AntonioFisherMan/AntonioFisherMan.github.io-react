{"ast":null,"code":"var _jsxFileName = \"/Volumes/Anton/FullStack/myApp/client/src/components/ProfilePage/ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from './Profile';\nimport { getAuth } from '../../redux/UsersSelectors';\nimport { savePhoto, saveProfile, getProfileThunk, getStatusThunkCreator, updateStatus } from '../../redux/ProfileReducer';\nimport { connect } from 'react-redux';\nimport Preloader from '../common/Preloader';\n\nclass ProfileContainer extends React.Component {\n  refreshProfile() {\n    let userId = this.props.match.params.id;\n\n    if (!userId) {\n      userId = this.props.auth.id;\n    }\n\n    this.props.getProfileThunk(userId);\n    this.props.getStatusThunkCreator(userId);\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    debugger;\n\n    if (this.props.match.params.id != prevProps.match.params.id) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, !this.props.profile ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 28\n      }\n    }) : /*#__PURE__*/React.createElement(Profile, {\n      profile: this.props.profile,\n      saveProfile: this.props.saveProfile,\n      isOwner: !this.props.match.params.id,\n      savePhoto: this.props.savePhoto,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      globalError: this.props.globalError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    profile: state.profile.profile,\n    auth: getAuth(state),\n    status: state.profile.status,\n    globalError: state.profile.globalError\n  };\n};\n\nexport default connect(mapStateToProps, {\n  savePhoto,\n  saveProfile,\n  getProfileThunk,\n  getStatusThunkCreator,\n  updateStatus\n})(ProfileContainer);","map":{"version":3,"sources":["/Volumes/Anton/FullStack/myApp/client/src/components/ProfilePage/ProfileContainer.jsx"],"names":["React","Profile","getAuth","savePhoto","saveProfile","getProfileThunk","getStatusThunkCreator","updateStatus","connect","Preloader","ProfileContainer","Component","refreshProfile","userId","props","match","params","id","auth","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","render","profile","status","globalError","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,eAAjC,EAAiDC,qBAAjD,EAAuEC,YAAvE,QAA0F,4BAA1F;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,qBAAtB;;AAEA,MAAMC,gBAAN,SAA+BV,KAAK,CAACW,SAArC,CAA+C;AAE7CC,EAAAA,cAAc,GAAG;AACf,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAArC;;AACA,QAAI,CAACJ,MAAL,EAAa;AACXA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWI,IAAX,CAAgBD,EAAzB;AACD;;AACD,SAAKH,KAAL,CAAWT,eAAX,CAA2BQ,MAA3B;AACA,SAAKC,KAAL,CAAWR,qBAAX,CAAiCO,MAAjC;AACD;;AACDM,EAAAA,iBAAiB,GAAG;AAClB,SAAKP,cAAL;AACD;;AACDQ,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AACjD;;AACA,QAAI,KAAKT,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAAxB,IAA8BI,SAAS,CAACN,KAAV,CAAgBC,MAAhB,CAAuBC,EAAzD,EAA6D;AAC3D,WAAKL,cAAL;AACD;AACF;;AACDY,EAAAA,MAAM,GAAG;AACP,wBACE,0CACC,CAAC,KAAKV,KAAL,CAAWW,OAAZ,gBAAoB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB,gBACD,oBAAC,OAAD;AACE,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWW,OADtB;AAEE,MAAA,WAAW,EAAE,KAAKX,KAAL,CAAWV,WAF1B;AAGE,MAAA,OAAO,EAAE,CAAC,KAAKU,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,EAHpC;AAIE,MAAA,SAAS,EAAE,KAAKH,KAAL,CAAWX,SAJxB;AAKE,MAAA,MAAM,EAAE,KAAKW,KAAL,CAAWY,MALrB;AAME,MAAA,YAAY,EAAE,KAAKZ,KAAL,CAAWP,YAN3B;AAOE,MAAA,WAAW,EAAE,KAAKO,KAAL,CAAWa,WAP1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF;AAeD;;AAnC4C;;AAuC/C,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLJ,IAAAA,OAAO,EAAEI,KAAK,CAACJ,OAAN,CAAcA,OADlB;AAELP,IAAAA,IAAI,EAAEhB,OAAO,CAAC2B,KAAD,CAFR;AAGLH,IAAAA,MAAM,EAACG,KAAK,CAACJ,OAAN,CAAcC,MAHhB;AAILC,IAAAA,WAAW,EAACE,KAAK,CAACJ,OAAN,CAAcE;AAJrB,GAAP;AAOD,CARD;;AAWA,eAAgBnB,OAAO,CAACoB,eAAD,EAAiB;AAAEzB,EAAAA,SAAF;AAAaC,EAAAA,WAAb;AAA0BC,EAAAA,eAA1B;AAA0CC,EAAAA,qBAA1C;AAAgEC,EAAAA;AAAhE,CAAjB,CAAP,CAAwGG,gBAAxG,CAAhB","sourcesContent":["import React from 'react'\nimport Profile from './Profile'\nimport { getAuth } from '../../redux/UsersSelectors'\nimport { savePhoto, saveProfile, getProfileThunk,getStatusThunkCreator,updateStatus} from '../../redux/ProfileReducer'\n\nimport { connect } from 'react-redux'\nimport Preloader from '../common/Preloader'\n\nclass ProfileContainer extends React.Component {\n \n  refreshProfile() {\n    let userId = this.props.match.params.id;\n    if (!userId) {\n      userId = this.props.auth.id\n    }\n    this.props.getProfileThunk(userId);\n    this.props.getStatusThunkCreator(userId);\n  }\n  componentDidMount() {\n    this.refreshProfile();\n  }\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    debugger\n    if (this.props.match.params.id != prevProps.match.params.id) {\n      this.refreshProfile();\n    }\n  }\n  render() {\n    return (\n      <>\n      {!this.props.profile?<Preloader/>:\n      <Profile\n        profile={this.props.profile}\n        saveProfile={this.props.saveProfile}\n        isOwner={!this.props.match.params.id}\n        savePhoto={this.props.savePhoto}\n        status={this.props.status}\n        updateStatus={this.props.updateStatus}\n        globalError={this.props.globalError}\n      />\n    }\n      </>\n    )\n  }\n}\n\n\nlet mapStateToProps = (state) => {\n  return {\n    profile: state.profile.profile,\n    auth: getAuth(state),\n    status:state.profile.status,\n    globalError:state.profile.globalError,\n    \n  }\n}\n\n\nexport default  connect(mapStateToProps,{ savePhoto, saveProfile, getProfileThunk,getStatusThunkCreator,updateStatus })(ProfileContainer);"]},"metadata":{},"sourceType":"module"}