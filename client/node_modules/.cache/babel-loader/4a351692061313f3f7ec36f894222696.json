{"ast":null,"code":"var _jsxFileName = \"/Users/anton/Desktop/myApp/client/src/components/Forms/Checkout/Checkout.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { ReduxCheckoutForm } from './CheckoutForm';\nimport { addOrdersThunk, addOrders } from '../../../redux/OrdersReducer';\nimport { Redirect } from 'react-router-dom';\n\nclass Checkout extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formData => {\n      debugger;\n      let data;\n\n      if (this.props.auth.isAuth) {\n        data = {\n          items: this.props.items,\n          inform: formData,\n          id: this.props.auth.user._id\n        };\n        alert(\"Hello anton\");\n      }\n\n      if (!this.props.auth.isAuth) {\n        data = {\n          items: this.props.items,\n          inform: formData\n        };\n        this.props.addOrders(data);\n        alert(\"Hello user\");\n      } else {\n        this.props.addOrdersThunk(data);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ReduxCheckoutForm, {\n      onSubmit: this.onSubmit,\n      errors: this.props.errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 10\n      }\n    });\n  }\n\n}\n\nlet mapStateToProps = state => {\n  debugger;\n  return {\n    errors: state.errors,\n    items: state.card.items,\n    auth: state.auth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addOrdersThunk,\n  addOrders\n})(Checkout);","map":{"version":3,"sources":["/Users/anton/Desktop/myApp/client/src/components/Forms/Checkout/Checkout.jsx"],"names":["React","connect","ReduxCheckoutForm","addOrdersThunk","addOrders","Redirect","Checkout","Component","onSubmit","formData","data","props","auth","isAuth","items","inform","id","user","_id","alert","render","errors","mapStateToProps","state","card"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAASC,iBAAT,QAAkC,gBAAlC;AACA,SAAQC,cAAR,EAAuBC,SAAvB,QAAuC,8BAAvC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;;AAGA,MAAMC,QAAN,SAAuBN,KAAK,CAACO,SAA7B,CAAsC;AAAA;AAAA;;AAAA,SAClCC,QADkC,GACtBC,QAAD,IAAc;AACrB;AACA,UAAIC,IAAJ;;AACA,UAAG,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,MAAnB,EAA0B;AACtBH,QAAAA,IAAI,GAAC;AAACI,UAAAA,KAAK,EAAC,KAAKH,KAAL,CAAWG,KAAlB;AAAwBC,UAAAA,MAAM,EAACN,QAA/B;AAAwCO,UAAAA,EAAE,EAAC,KAAKL,KAAL,CAAWC,IAAX,CAAgBK,IAAhB,CAAqBC;AAAhE,SAAL;AACAC,QAAAA,KAAK,CAAC,aAAD,CAAL;AACH;;AACD,UAAG,CAAC,KAAKR,KAAL,CAAWC,IAAX,CAAgBC,MAApB,EAA2B;AACvBH,QAAAA,IAAI,GAAC;AAACI,UAAAA,KAAK,EAAC,KAAKH,KAAL,CAAWG,KAAlB;AAAwBC,UAAAA,MAAM,EAACN;AAA/B,SAAL;AACA,aAAKE,KAAL,CAAWP,SAAX,CAAqBM,IAArB;AACAS,QAAAA,KAAK,CAAC,YAAD,CAAL;AACH,OAJD,MAKI;AACA,aAAKR,KAAL,CAAWR,cAAX,CAA0BO,IAA1B;AACH;AAEH,KAjBgC;AAAA;;AAmBrCU,EAAAA,MAAM,GAAE;AACJ,wBACI,oBAAC,iBAAD;AAAmB,MAAA,QAAQ,EAAE,KAAKZ,QAAlC;AAA4C,MAAA,MAAM,EAAE,KAAKG,KAAL,CAAWU,MAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAvBoC;;AA4BtC,IAAIC,eAAe,GAAEC,KAAD,IAAS;AACzB;AACA,SAAM;AACFF,IAAAA,MAAM,EAACE,KAAK,CAACF,MADX;AAEFP,IAAAA,KAAK,EAACS,KAAK,CAACC,IAAN,CAAWV,KAFf;AAGFF,IAAAA,IAAI,EAACW,KAAK,CAACX;AAHT,GAAN;AAKH,CAPD;;AAQA,eAAeX,OAAO,CAACqB,eAAD,EAAiB;AAACnB,EAAAA,cAAD;AAAgBC,EAAAA;AAAhB,CAAjB,CAAP,CAAoDE,QAApD,CAAf","sourcesContent":["import React from 'react'\nimport {connect} from 'react-redux'\nimport { ReduxCheckoutForm } from './CheckoutForm'\nimport {addOrdersThunk,addOrders} from '../../../redux/OrdersReducer'\nimport {Redirect} from 'react-router-dom'\n\n\nclass Checkout extends React.Component{\n    onSubmit = (formData) => {\n        debugger\n        let data;\n        if(this.props.auth.isAuth){\n            data={items:this.props.items,inform:formData,id:this.props.auth.user._id}\n            alert(\"Hello anton\")\n        }\n        if(!this.props.auth.isAuth){\n            data={items:this.props.items,inform:formData}\n            this.props.addOrders(data)\n            alert(\"Hello user\")\n        }\n        else{\n            this.props.addOrdersThunk(data)\n        }\n       \n     }\n   \n render(){\n     return(\n         <ReduxCheckoutForm onSubmit={this.onSubmit} errors={this.props.errors}/>\n     )\n }\n\n}\n\n\nlet mapStateToProps=(state)=>{\n    debugger\n    return{\n        errors:state.errors,\n        items:state.card.items,\n        auth:state.auth\n    }\n}\nexport default connect(mapStateToProps,{addOrdersThunk,addOrders})(Checkout)\n"]},"metadata":{},"sourceType":"module"}