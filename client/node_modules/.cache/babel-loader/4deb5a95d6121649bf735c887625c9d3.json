{"ast":null,"code":"Object.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar _isEmpty = _interopDefault(require('lodash/isEmpty'));\n\nvar _get$1 = _interopDefault(require('lodash/get'));\n\nvar _hasIn = _interopDefault(require('lodash/hasIn'));\n\nvar axios = _interopDefault(require('axios'));\n\nvar Qs = _interopDefault(require('qs'));\n\nvar _extend = _interopDefault(require('lodash/extend'));\n\nvar _isString = _interopDefault(require('lodash/isString'));\n\nvar _isBoolean = _interopDefault(require('lodash/isBoolean'));\n\nvar _isObject = _interopDefault(require('lodash/isObject'));\n\nvar _isNaN = _interopDefault(require('lodash/isNaN'));\n\nvar _isNil = _interopDefault(require('lodash/isNil'));\n\nvar _cloneDeep = _interopDefault(require('lodash/cloneDeep'));\n\nvar redux = require('redux');\n\nvar reactRedux = require('react-redux');\n\nvar thunk = _interopDefault(require('redux-thunk'));\n\nvar _forEach = _interopDefault(require('lodash/forEach'));\n\nvar _head = _interopDefault(require('lodash/head'));\n\nvar _isArray = _interopDefault(require('lodash/isArray'));\n\nvar _pick = _interopDefault(require('lodash/pick'));\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar semanticUiReact = require('semantic-ui-react');\n\nvar Overridable = _interopDefault(require('react-overridable'));\n\nvar _ = _interopDefault(require('lodash'));\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nvar ESRequestSerializer = /*#__PURE__*/function () {\n  function ESRequestSerializer() {\n    _classCallCheck(this, ESRequestSerializer);\n\n    this.serialize = this.serialize.bind(this);\n  }\n  /**\n   * Return a serialized version of the app state `query` for the API backend.\n   * @param {object} stateQuery the `query` state to serialize\n   */\n\n\n  _createClass(ESRequestSerializer, [{\n    key: \"serialize\",\n    value: function serialize(stateQuery) {\n      var queryString = stateQuery.queryString,\n          sortBy = stateQuery.sortBy,\n          sortOrder = stateQuery.sortOrder,\n          page = stateQuery.page,\n          size = stateQuery.size;\n      var bodyParams = {};\n\n      if (!_isEmpty(queryString)) {\n        bodyParams['query'] = {\n          query_string: {\n            query: queryString\n          }\n        };\n      }\n\n      if (sortBy) {\n        var sortObj = {};\n        sortObj[sortBy] = sortOrder && sortOrder === 'desc' ? 'desc' : 'asc';\n        bodyParams['sort'] = sortObj;\n      }\n\n      if (size > 0) {\n        bodyParams['size'] = size;\n      }\n\n      if (page > 0) {\n        var s = size > 0 ? size : 0;\n        var from = (page - 1) * s;\n        bodyParams['from'] = from;\n      }\n\n      return bodyParams;\n    }\n  }]);\n\n  return ESRequestSerializer;\n}();\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\n\nvar ESResponseSerializer = /*#__PURE__*/function () {\n  function ESResponseSerializer() {\n    _classCallCheck(this, ESResponseSerializer);\n\n    this.serialize = this.serialize.bind(this);\n  }\n  /**\n   * Return a serialized version of the API backend response for the app state `results`.\n   * @param {object} payload the backend response payload\n   */\n\n\n  _createClass(ESResponseSerializer, [{\n    key: \"serialize\",\n    value: function serialize(payload) {\n      return {\n        aggregations: payload.aggregations || {},\n        hits: payload.hits.hits.map(function (hit) {\n          return hit._source;\n        }),\n        total: payload.hits.total.value\n      };\n    }\n  }]);\n\n  return ESResponseSerializer;\n}();\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar runtime_1 = createCommonjsModule(function (module) {\n  /**\n   * Copyright (c) 2014-present, Facebook, Inc.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   */\n  var runtime = function (exports) {\n    var Op = Object.prototype;\n    var hasOwn = Op.hasOwnProperty;\n    var undefined$1; // More compressible than void 0.\n\n    var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n    var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n    var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n    var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n    function wrap(innerFn, outerFn, self, tryLocsList) {\n      // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n      var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n      var generator = Object.create(protoGenerator.prototype);\n      var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n      // .throw, and .return methods.\n\n      generator._invoke = makeInvokeMethod(innerFn, self, context);\n      return generator;\n    }\n\n    exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n    // record like context.tryEntries[i].completion. This interface could\n    // have been (and was previously) designed to take a closure to be\n    // invoked without arguments, but in all the cases we care about we\n    // already have an existing method we want to call, so there's no need\n    // to create a new function object. We can even get away with assuming\n    // the method takes exactly one argument, since that happens to be true\n    // in every case, so we don't have to touch the arguments object. The\n    // only additional allocation required is the completion record, which\n    // has a stable shape and so hopefully should be cheap to allocate.\n\n    function tryCatch(fn, obj, arg) {\n      try {\n        return {\n          type: \"normal\",\n          arg: fn.call(obj, arg)\n        };\n      } catch (err) {\n        return {\n          type: \"throw\",\n          arg: err\n        };\n      }\n    }\n\n    var GenStateSuspendedStart = \"suspendedStart\";\n    var GenStateSuspendedYield = \"suspendedYield\";\n    var GenStateExecuting = \"executing\";\n    var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n    // breaking out of the dispatch switch statement.\n\n    var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n    // .constructor.prototype properties for functions that return Generator\n    // objects. For full spec compliance, you may wish to configure your\n    // minifier not to mangle the names of these two functions.\n\n    function Generator() {}\n\n    function GeneratorFunction() {}\n\n    function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n    // don't natively support it.\n\n\n    var IteratorPrototype = {};\n\n    IteratorPrototype[iteratorSymbol] = function () {\n      return this;\n    };\n\n    var getProto = Object.getPrototypeOf;\n    var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n    if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n      // This environment has a native %IteratorPrototype%; use it instead\n      // of the polyfill.\n      IteratorPrototype = NativeIteratorPrototype;\n    }\n\n    var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n    GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n    GeneratorFunctionPrototype.constructor = GeneratorFunction;\n    GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n    // Iterator interface in terms of a single ._invoke method.\n\n    function defineIteratorMethods(prototype) {\n      [\"next\", \"throw\", \"return\"].forEach(function (method) {\n        prototype[method] = function (arg) {\n          return this._invoke(method, arg);\n        };\n      });\n    }\n\n    exports.isGeneratorFunction = function (genFun) {\n      var ctor = typeof genFun === \"function\" && genFun.constructor;\n      return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n      // do is to check its .name property.\n      (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n    };\n\n    exports.mark = function (genFun) {\n      if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n      } else {\n        genFun.__proto__ = GeneratorFunctionPrototype;\n\n        if (!(toStringTagSymbol in genFun)) {\n          genFun[toStringTagSymbol] = \"GeneratorFunction\";\n        }\n      }\n\n      genFun.prototype = Object.create(Gp);\n      return genFun;\n    }; // Within the body of any async function, `await x` is transformed to\n    // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n    // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n    // meant to be awaited.\n\n\n    exports.awrap = function (arg) {\n      return {\n        __await: arg\n      };\n    };\n\n    function AsyncIterator(generator, PromiseImpl) {\n      function invoke(method, arg, resolve, reject) {\n        var record = tryCatch(generator[method], generator, arg);\n\n        if (record.type === \"throw\") {\n          reject(record.arg);\n        } else {\n          var result = record.arg;\n          var value = result.value;\n\n          if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n            return PromiseImpl.resolve(value.__await).then(function (value) {\n              invoke(\"next\", value, resolve, reject);\n            }, function (err) {\n              invoke(\"throw\", err, resolve, reject);\n            });\n          }\n\n          return PromiseImpl.resolve(value).then(function (unwrapped) {\n            // When a yielded Promise is resolved, its final value becomes\n            // the .value of the Promise<{value,done}> result for the\n            // current iteration.\n            result.value = unwrapped;\n            resolve(result);\n          }, function (error) {\n            // If a rejected Promise was yielded, throw the rejection back\n            // into the async generator function so it can be handled there.\n            return invoke(\"throw\", error, resolve, reject);\n          });\n        }\n      }\n\n      var previousPromise;\n\n      function enqueue(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n\n        return previousPromise = // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n        // invocations of the iterator.\n        callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      } // Define the unified helper method that is used to implement .next,\n      // .throw, and .return (see defineIteratorMethods).\n\n\n      this._invoke = enqueue;\n    }\n\n    defineIteratorMethods(AsyncIterator.prototype);\n\n    AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n      return this;\n    };\n\n    exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n    // AsyncIterator objects; they just return a Promise for the value of\n    // the final result produced by the iterator.\n\n    exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n      if (PromiseImpl === void 0) PromiseImpl = Promise;\n      var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n      return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function (result) {\n        return result.done ? result.value : iter.next();\n      });\n    };\n\n    function makeInvokeMethod(innerFn, self, context) {\n      var state = GenStateSuspendedStart;\n      return function invoke(method, arg) {\n        if (state === GenStateExecuting) {\n          throw new Error(\"Generator is already running\");\n        }\n\n        if (state === GenStateCompleted) {\n          if (method === \"throw\") {\n            throw arg;\n          } // Be forgiving, per 25.3.3.3.3 of the spec:\n          // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n          return doneResult();\n        }\n\n        context.method = method;\n        context.arg = arg;\n\n        while (true) {\n          var delegate = context.delegate;\n\n          if (delegate) {\n            var delegateResult = maybeInvokeDelegate(delegate, context);\n\n            if (delegateResult) {\n              if (delegateResult === ContinueSentinel) continue;\n              return delegateResult;\n            }\n          }\n\n          if (context.method === \"next\") {\n            // Setting context._sent for legacy support of Babel's\n            // function.sent implementation.\n            context.sent = context._sent = context.arg;\n          } else if (context.method === \"throw\") {\n            if (state === GenStateSuspendedStart) {\n              state = GenStateCompleted;\n              throw context.arg;\n            }\n\n            context.dispatchException(context.arg);\n          } else if (context.method === \"return\") {\n            context.abrupt(\"return\", context.arg);\n          }\n\n          state = GenStateExecuting;\n          var record = tryCatch(innerFn, self, context);\n\n          if (record.type === \"normal\") {\n            // If an exception is thrown from innerFn, we leave state ===\n            // GenStateExecuting and loop back for another invocation.\n            state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n            if (record.arg === ContinueSentinel) {\n              continue;\n            }\n\n            return {\n              value: record.arg,\n              done: context.done\n            };\n          } else if (record.type === \"throw\") {\n            state = GenStateCompleted; // Dispatch the exception by looping back around to the\n            // context.dispatchException(context.arg) call above.\n\n            context.method = \"throw\";\n            context.arg = record.arg;\n          }\n        }\n      };\n    } // Call delegate.iterator[context.method](context.arg) and handle the\n    // result, either by returning a { value, done } result from the\n    // delegate iterator, or by modifying context.method and context.arg,\n    // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n    function maybeInvokeDelegate(delegate, context) {\n      var method = delegate.iterator[context.method];\n\n      if (method === undefined$1) {\n        // A .throw or .return when the delegate iterator has no .throw\n        // method always terminates the yield* loop.\n        context.delegate = null;\n\n        if (context.method === \"throw\") {\n          // Note: [\"return\"] must be used for ES3 parsing compatibility.\n          if (delegate.iterator[\"return\"]) {\n            // If the delegate iterator has a return method, give it a\n            // chance to clean up.\n            context.method = \"return\";\n            context.arg = undefined$1;\n            maybeInvokeDelegate(delegate, context);\n\n            if (context.method === \"throw\") {\n              // If maybeInvokeDelegate(context) changed context.method from\n              // \"return\" to \"throw\", let that override the TypeError below.\n              return ContinueSentinel;\n            }\n          }\n\n          context.method = \"throw\";\n          context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n        }\n\n        return ContinueSentinel;\n      }\n\n      var record = tryCatch(method, delegate.iterator, context.arg);\n\n      if (record.type === \"throw\") {\n        context.method = \"throw\";\n        context.arg = record.arg;\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      var info = record.arg;\n\n      if (!info) {\n        context.method = \"throw\";\n        context.arg = new TypeError(\"iterator result is not an object\");\n        context.delegate = null;\n        return ContinueSentinel;\n      }\n\n      if (info.done) {\n        // Assign the result of the finished delegate to the temporary\n        // variable specified by delegate.resultName (see delegateYield).\n        context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n        context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n        // exception, let the outer generator proceed normally. If\n        // context.method was \"next\", forget context.arg since it has been\n        // \"consumed\" by the delegate iterator. If context.method was\n        // \"return\", allow the original .return call to continue in the\n        // outer generator.\n\n        if (context.method !== \"return\") {\n          context.method = \"next\";\n          context.arg = undefined$1;\n        }\n      } else {\n        // Re-yield the result returned by the delegate method.\n        return info;\n      } // The delegate iterator is finished, so forget it and continue with\n      // the outer generator.\n\n\n      context.delegate = null;\n      return ContinueSentinel;\n    } // Define Generator.prototype.{next,throw,return} in terms of the\n    // unified ._invoke helper method.\n\n\n    defineIteratorMethods(Gp);\n    Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n    // @@iterator function is called on it. Some browsers' implementations of the\n    // iterator prototype chain incorrectly implement this, causing the Generator\n    // object to not be returned from this call. This ensures that doesn't happen.\n    // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n    Gp[iteratorSymbol] = function () {\n      return this;\n    };\n\n    Gp.toString = function () {\n      return \"[object Generator]\";\n    };\n\n    function pushTryEntry(locs) {\n      var entry = {\n        tryLoc: locs[0]\n      };\n\n      if (1 in locs) {\n        entry.catchLoc = locs[1];\n      }\n\n      if (2 in locs) {\n        entry.finallyLoc = locs[2];\n        entry.afterLoc = locs[3];\n      }\n\n      this.tryEntries.push(entry);\n    }\n\n    function resetTryEntry(entry) {\n      var record = entry.completion || {};\n      record.type = \"normal\";\n      delete record.arg;\n      entry.completion = record;\n    }\n\n    function Context(tryLocsList) {\n      // The root entry object (effectively a try statement without a catch\n      // or a finally block) gives us a place to store values thrown from\n      // locations where there is no enclosing try statement.\n      this.tryEntries = [{\n        tryLoc: \"root\"\n      }];\n      tryLocsList.forEach(pushTryEntry, this);\n      this.reset(true);\n    }\n\n    exports.keys = function (object) {\n      var keys = [];\n\n      for (var key in object) {\n        keys.push(key);\n      }\n\n      keys.reverse(); // Rather than returning an object with a next method, we keep\n      // things simple and return the next function itself.\n\n      return function next() {\n        while (keys.length) {\n          var key = keys.pop();\n\n          if (key in object) {\n            next.value = key;\n            next.done = false;\n            return next;\n          }\n        } // To avoid creating an additional object, we just hang the .value\n        // and .done properties off the next function object itself. This\n        // also ensures that the minifier will not anonymize the function.\n\n\n        next.done = true;\n        return next;\n      };\n    };\n\n    function values(iterable) {\n      if (iterable) {\n        var iteratorMethod = iterable[iteratorSymbol];\n\n        if (iteratorMethod) {\n          return iteratorMethod.call(iterable);\n        }\n\n        if (typeof iterable.next === \"function\") {\n          return iterable;\n        }\n\n        if (!isNaN(iterable.length)) {\n          var i = -1,\n              next = function next() {\n            while (++i < iterable.length) {\n              if (hasOwn.call(iterable, i)) {\n                next.value = iterable[i];\n                next.done = false;\n                return next;\n              }\n            }\n\n            next.value = undefined$1;\n            next.done = true;\n            return next;\n          };\n\n          return next.next = next;\n        }\n      } // Return an iterator with no values.\n\n\n      return {\n        next: doneResult\n      };\n    }\n\n    exports.values = values;\n\n    function doneResult() {\n      return {\n        value: undefined$1,\n        done: true\n      };\n    }\n\n    Context.prototype = {\n      constructor: Context,\n      reset: function (skipTempReset) {\n        this.prev = 0;\n        this.next = 0; // Resetting context._sent for legacy support of Babel's\n        // function.sent implementation.\n\n        this.sent = this._sent = undefined$1;\n        this.done = false;\n        this.delegate = null;\n        this.method = \"next\";\n        this.arg = undefined$1;\n        this.tryEntries.forEach(resetTryEntry);\n\n        if (!skipTempReset) {\n          for (var name in this) {\n            // Not sure about the optimal order of these conditions:\n            if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n              this[name] = undefined$1;\n            }\n          }\n        }\n      },\n      stop: function () {\n        this.done = true;\n        var rootEntry = this.tryEntries[0];\n        var rootRecord = rootEntry.completion;\n\n        if (rootRecord.type === \"throw\") {\n          throw rootRecord.arg;\n        }\n\n        return this.rval;\n      },\n      dispatchException: function (exception) {\n        if (this.done) {\n          throw exception;\n        }\n\n        var context = this;\n\n        function handle(loc, caught) {\n          record.type = \"throw\";\n          record.arg = exception;\n          context.next = loc;\n\n          if (caught) {\n            // If the dispatched exception was caught by a catch block,\n            // then let that catch block handle the exception normally.\n            context.method = \"next\";\n            context.arg = undefined$1;\n          }\n\n          return !!caught;\n        }\n\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n          var record = entry.completion;\n\n          if (entry.tryLoc === \"root\") {\n            // Exception thrown outside of any try block that could handle\n            // it, so set the completion value of the entire function to\n            // throw the exception.\n            return handle(\"end\");\n          }\n\n          if (entry.tryLoc <= this.prev) {\n            var hasCatch = hasOwn.call(entry, \"catchLoc\");\n            var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n            if (hasCatch && hasFinally) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              } else if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else if (hasCatch) {\n              if (this.prev < entry.catchLoc) {\n                return handle(entry.catchLoc, true);\n              }\n            } else if (hasFinally) {\n              if (this.prev < entry.finallyLoc) {\n                return handle(entry.finallyLoc);\n              }\n            } else {\n              throw new Error(\"try statement without catch or finally\");\n            }\n          }\n        }\n      },\n      abrupt: function (type, arg) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n            var finallyEntry = entry;\n            break;\n          }\n        }\n\n        if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n          // Ignore the finally entry if control is not jumping to a\n          // location outside the try/catch block.\n          finallyEntry = null;\n        }\n\n        var record = finallyEntry ? finallyEntry.completion : {};\n        record.type = type;\n        record.arg = arg;\n\n        if (finallyEntry) {\n          this.method = \"next\";\n          this.next = finallyEntry.finallyLoc;\n          return ContinueSentinel;\n        }\n\n        return this.complete(record);\n      },\n      complete: function (record, afterLoc) {\n        if (record.type === \"throw\") {\n          throw record.arg;\n        }\n\n        if (record.type === \"break\" || record.type === \"continue\") {\n          this.next = record.arg;\n        } else if (record.type === \"return\") {\n          this.rval = this.arg = record.arg;\n          this.method = \"return\";\n          this.next = \"end\";\n        } else if (record.type === \"normal\" && afterLoc) {\n          this.next = afterLoc;\n        }\n\n        return ContinueSentinel;\n      },\n      finish: function (finallyLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.finallyLoc === finallyLoc) {\n            this.complete(entry.completion, entry.afterLoc);\n            resetTryEntry(entry);\n            return ContinueSentinel;\n          }\n        }\n      },\n      \"catch\": function (tryLoc) {\n        for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n          var entry = this.tryEntries[i];\n\n          if (entry.tryLoc === tryLoc) {\n            var record = entry.completion;\n\n            if (record.type === \"throw\") {\n              var thrown = record.arg;\n              resetTryEntry(entry);\n            }\n\n            return thrown;\n          }\n        } // The context.catch method must only be called with a location\n        // argument that corresponds to a known catch block.\n\n\n        throw new Error(\"illegal catch attempt\");\n      },\n      delegateYield: function (iterable, resultName, nextLoc) {\n        this.delegate = {\n          iterator: values(iterable),\n          resultName: resultName,\n          nextLoc: nextLoc\n        };\n\n        if (this.method === \"next\") {\n          // Deliberately forget the last sent value so that we don't\n          // accidentally pass it on to the delegate.\n          this.arg = undefined$1;\n        }\n\n        return ContinueSentinel;\n      }\n    }; // Regardless of whether this script is executing as a CommonJS module\n    // or not, return the runtime object so that we can declare the variable\n    // regeneratorRuntime in the outer scope, which allows this module to be\n    // injected easily by `bin/regenerator --include-runtime script.js`.\n\n    return exports;\n  }( // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  module.exports);\n\n  try {\n    regeneratorRuntime = runtime;\n  } catch (accidentalStrictMode) {\n    // This module should not be running in strict mode, so the above\n    // assignment should always work unless something is misconfigured. Just\n    // in case runtime.js accidentally runs in strict mode, we can escape\n    // strict mode using a global Function call. This could conceivably fail\n    // if a Content Security Policy forbids using Function, but in that case\n    // the proper solution is to fix the accidental strict mode problem. If\n    // you've misconfigured your bundler to force strict mode and applied a\n    // CSP to forbid Function, and you're not willing to fix either of those\n    // problems, please detail your unique predicament in a GitHub issue.\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n});\nvar regenerator = runtime_1;\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nvar ESSearchApi = /*#__PURE__*/function () {\n  function ESSearchApi(config) {\n    _classCallCheck(this, ESSearchApi);\n\n    this.axiosConfig = _get$1(config, 'axios', {});\n    this.validateAxiosConfig();\n    this.initSerializers(config);\n    this.initInterceptors(config);\n    this.initAxios();\n    this.search = this.search.bind(this);\n  }\n\n  _createClass(ESSearchApi, [{\n    key: \"validateAxiosConfig\",\n    value: function validateAxiosConfig() {\n      if (!_hasIn(this.axiosConfig, 'url')) {\n        throw new Error('ESSearchApi config: `node` field is required.');\n      }\n    }\n  }, {\n    key: \"initInterceptors\",\n    value: function initInterceptors(config) {\n      this.requestInterceptor = _get$1(config, 'interceptors.request', undefined);\n      this.responseInterceptor = _get$1(config, 'interceptors.response', undefined);\n    }\n  }, {\n    key: \"initSerializers\",\n    value: function initSerializers(config) {\n      var requestSerializerCls = _get$1(config, 'es.requestSerializer', ESRequestSerializer);\n\n      var responseSerializerCls = _get$1(config, 'es.responseSerializer', ESResponseSerializer);\n\n      this.requestSerializer = new requestSerializerCls();\n      this.responseSerializer = new responseSerializerCls();\n    }\n  }, {\n    key: \"initAxios\",\n    value: function initAxios() {\n      this.http = axios.create(this.axiosConfig);\n      this.addInterceptors();\n    }\n  }, {\n    key: \"addInterceptors\",\n    value: function addInterceptors() {\n      if (this.requestInterceptor) {\n        this.http.interceptors.request.use(this.requestInterceptor.resolve, this.requestInterceptor.reject);\n      }\n\n      if (this.responseInterceptor) {\n        this.http.interceptors.request.use(this.responseInterceptor.resolve, this.responseInterceptor.reject);\n      }\n    }\n    /**\n     * Perform the backend request to search and return the serialized list of results for the app state `results`.\n     * @param {string} stateQuery the `query` state with the user input\n     */\n\n  }, {\n    key: \"search\",\n    value: function () {\n      var _search = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee(stateQuery) {\n        var payload, response;\n        return regenerator.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                payload = this.requestSerializer.serialize(stateQuery);\n                _context.next = 3;\n                return this.http.request({\n                  method: 'POST',\n                  data: payload\n                });\n\n              case 3:\n                response = _context.sent;\n                return _context.abrupt(\"return\", this.responseSerializer.serialize(response.data));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function search(_x) {\n        return _search.apply(this, arguments);\n      }\n\n      return search;\n    }()\n  }]);\n\n  return ESSearchApi;\n}();\n/** Default backend request serializer */\n\n\nvar InvenioRequestSerializer = /*#__PURE__*/function () {\n  function InvenioRequestSerializer() {\n    var _this = this;\n\n    _classCallCheck(this, InvenioRequestSerializer);\n\n    this._addFilter = function (filter, filterUrlParams) {\n      if (!Array.isArray(filter)) {\n        throw new Error(\"Filter value \\\"\".concat(filter, \"\\\" in query state must be an array.\"));\n      }\n\n      if (!(filter.length === 2 || filter.length === 3)) {\n        throw new Error(\"Filter value \\\"\".concat(filter, \"\\\" in query state must be an array of 2 or 3 elements\"));\n      }\n\n      var aggName = filter[0];\n      var fieldValue = filter[1];\n      filterUrlParams[aggName] = fieldValue;\n      var hasChild = filter.length === 3;\n\n      if (hasChild) {\n        _this._addFilter(filter[2], filterUrlParams);\n      }\n    };\n\n    this._addFilters = function (filters) {\n      if (!Array.isArray(filters)) {\n        throw new Error(\"Filters query state \\\"\".concat(filters, \"\\\" must be an array.\"));\n      }\n      /**\n       * input: [\n       *   [ 'type_agg', 'value1' ]\n       *   [ 'type_agg', 'value2', [ 'subtype_agg', 'a value' ] ]\n       * ]\n       */\n\n\n      var filterUrlParams = {};\n      filters.forEach(function (filter) {\n        _this._addFilter(filter, filterUrlParams);\n      });\n      /**\n       * output: {\n       *  type_agg: 'value1'.\n       *  subtype_agg: 'a value'\n       * }\n       */\n\n      return filterUrlParams;\n    };\n\n    this.serialize = this.serialize.bind(this);\n  }\n\n  _createClass(InvenioRequestSerializer, [{\n    key: \"serialize\",\n\n    /**\n     * Return a serialized version of the app state `query` for the API backend.\n     * @param {object} stateQuery the `query` state to serialize\n     */\n    value: function serialize(stateQuery) {\n      var queryString = stateQuery.queryString,\n          sortBy = stateQuery.sortBy,\n          sortOrder = stateQuery.sortOrder,\n          page = stateQuery.page,\n          size = stateQuery.size,\n          filters = stateQuery.filters;\n      var getParams = {};\n\n      if (queryString !== null) {\n        getParams['q'] = queryString;\n      }\n\n      if (sortBy !== null) {\n        getParams['sort'] = sortBy;\n\n        if (sortOrder !== null) {\n          getParams['sort'] = sortOrder === 'desc' ? \"-\".concat(sortBy) : sortBy;\n        }\n      }\n\n      if (page > 0) {\n        getParams['page'] = page;\n      }\n\n      if (size > 0) {\n        getParams['size'] = size;\n      }\n\n      var filterParams = this._addFilters(filters);\n\n      _extend(getParams, filterParams);\n\n      return Qs.stringify(getParams, {\n        arrayFormat: 'repeat'\n      });\n    }\n  }]);\n\n  return InvenioRequestSerializer;\n}();\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\n/** Default backend response serializer */\n\n\nvar InvenioResponseSerializer = /*#__PURE__*/function () {\n  function InvenioResponseSerializer() {\n    _classCallCheck(this, InvenioResponseSerializer);\n\n    this.serialize = this.serialize.bind(this);\n  }\n  /**\n   * Return a serialized version of the API backend response for the app state `results`.\n   * @param {object} payload the backend response payload\n   */\n\n\n  _createClass(InvenioResponseSerializer, [{\n    key: \"serialize\",\n    value: function serialize(payload) {\n      return {\n        aggregations: payload.aggregations || {},\n        hits: payload.hits.hits,\n        total: payload.hits.total\n      };\n    }\n  }]);\n\n  return InvenioResponseSerializer;\n}();\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar InvenioSearchApi = /*#__PURE__*/function () {\n  function InvenioSearchApi(config) {\n    _classCallCheck(this, InvenioSearchApi);\n\n    this.axiosConfig = _get$1(config, 'axios', {});\n    this.validateAxiosConfig();\n    this.initSerializers(config);\n    this.initInterceptors(config);\n    this.initAxios();\n    this.search = this.search.bind(this);\n  }\n\n  _createClass(InvenioSearchApi, [{\n    key: \"validateAxiosConfig\",\n    value: function validateAxiosConfig() {\n      if (!_hasIn(this.axiosConfig, 'url')) {\n        throw new Error('InvenioSearchApi config: `url` field is required.');\n      }\n    }\n  }, {\n    key: \"initInterceptors\",\n    value: function initInterceptors(config) {\n      this.requestInterceptor = _get$1(config, 'interceptors.request', undefined);\n      this.responseInterceptor = _get$1(config, 'interceptors.response', undefined);\n    }\n  }, {\n    key: \"initSerializers\",\n    value: function initSerializers(config) {\n      var requestSerializerCls = _get$1(config, 'invenio.requestSerializer', InvenioRequestSerializer);\n\n      var responseSerializerCls = _get$1(config, 'invenio.responseSerializer', InvenioResponseSerializer);\n\n      this.requestSerializer = new requestSerializerCls();\n      this.responseSerializer = new responseSerializerCls();\n    }\n  }, {\n    key: \"initAxios\",\n    value: function initAxios() {\n      var axiosConfig = _objectSpread2({\n        paramsSerializer: this.requestSerializer.serialize\n      }, this.axiosConfig);\n\n      this.http = axios.create(axiosConfig);\n      this.addInterceptors();\n    }\n  }, {\n    key: \"addInterceptors\",\n    value: function addInterceptors() {\n      if (this.requestInterceptor) {\n        this.http.interceptors.request.use(this.requestInterceptor.resolve, this.requestInterceptor.reject);\n      }\n\n      if (this.responseInterceptor) {\n        this.http.interceptors.request.use(this.responseInterceptor.resolve, this.responseInterceptor.reject);\n      }\n    }\n    /**\n     * Perform the backend request to search and return the serialized list of results for the app state `results`.\n     * @param {string} stateQuery the `query` state with the user input\n     */\n\n  }, {\n    key: \"search\",\n    value: function () {\n      var _search = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee(stateQuery) {\n        var response;\n        return regenerator.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.http.request({\n                  params: stateQuery\n                });\n\n              case 2:\n                response = _context.sent;\n                return _context.abrupt(\"return\", this.responseSerializer.serialize(response.data));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function search(_x) {\n        return _search.apply(this, arguments);\n      }\n\n      return search;\n    }()\n  }]);\n\n  return InvenioSearchApi;\n}();\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nvar InvenioSuggestionRequestSerializer = /*#__PURE__*/function () {\n  function InvenioSuggestionRequestSerializer(queryField) {\n    _classCallCheck(this, InvenioSuggestionRequestSerializer);\n\n    this.queryField = queryField;\n    this.serialize = this.serialize.bind(this);\n  }\n  /**\n   * Return a serialized version of the app state `query` for the API backend.\n   * @param {object} stateQuery the `query` state to serialize\n   */\n\n\n  _createClass(InvenioSuggestionRequestSerializer, [{\n    key: \"serialize\",\n    value: function serialize(stateQuery) {\n      var suggestionString = stateQuery.suggestionString;\n      var getParams = {};\n\n      if (suggestionString !== null) {\n        getParams['q'] = this.queryField + ':' + suggestionString;\n      }\n\n      return Qs.stringify(getParams, {\n        arrayFormat: 'repeat',\n        encode: false\n      });\n    }\n  }]);\n\n  return InvenioSuggestionRequestSerializer;\n}();\n\nvar InvenioSuggestionResponseSerializer = /*#__PURE__*/function () {\n  function InvenioSuggestionResponseSerializer(responseField) {\n    var _this = this;\n\n    _classCallCheck(this, InvenioSuggestionResponseSerializer);\n\n    this._serializeSuggestions = function (responseHits) {\n      return Array.from(new Set(responseHits.map(function (hit) {\n        return _get$1(hit.metadata, _this.responseFieldPath);\n      })));\n    };\n\n    this.responseFieldPath = responseField.split('.');\n    this.serialize = this.serialize.bind(this);\n  }\n\n  _createClass(InvenioSuggestionResponseSerializer, [{\n    key: \"serialize\",\n\n    /**\n     * Return a serialized version of the API backend response for the app state `suggestions`.\n     * @param {object} payload the backend response payload\n     */\n    value: function serialize(payload) {\n      return {\n        suggestions: this._serializeSuggestions(payload.hits.hits || [])\n      };\n    }\n  }]);\n\n  return InvenioSuggestionResponseSerializer;\n}();\n\nvar InvenioSuggestionApi = /*#__PURE__*/function (_InvenioSearchApi) {\n  _inherits(InvenioSuggestionApi, _InvenioSearchApi);\n\n  var _super = _createSuper(InvenioSuggestionApi);\n\n  function InvenioSuggestionApi() {\n    _classCallCheck(this, InvenioSuggestionApi);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(InvenioSuggestionApi, [{\n    key: \"validateConfig\",\n    value: function validateConfig(config) {\n      _get(_getPrototypeOf(InvenioSuggestionApi.prototype), \"validateConfig\", this).call(this, config);\n\n      if (!_hasIn(config, 'invenio.suggestions.queryField')) {\n        throw new Error('InvenioSuggestionApi config: `invenio.suggestions.queryField` is required.');\n      }\n\n      if (!_hasIn(config, 'invenio.suggestions.responseField')) {\n        throw new Error('InvenioSuggestionApi config: `invenio.suggestions.queryField` is responseField.');\n      }\n    }\n  }, {\n    key: \"initSerializers\",\n    value: function initSerializers(config) {\n      var requestSerializerCls = _get$1(config, 'invenio.requestSerializer', InvenioSuggestionRequestSerializer);\n\n      var responseSerializerCls = _get$1(config, 'invenio.responseSerializer', InvenioSuggestionResponseSerializer);\n\n      this.requestSerializer = new requestSerializerCls(config.invenio.suggestions.queryField);\n      this.responseSerializer = new responseSerializerCls(config.invenio.suggestions.responseField);\n    }\n  }]);\n\n  return InvenioSuggestionApi;\n}(InvenioSearchApi);\n\nvar pushHistory = function pushHistory(query) {\n  if (window.history.pushState) {\n    window.history.pushState({\n      path: query\n    }, '', query);\n  }\n};\n\nvar replaceHistory = function replaceHistory(query) {\n  if (window.history.replaceState) {\n    window.history.replaceState({\n      path: query\n    }, '', query);\n  }\n};\n/** Default URL parser implementation */\n\n\nvar UrlParser = /*#__PURE__*/function () {\n  function UrlParser() {\n    _classCallCheck(this, UrlParser);\n\n    this._sanitizeParamValue = function (value) {\n      var parsedValue = parseInt(value);\n\n      if (_isNaN(parsedValue)) {\n        try {\n          var _value = JSON.parse(value);\n\n          if (!_isNil(_value)) {\n            parsedValue = _value;\n          }\n        } catch (e) {\n          if (value !== 'undefined') {\n            parsedValue = value;\n          } else {\n            console.error(\"Cannot parse value \".concat(value, \".\"));\n          }\n        }\n      }\n\n      return parsedValue;\n    };\n\n    this.parse = this.parse.bind(this);\n  }\n\n  _createClass(UrlParser, [{\n    key: \"parse\",\n\n    /**\n     * Parse the URL query string and return an object with all the params.\n     * @param {string} queryString the query string to parse\n     */\n    value: function parse() {\n      var _this = this;\n\n      var queryString = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      var parsedParams = Qs.parse(queryString, {\n        ignoreQueryPrefix: true\n      });\n      var params = {};\n      Object.entries(parsedParams).forEach(function (entry) {\n        var key = entry[0];\n        var value = entry[1];\n        params[key] = _this._sanitizeParamValue(value);\n      });\n      return params;\n    }\n  }]);\n\n  return UrlParser;\n}();\n/** Default implementation for a param validator class */\n\n\nvar UrlParamValidator = function UrlParamValidator() {\n  _classCallCheck(this, UrlParamValidator);\n\n  this.isValid = function (key, value) {\n    return true;\n  };\n};\n/** Object responsible to update the URL query string and parse it to update the app state */\n\n\nvar UrlHandlerApi = /*#__PURE__*/function () {\n  function UrlHandlerApi() {\n    var _this2 = this;\n\n    var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, UrlHandlerApi);\n\n    this._filterListToString = function (filter) {\n      var childFilter = filter.length === 3 ? _this2.urlFilterSeparator.concat(_this2._filterListToString(filter[2])) : '';\n      return \"\".concat(filter[0], \":\").concat(filter[1]).concat(childFilter);\n    };\n\n    this._mapQueryStateToUrlParams = function (queryState) {\n      var params = {};\n      Object.keys(queryState).filter(function (stateKey) {\n        return stateKey in _this2.urlParamsMapping;\n      }).filter(function (stateKey) {\n        // filter out negative or null values\n        if ((stateKey === 'page' || stateKey === 'size') && queryState[stateKey] <= 0) {\n          return false;\n        }\n\n        return queryState[stateKey] !== null;\n      }).forEach(function (stateKey) {\n        var paramKey = _this2.urlParamsMapping[stateKey];\n\n        if (stateKey === 'filters') {\n          params[paramKey] = queryState[stateKey].map(function (filter) {\n            return _this2._filterListToString(filter);\n          });\n        } else {\n          params[paramKey] = queryState[stateKey];\n        }\n      }); // will omit undefined and null values from the query\n\n      return Qs.stringify(params, {\n        addQueryPrefix: true,\n        skipNulls: true,\n        indices: false // order for filters params is not important, remove indices\n\n      });\n    };\n\n    this._filterStringToList = function (filterStr) {\n      var childSepPos = filterStr.indexOf(_this2.urlFilterSeparator);\n      var hasChild = childSepPos > -1;\n      var aggNamePos = filterStr.indexOf(':');\n\n      if (aggNamePos === -1) {\n        throw new Error(\"Filter \\\"\".concat(filterStr, \"\\\" not parsable. Format expected: \\\"<agg name>:<value>\\\"\"));\n      }\n\n      var aggName = filterStr.slice(0, aggNamePos);\n      var end = hasChild ? childSepPos : filterStr.length;\n      var value = filterStr.slice(aggNamePos + 1, end);\n      var filterList = [aggName, value];\n\n      if (hasChild) {\n        var childFilter = filterStr.slice(childSepPos + 1, filterStr.length);\n        filterList.push(_this2._filterStringToList(childFilter));\n      }\n\n      return filterList;\n    };\n\n    this._mapUrlParamsToQueryState = function (urlParamsObj) {\n      var result = {};\n      Object.keys(urlParamsObj).forEach(function (paramKey) {\n        if (_this2.urlParamValidator.isValid(paramKey, urlParamsObj[paramKey])) {\n          var queryStateKey = _this2.fromUrlParamsMapping[paramKey];\n          result[queryStateKey] = urlParamsObj[paramKey]; // custom transformation for filters\n\n          if (queryStateKey === 'filters') {\n            if (!Array.isArray(urlParamsObj[paramKey])) {\n              // if only 1 filter, create an array with one element\n              urlParamsObj[paramKey] = [urlParamsObj[paramKey]];\n            }\n\n            result[queryStateKey] = urlParamsObj[paramKey].map(function (filter) {\n              return _this2._filterStringToList(filter);\n            });\n          }\n        }\n      });\n      return result;\n    };\n\n    this._mergeParamsIntoState = function (urlStateObj, queryState) {\n      var _queryState = _cloneDeep(queryState);\n\n      Object.keys(urlStateObj).forEach(function (stateKey) {\n        if (stateKey in _queryState) {\n          _queryState[stateKey] = urlStateObj[stateKey];\n        }\n      });\n      return _queryState;\n    };\n\n    this.urlParamsMapping = _isObject(config.urlParamsMapping) ? config.urlParamsMapping : {\n      queryString: 'q',\n      sortBy: 'sort',\n      sortOrder: 'order',\n      page: 'p',\n      size: 's',\n      layout: 'l',\n      filters: 'f'\n    };\n    this.keepHistory = config.keepHistory !== undefined ? config.keepHistory : true;\n\n    if (!_isBoolean(this.keepHistory)) {\n      throw new Error(\"\\\"keepHistory configuration must be a boolean, \".concat(this.keepHistory, \" provided.\"));\n    }\n\n    this.urlFilterSeparator = config.urlFilterSeparator !== undefined ? config.urlFilterSeparator : '+';\n\n    if (!_isString(this.urlFilterSeparator)) {\n      throw new Error(\"\\\"urlFilterSeparator configuration must be a string, \".concat(this.urlFilterSeparator, \" provided.\"));\n    }\n\n    this.urlParamValidator = config.urlParamValidator || new UrlParamValidator();\n    this.urlParser = config.urlParser || new UrlParser(); // build the serializer from URL params to Query state by flipping the urlParamsMapping\n\n    this.fromUrlParamsMapping = {};\n    Object.keys(this.urlParamsMapping).forEach(function (stateKey) {\n      _this2.fromUrlParamsMapping[_this2.urlParamsMapping[stateKey]] = stateKey;\n    });\n    this.get = this.get.bind(this);\n    this.set = this.set.bind(this);\n    this.replace = this.replace.bind(this);\n  }\n  /**\n   * Map filters from list to string that is human readable\n   * [ 'type', 'photo', [ 'subtype', 'png' ]] => type:photo+subtype:png\n   */\n\n\n  _createClass(UrlHandlerApi, [{\n    key: \"get\",\n\n    /**\n     * Return a new version of the given `query` state with updated values parsed from the URL query string.\n     * @param {object} queryState the `query` state\n     */\n    value: function get(queryState) {\n      var urlParamsObj = this.urlParser.parse(window.location.search);\n\n      var urlStateObj = this._mapUrlParamsToQueryState(urlParamsObj);\n\n      var newQueryState = this._mergeParamsIntoState(urlStateObj, queryState);\n\n      var newUrlParams = this._mapQueryStateToUrlParams(newQueryState);\n\n      replaceHistory(newUrlParams);\n      return newQueryState;\n    }\n    /**\n     * Update the URL query string parameters from the given `query` state\n     * @param {object} stateQuery the `query` state\n     */\n\n  }, {\n    key: \"set\",\n    value: function set(stateQuery) {\n      if (this.keepHistory) {\n        var newUrlParams = this._mapQueryStateToUrlParams(stateQuery);\n\n        pushHistory(newUrlParams);\n      } else {\n        this.replace(stateQuery);\n      }\n    }\n    /**\n     * Replace the URL query string parameters from the given `query` state\n     * @param {object} stateQuery the `query` state\n     */\n\n  }, {\n    key: \"replace\",\n    value: function replace(stateQuery) {\n      var newUrlParams = this._mapQueryStateToUrlParams(stateQuery);\n\n      replaceHistory(newUrlParams);\n    }\n  }]);\n\n  return UrlHandlerApi;\n}();\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\n\nvar SET_QUERY_COMPONENT_INITIAL_STATE = 'SET_QUERY_COMPONENT_INITIAL_STATE';\nvar SET_QUERY_STRING = 'SET_QUERY_STRING';\nvar SET_QUERY_SORTING = 'SET_QUERY_SORTING';\nvar SET_QUERY_SORT_BY = 'SET_QUERY_SORT_BY';\nvar SET_QUERY_SORT_ORDER = 'SET_QUERY_SORT_ORDER';\nvar SET_QUERY_STATE = 'SET_QUERY_STATE';\nvar SET_QUERY_PAGINATION_PAGE = 'SET_QUERY_PAGINATION_PAGE';\nvar SET_QUERY_PAGINATION_SIZE = 'SET_QUERY_PAGINATION_SIZE';\nvar SET_QUERY_FILTERS = 'SET_QUERY_FILTERS';\nvar SET_QUERY_SUGGESTIONS = 'SET_QUERY_SUGGESTIONS';\nvar SET_SUGGESTION_STRING = 'SET_SUGGESTION_STRING';\nvar CLEAR_QUERY_SUGGESTIONS = 'CLEAR_QUERY_SUGGESTIONS';\nvar RESULTS_LOADING = 'RESULTS_LOADING';\nvar RESULTS_FETCH_SUCCESS = 'RESULTS_FETCH_SUCCESS';\nvar RESULTS_FETCH_ERROR = 'RESULTS_FETCH_ERROR';\nvar RESULTS_UPDATE_LAYOUT = 'RESULTS_UPDATE_LAYOUT';\nvar RESET_QUERY = 'RESET_QUERY';\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\n/**\n * Return true if the first string starts and contains the second.\n * @param {string} first a string\n * @param {string} second a string\n */\n\nfunction startsWith(first, second) {\n  return first.indexOf(second) === 0;\n}\n\nfunction toString(array) {\n  return Qs.stringify({\n    q: array\n  });\n}\n\nfunction parse(str) {\n  return Qs.parse(str)['q'];\n}\n\nfunction removeLastChild(arr) {\n  var hasChild = arr.length === 3;\n\n  if (hasChild) {\n    var result = [arr[0], arr[1]];\n    var lastChild = removeLastChild(arr[2]);\n\n    if (lastChild.length) {\n      result.push(lastChild);\n    }\n\n    return result;\n  }\n\n  return [];\n}\n\nfunction updateFilter(queryFilter, stateFilters) {\n  /**\n   * convert query and state to strings so they can be compared\n   */\n  var strQuery = toString(queryFilter);\n  var strStateFilters = stateFilters.map(function (stateObjQuery) {\n    return toString(stateObjQuery);\n  });\n  /**\n   * filter out any state that starts with the query or any parent of the query\n   * e.g. query = ['file_type', 'pdf']\n   *      state = [[ 'file_type', 'pdf' ]]\n   *      filtered = []\n   *\n   *      query = [ 'type', 'publication' ]\n   *      state = [['type', 'publication', ['subtype', 'report' ]]\n   *      filtered = []\n   *\n   *      query = ['type', 'publication', ['subtype', 'report']]]\n   *      state = [[ 'type', 'publication' ]]\n   *      filtered = []\n   */\n\n  var anyRemoved = false;\n  var filteredStrStates = strStateFilters.filter(function (strStateFilter) {\n    var childFilterExists = startsWith(strStateFilter, strQuery);\n    var parentFilterExists = startsWith(strQuery, strStateFilter);\n\n    if (childFilterExists && !anyRemoved) {\n      anyRemoved = true;\n    }\n\n    return !childFilterExists && !parentFilterExists;\n  });\n\n  if (!anyRemoved) {\n    /**\n     * if nothing has been removed, it means it was not previously there, so\n     * the user query has to be added.\n     * e.g. query = ['type', 'publication', ['subtype', 'report']]\n     *      state = []\n     *      filtered = [['type', 'publication', ['subtype', 'report']]]\n     */\n    filteredStrStates.push(strQuery);\n  } else {\n    /**\n     * if a filter has been removed, it might have been a child. Add its parent if it is the root parent.\n     * e.g. query = ['type', 'publication', 'subtype', 'report']\n     *      state = [['type', 'publication', ['subtype', 'report']]]\n     *      filtered = [['type', 'publication']]\n     */\n    var hasChild = queryFilter.length === 3;\n\n    if (hasChild) {\n      var arr = removeLastChild(queryFilter);\n      filteredStrStates.push(toString(arr));\n    }\n  }\n  /**\n   * convert back to lists\n   */\n\n\n  return filteredStrStates.map(function (strState) {\n    return parse(strState);\n  });\n}\n\nvar updateQueryFilters = function updateQueryFilters(queryFilter, stateFilters) {\n  if (_isEmpty(queryFilter)) return;\n  /** If we have one filter as query = ['file_type', 'pdf'] */\n\n  if (!_isArray(_head(queryFilter))) {\n    return updateFilter(queryFilter, stateFilters);\n  }\n  /** If we have an array of filters as query we apply the filters one by one.\n   * e.g. query = [['file_type', 'pdf'], ['file_type', 'txt']]\n   */\n\n\n  var tempStateFilters = stateFilters;\n\n  _forEach(queryFilter, function (filter) {\n    return tempStateFilters = updateFilter(filter, tempStateFilters);\n  });\n\n  return tempStateFilters;\n};\n\nvar updateQueryState = function updateQueryState(oldState, newState, storeKeys) {\n  var pickedState = _pick(newState, storeKeys);\n\n  if ('filters' in pickedState) {\n    pickedState['filters'] = updateQueryFilters(pickedState.filters, oldState.filters);\n  }\n\n  return pickedState;\n};\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2020 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\n\nvar INITIAL_STORE_STATE = {\n  queryString: '',\n  suggestions: [],\n  sortBy: null,\n  sortOrder: null,\n  page: -1,\n  size: -1,\n  filters: [],\n  layout: null\n};\nvar STORE_KEYS = Object.keys(INITIAL_STORE_STATE);\n\nvar queryReducer = function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_QUERY_STRING:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        queryString: action.payload,\n        page: 1\n      });\n\n    case SET_QUERY_SORTING:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        sortBy: action.payload.sortBy,\n        sortOrder: action.payload.sortOrder,\n        page: 1\n      });\n\n    case SET_QUERY_SORT_BY:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        sortBy: action.payload,\n        page: 1\n      });\n\n    case SET_QUERY_SORT_ORDER:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        sortOrder: action.payload,\n        page: 1\n      });\n\n    case SET_QUERY_PAGINATION_PAGE:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        page: action.payload\n      });\n\n    case SET_QUERY_PAGINATION_SIZE:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        size: action.payload,\n        page: 1\n      });\n\n    case SET_QUERY_FILTERS:\n      {\n        return _objectSpread2(_objectSpread2({}, state), {}, {\n          page: 1,\n          filters: updateQueryFilters(action.payload, state.filters)\n        });\n      }\n\n    case SET_QUERY_SUGGESTIONS:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        suggestions: action.payload.suggestions\n      });\n\n    case CLEAR_QUERY_SUGGESTIONS:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        suggestions: action.payload.suggestions\n      });\n\n    case SET_SUGGESTION_STRING:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        suggestionString: action.payload\n      });\n\n    case SET_QUERY_COMPONENT_INITIAL_STATE:\n      return _objectSpread2(_objectSpread2({}, state), action.payload);\n\n    case SET_QUERY_STATE:\n      return _objectSpread2(_objectSpread2({}, state), updateQueryState(state, action.payload, STORE_KEYS));\n\n    case RESULTS_UPDATE_LAYOUT:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        layout: action.payload\n      });\n\n    case RESET_QUERY:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        queryString: '',\n        page: 1,\n        filters: []\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar resultsReducer = function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case RESULTS_LOADING:\n      return _objectSpread2(_objectSpread2({}, state), {}, {\n        loading: true,\n        data: _objectSpread2({}, state.data)\n      });\n\n    case RESULTS_FETCH_SUCCESS:\n      return {\n        loading: false,\n        data: _objectSpread2(_objectSpread2({}, state.data), {}, {\n          aggregations: action.payload.aggregations,\n          hits: action.payload.hits,\n          total: action.payload.total\n        }),\n        error: {}\n      };\n\n    case RESULTS_FETCH_ERROR:\n      return {\n        loading: false,\n        data: _objectSpread2(_objectSpread2({}, state.data), {}, {\n          aggregations: {},\n          hits: [],\n          total: 0\n        }),\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\n\nvar rootReducer = redux.combineReducers({\n  query: queryReducer,\n  results: resultsReducer\n});\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nfunction configureStore(appConfig) {\n  var initialQueryState = INITIAL_STORE_STATE;\n  var initialResultsState = {\n    loading: appConfig.searchOnInit,\n    data: {\n      hits: [],\n      total: 0,\n      aggregations: {}\n    },\n    error: {}\n  }; // configure the initial state\n\n  var preloadedQueryState = appConfig.urlHandlerApi ? appConfig.urlHandlerApi.get(initialQueryState) : initialQueryState;\n  var preloadedState = {\n    query: preloadedQueryState,\n    results: initialResultsState\n  };\n  return redux.createStore(rootReducer, preloadedState, redux.applyMiddleware(thunk.withExtraArgument(appConfig)));\n}\n\nfunction connectExtended(mapStateToProps, mapDispatchToProps, mergeProps) {\n  return reactRedux.connect(mapStateToProps, mapDispatchToProps, mergeProps);\n}\n\nvar setInitialState = function setInitialState(initialState) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_QUERY_COMPONENT_INITIAL_STATE,\n      payload: initialState\n    });\n  };\n};\n\nvar onAppInitialized = function onAppInitialized(searchOnInit) {\n  return function (dispatch) {\n    if (searchOnInit) {\n      dispatch(executeQuery({\n        shouldUpdateUrlQueryString: false\n      }));\n    }\n  };\n};\n\nvar updateQueryString = function updateQueryString(queryString) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_QUERY_STRING,\n      payload: queryString\n    });\n    dispatch(executeQuery());\n  };\n};\n\nvar updateQuerySorting = function updateQuerySorting(sortByValue, sortOrderValue) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_QUERY_SORTING,\n      payload: {\n        sortBy: sortByValue,\n        sortOrder: sortOrderValue\n      }\n    });\n    dispatch(executeQuery());\n  };\n};\n\nvar updateQuerySortBy = function updateQuerySortBy(sortByValue) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_QUERY_SORT_BY,\n      payload: sortByValue\n    });\n    dispatch(executeQuery());\n  };\n};\n\nvar updateQuerySortOrder = function updateQuerySortOrder(sortOrderValue) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_QUERY_SORT_ORDER,\n      payload: sortOrderValue\n    });\n    dispatch(executeQuery());\n  };\n};\n\nvar updateQueryPaginationPage = function updateQueryPaginationPage(page) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_QUERY_PAGINATION_PAGE,\n      payload: page\n    });\n    dispatch(executeQuery());\n  };\n};\n\nvar updateQueryPaginationSize = function updateQueryPaginationSize(size) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_QUERY_PAGINATION_SIZE,\n      payload: size\n    });\n    dispatch(executeQuery());\n  };\n};\n\nvar updateQueryFilters$1 = function updateQueryFilters(filters) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_QUERY_FILTERS,\n      payload: filters\n    });\n    dispatch(executeQuery());\n  };\n};\n\nvar updateResultsLayout = function updateResultsLayout(layout) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee(dispatch, getState, config) {\n      var urlHandlerApi, newStateQuery;\n      return regenerator.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              urlHandlerApi = config.urlHandlerApi;\n\n              if (!urlHandlerApi) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 4;\n              return dispatch({\n                type: RESULTS_UPDATE_LAYOUT,\n                payload: layout\n              });\n\n            case 4:\n              newStateQuery = getState().query;\n              urlHandlerApi.set(newStateQuery);\n              _context.next = 9;\n              break;\n\n            case 8:\n              dispatch({\n                type: RESULTS_UPDATE_LAYOUT,\n                payload: layout\n              });\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2, _x3) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\n\nvar resetQuery = function resetQuery() {\n  return function (dispatch) {\n    dispatch({\n      type: RESET_QUERY\n    });\n    dispatch(executeQuery());\n  };\n};\n\nvar executeQuery = function executeQuery() {\n  var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      _ref2$shouldUpdateUrl = _ref2.shouldUpdateUrlQueryString,\n      shouldUpdateUrlQueryString = _ref2$shouldUpdateUrl === void 0 ? true : _ref2$shouldUpdateUrl,\n      _ref2$shouldReplaceUr = _ref2.shouldReplaceUrlQueryString,\n      shouldReplaceUrlQueryString = _ref2$shouldReplaceUr === void 0 ? false : _ref2$shouldReplaceUr;\n\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee2(dispatch, getState, config) {\n      var queryState, searchApi, urlHandlerApi, response;\n      return regenerator.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              queryState = _cloneDeep(getState().query);\n              searchApi = config.searchApi;\n              urlHandlerApi = config.urlHandlerApi;\n\n              if (urlHandlerApi) {\n                if (shouldReplaceUrlQueryString) {\n                  urlHandlerApi.replace(queryState);\n                } else if (shouldUpdateUrlQueryString) {\n                  urlHandlerApi.set(queryState);\n                }\n              }\n\n              dispatch({\n                type: RESULTS_LOADING\n              });\n              _context2.prev = 5;\n              _context2.next = 8;\n              return searchApi.search(queryState);\n\n            case 8:\n              response = _context2.sent;\n              dispatch({\n                type: RESULTS_FETCH_SUCCESS,\n                payload: {\n                  aggregations: response.aggregations,\n                  hits: response.hits,\n                  total: response.total\n                }\n              });\n              _context2.next = 16;\n              break;\n\n            case 12:\n              _context2.prev = 12;\n              _context2.t0 = _context2[\"catch\"](5);\n              console.error(_context2.t0);\n              dispatch({\n                type: RESULTS_FETCH_ERROR,\n                payload: _context2.t0\n              });\n\n            case 16:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[5, 12]]);\n    }));\n\n    return function (_x4, _x5, _x6) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\n\nvar updateSuggestions = function updateSuggestions(suggestionString) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_SUGGESTION_STRING,\n      payload: suggestionString\n    });\n    dispatch(executeSuggestionQuery());\n  };\n};\n\nvar executeSuggestionQuery = function executeSuggestionQuery() {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee3(dispatch, getState, config) {\n      var queryState, suggestionApi, response;\n      return regenerator.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              queryState = _cloneDeep(getState().query);\n              suggestionApi = config.suggestionApi;\n              _context3.prev = 2;\n              _context3.next = 5;\n              return suggestionApi.search(queryState);\n\n            case 5:\n              response = _context3.sent;\n              dispatch({\n                type: SET_QUERY_SUGGESTIONS,\n                payload: {\n                  suggestions: response.suggestions\n                }\n              });\n              _context3.next = 12;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](2);\n              console.error('Could not load suggestions due to: ' + _context3.t0);\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[2, 9]]);\n    }));\n\n    return function (_x7, _x8, _x9) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\n\nvar clearSuggestions = function clearSuggestions() {\n  return function (dispatch) {\n    dispatch({\n      type: CLEAR_QUERY_SUGGESTIONS,\n      payload: {\n        suggestions: []\n      }\n    });\n  };\n};\n\nvar updateQueryState$1 = function updateQueryState(queryState) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_QUERY_STATE,\n      payload: queryState\n    });\n    dispatch(executeQuery());\n  };\n};\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2020 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\n/**\n * Build namespaced unique identifier.\n * @param {string} elementName component element name\n * @param {string} overridableId unique identifier passed as prop to overridable component\n */\n\n\nfunction buildUID(elementName, overridableId) {\n  return \"\".concat(elementName).concat(overridableId && \".\".concat(overridableId));\n}\n\nvar ActiveFilters = /*#__PURE__*/function (_Component) {\n  _inherits(ActiveFilters, _Component);\n\n  var _super = _createSuper(ActiveFilters);\n\n  function ActiveFilters(props) {\n    var _this;\n\n    _classCallCheck(this, ActiveFilters);\n\n    _this = _super.call(this, props);\n\n    _this._getLabel = function (filter) {\n      var aggName = filter[0];\n      var value = filter[1];\n      var currentFilter = [aggName, value];\n      var hasChild = filter.length === 3;\n\n      if (hasChild) {\n        var _this$_getLabel = _this._getLabel(filter[2]),\n            label = _this$_getLabel.label,\n            activeFilter = _this$_getLabel.activeFilter;\n\n        value = \"\".concat(value, \".\").concat(label);\n        currentFilter.push(activeFilter);\n      }\n\n      return {\n        label: value,\n        activeFilter: currentFilter\n      };\n    };\n\n    _this.updateQueryFilters = props.updateQueryFilters;\n    return _this;\n  }\n\n  _createClass(ActiveFilters, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          filters = _this$props.filters,\n          overridableId = _this$props.overridableId;\n      return !!filters.length && /*#__PURE__*/React__default.createElement(Element, {\n        filters: filters,\n        removeActiveFilter: this.updateQueryFilters,\n        getLabel: this._getLabel,\n        overridableId: overridableId\n      });\n    }\n  }]);\n\n  return ActiveFilters;\n}(React.Component);\n\nActiveFilters.defaultProps = {\n  renderElement: null,\n  overridableId: ''\n};\n\nvar Element = function Element(_ref) {\n  var overridableId = _ref.overridableId,\n      props = _objectWithoutProperties(_ref, [\"overridableId\"]);\n\n  var filters = props.filters,\n      removeActiveFilter = props.removeActiveFilter,\n      getLabel = props.getLabel;\n  return /*#__PURE__*/React__default.createElement(Overridable, Object.assign({\n    id: buildUID('ActiveFilters.element', overridableId)\n  }, props), /*#__PURE__*/React__default.createElement(React__default.Fragment, null, filters.map(function (filter, index) {\n    var _getLabel = getLabel(filter),\n        label = _getLabel.label,\n        activeFilter = _getLabel.activeFilter;\n\n    return /*#__PURE__*/React__default.createElement(semanticUiReact.Label, {\n      image: true,\n      key: index,\n      onClick: function onClick() {\n        return removeActiveFilter(activeFilter);\n      }\n    }, label, /*#__PURE__*/React__default.createElement(semanticUiReact.Icon, {\n      name: \"delete\"\n    }));\n  })));\n};\n\nvar ActiveFiltersComponent = Overridable.component('ActiveFilters', ActiveFilters);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateQueryFilters: function updateQueryFilters(filter) {\n      return dispatch(updateQueryFilters$1(filter));\n    }\n  };\n};\n\nvar ActiveFilters$1 = connectExtended(function (state) {\n  return {\n    filters: state.query.filters\n  };\n}, mapDispatchToProps)(ActiveFiltersComponent);\n\nvar BucketAggregationValues = /*#__PURE__*/function (_Component) {\n  _inherits(BucketAggregationValues, _Component);\n\n  var _super = _createSuper(BucketAggregationValues);\n\n  function BucketAggregationValues(props) {\n    var _this;\n\n    _classCallCheck(this, BucketAggregationValues);\n\n    _this = _super.call(this, props);\n\n    _this._isSelected = function (aggName, value, selectedFilters) {\n      // return True there is at least one filter that has this value\n      return selectedFilters.filter(function (filter) {\n        return filter[0] === aggName && filter[1] === value;\n      }).length >= 1;\n    };\n\n    _this.getChildAggCmps = function (bucket, selectedFilters) {\n      var hasChildAggregation = _this.childAgg && _this.childAgg['aggName'] in bucket;\n      var selectedChildFilters = [];\n\n      if (hasChildAggregation) {\n        var childBuckets = bucket[_this.childAgg['aggName']]['buckets'];\n        selectedFilters.forEach(function (filter) {\n          var isThisAggregation = filter[0] === _this.aggName;\n          var isThisValue = filter[1] === bucket.key;\n          var hasChild = filter.length === 3;\n\n          if (isThisAggregation && isThisValue && hasChild) {\n            selectedChildFilters.push(filter[2]);\n          }\n        });\n\n        var onFilterClicked = function onFilterClicked(value) {\n          _this.onFilterClicked([_this.aggName, bucket.key, value]);\n        };\n\n        return /*#__PURE__*/React__default.createElement(BucketAggregationValues, {\n          buckets: childBuckets,\n          selectedFilters: selectedChildFilters,\n          field: _this.childAgg.field,\n          aggName: _this.childAgg.aggName,\n          childAgg: _this.childAgg.childAgg,\n          onFilterClicked: onFilterClicked\n        });\n      }\n\n      return null;\n    };\n\n    _this.field = props.field;\n    _this.aggName = props.aggName;\n    _this.childAgg = props.childAgg;\n    _this.onFilterClicked = props.onFilterClicked;\n    return _this;\n  }\n\n  _createClass(BucketAggregationValues, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          buckets = _this$props.buckets,\n          selectedFilters = _this$props.selectedFilters,\n          overridableId = _this$props.overridableId;\n      var valuesCmp = buckets.map(function (bucket) {\n        var isSelected = _this2._isSelected(_this2.aggName, bucket.key, selectedFilters);\n\n        var onFilterClicked = function onFilterClicked(value) {\n          _this2.onFilterClicked([_this2.aggName, value]);\n        };\n\n        var getChildAggCmps = function getChildAggCmps(bucket) {\n          return _this2.getChildAggCmps(bucket, selectedFilters);\n        };\n\n        return /*#__PURE__*/React__default.createElement(ValueElement, {\n          key: bucket.key,\n          bucket: bucket,\n          isSelected: isSelected,\n          onFilterClicked: onFilterClicked,\n          getChildAggCmps: getChildAggCmps,\n          overridableId: overridableId\n        });\n      });\n      return /*#__PURE__*/React__default.createElement(ContainerElement, {\n        valuesCmp: valuesCmp,\n        overridableId: overridableId\n      });\n    }\n  }]);\n\n  return BucketAggregationValues;\n}(React.Component);\n\nBucketAggregationValues.defaultProps = {\n  overridableId: ''\n};\n\nvar ValueElement = function ValueElement(props) {\n  var bucket = props.bucket,\n      isSelected = props.isSelected,\n      onFilterClicked = props.onFilterClicked,\n      getChildAggCmps = props.getChildAggCmps,\n      overridableId = props.overridableId;\n  var label = \"\".concat(bucket.key, \" (\").concat(bucket.doc_count, \")\");\n  var childAggCmps = getChildAggCmps(bucket);\n  return /*#__PURE__*/React__default.createElement(Overridable, Object.assign({\n    id: buildUID('BucketAggregationValues.element', overridableId)\n  }, props), /*#__PURE__*/React__default.createElement(semanticUiReact.List.Item, {\n    key: bucket.key\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.Checkbox, {\n    label: label,\n    value: bucket.key,\n    onClick: function onClick() {\n      return onFilterClicked(bucket.key);\n    },\n    checked: isSelected\n  }), childAggCmps));\n};\n\nvar ContainerElement = function ContainerElement(_ref) {\n  var valuesCmp = _ref.valuesCmp,\n      overridableId = _ref.overridableId;\n  return /*#__PURE__*/React__default.createElement(Overridable, {\n    id: buildUID('BucketAggregationContainer.element', overridableId),\n    valuesCmp: valuesCmp\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.List, null, valuesCmp));\n};\n\nvar BucketAggregationValues$1 = Overridable.component('BucketAggregationValues', BucketAggregationValues);\n\nvar BucketAggregation = /*#__PURE__*/function (_Component) {\n  _inherits(BucketAggregation, _Component);\n\n  var _super = _createSuper(BucketAggregation);\n\n  function BucketAggregation(props) {\n    var _this;\n\n    _classCallCheck(this, BucketAggregation);\n\n    _this = _super.call(this, props);\n\n    _this.onFilterClicked = function (filter) {\n      _this.updateQueryFilters(filter);\n    };\n\n    _this._renderValues = function (resultBuckets, selectedFilters) {\n      var overridableId = _this.props.overridableId;\n      return /*#__PURE__*/React__default.createElement(BucketAggregationValues$1, {\n        buckets: resultBuckets,\n        selectedFilters: selectedFilters,\n        field: _this.agg.field,\n        aggName: _this.agg.aggName,\n        childAgg: _this.agg.childAgg,\n        onFilterClicked: _this.onFilterClicked,\n        overridableId: overridableId\n      });\n    };\n\n    _this._getSelectedFilters = function (userSelectionFilters) {\n      // get selected filters for this field only\n      return userSelectionFilters.filter(function (filter) {\n        return filter[0] === _this.agg.aggName;\n      });\n    };\n\n    _this._getResultBuckets = function (resultsAggregations) {\n      // get buckets of this field\n      var thisAggs = _get$1(resultsAggregations, _this.agg.aggName, {});\n\n      return 'buckets' in thisAggs ? thisAggs['buckets'] : [];\n    };\n\n    _this.title = props.title;\n    _this.agg = props.agg;\n    _this.updateQueryFilters = props.updateQueryFilters;\n    return _this;\n  }\n\n  _createClass(BucketAggregation, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          userSelectionFilters = _this$props.userSelectionFilters,\n          resultsAggregations = _this$props.resultsAggregations,\n          overridableId = _this$props.overridableId;\n\n      var selectedFilters = this._getSelectedFilters(userSelectionFilters);\n\n      var resultBuckets = this._getResultBuckets(resultsAggregations);\n\n      var valuesCmp = resultBuckets.length ? this._renderValues(resultBuckets, selectedFilters) : null;\n      return /*#__PURE__*/React__default.createElement(Element$1, {\n        title: this.title,\n        containerCmp: valuesCmp,\n        overridableId: overridableId\n      });\n    }\n  }]);\n\n  return BucketAggregation;\n}(React.Component);\n\nBucketAggregation.defaultProps = {\n  renderValuesContainerElement: null,\n  renderValueElement: null,\n  overridableId: ''\n};\n\nvar Element$1 = function Element(_ref) {\n  var overridableId = _ref.overridableId,\n      props = _objectWithoutProperties(_ref, [\"overridableId\"]);\n\n  var title = props.title,\n      containerCmp = props.containerCmp;\n  return containerCmp && /*#__PURE__*/React__default.createElement(Overridable, Object.assign({\n    id: buildUID('BucketAggregation.element', overridableId)\n  }, props), /*#__PURE__*/React__default.createElement(semanticUiReact.Card, null, /*#__PURE__*/React__default.createElement(semanticUiReact.Card.Content, null, /*#__PURE__*/React__default.createElement(semanticUiReact.Card.Header, null, title)), /*#__PURE__*/React__default.createElement(semanticUiReact.Card.Content, null, containerCmp)));\n};\n\nvar BucketAggregationComponent = Overridable.component('BucketAggregation', BucketAggregation);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar mapDispatchToProps$1 = function mapDispatchToProps(dispatch) {\n  return {\n    updateQueryFilters: function updateQueryFilters(filter) {\n      return dispatch(updateQueryFilters$1(filter));\n    }\n  };\n};\n\nvar BucketAggregation$1 = connectExtended(function (state) {\n  return {\n    userSelectionFilters: state.query.filters,\n    resultsAggregations: state.results.data.aggregations\n  };\n}, mapDispatchToProps$1)(BucketAggregationComponent);\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".AutoCompleteText{position:relative;z-index:100}.AutoCompleteText .input button,.AutoCompleteText .input input{border:none;border-radius:0}.AutoCompleteText ul{width:100%;position:absolute;list-style-type:none;text-align:left;color:#000;background-color:#fff;margin:0;padding:0;border:1px solid #e0e1e2;border-radius:0 0 .3rem .3rem}.AutoCompleteText ul:before{content:\\\"\\\"}.AutoCompleteText li{padding:.3em 1em;cursor:pointer}.AutoCompleteText li:hover{text-decoration:underline;background-color:#e0e1e2;border-radius:.3rem}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9saWIvY29tcG9uZW50cy9BdXRvY29tcGxldGVTZWFyY2hCYXIvQXV0b2NvbXBsZXRlU2VhcmNoQmFyLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsa0JBQ0UsaUJBQWtCLENBQ2xCLFdBQVksQ0FRZCwrREFDRSxXQUFZLENBQ1osZUFBZ0IsQ0FHbEIscUJBQ0UsVUFBVyxDQUNYLGlCQUFrQixDQUNsQixvQkFBcUIsQ0FDckIsZUFBZ0IsQ0FDaEIsVUFBWSxDQUNaLHFCQUF1QixDQUN2QixRQUFTLENBQ1QsU0FBVSxDQUNWLHdCQUFvQyxDQUNwQyw2QkFBZ0MsQ0FHbEMsNEJBQ0UsVUFBVyxDQUdiLHFCQUNFLGdCQUFrQixDQUNsQixjQUFlLENBR2pCLDJCQUNFLHlCQUEwQixDQUMxQix3QkFBb0MsQ0FDcEMsbUJBQXFCIiwiZmlsZSI6IkF1dG9jb21wbGV0ZVNlYXJjaEJhci5zY3NzIn0= */\";\nstyleInject(css_248z);\nvar _this2 = undefined;\n\nvar AutocompleteSearchBar = /*#__PURE__*/function (_Component) {\n  _inherits(AutocompleteSearchBar, _Component);\n\n  var _super = _createSuper(AutocompleteSearchBar);\n\n  function AutocompleteSearchBar(props) {\n    var _this;\n\n    _classCallCheck(this, AutocompleteSearchBar);\n\n    _this = _super.call(this, props);\n\n    _this._handleAutocompleteChange = function (suggestionString) {\n      if (suggestionString.length >= _this.minCharsToAutocomplete) {\n        _this.updateSuggestions(suggestionString);\n      }\n    };\n\n    _this.onInputChange = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee(queryString) {\n        return regenerator.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return _this.setState({\n                  currentValue: queryString\n                });\n\n              case 2:\n                _this.handleAutocompleteChange(_this.state.currentValue);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.executeSearch = function () {\n      _this.updateQueryString(_this.state.currentValue);\n    };\n\n    _this.updateQueryString = _this.props.updateQueryString;\n    _this.updateSuggestions = _this.props.debounce ? _.debounce(_this.props.updateSuggestions, _this.props.debounceTime, {\n      leading: true\n    }) : _this.props.updateSuggestions;\n    _this.clearSuggestions = _this.props.clearSuggestions;\n    _this.minCharsToAutocomplete = _this.props.minCharsToAutocomplete;\n    _this.state = {\n      currentValue: _this.props.queryString || ''\n    };\n    _this.handleAutocompleteChange = props.handleAutocompleteChange || _this._handleAutocompleteChange;\n    return _this;\n  }\n\n  _createClass(AutocompleteSearchBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          suggestions = _this$props.suggestions,\n          overridableId = _this$props.overridableId;\n      return /*#__PURE__*/React__default.createElement(Element$2, {\n        placeholder: placeholder,\n        queryString: this.state.currentValue,\n        querySuggestions: suggestions,\n        onInputChange: this.onInputChange,\n        executeSearch: this.executeSearch,\n        overridableId: overridableId\n      });\n    }\n  }]);\n\n  return AutocompleteSearchBar;\n}(React.Component);\n\nAutocompleteSearchBar.defaultProps = {\n  handleAutocompleteChange: null,\n  placeholder: 'Type something',\n  minCharsToAutocomplete: 3,\n  overridableId: ''\n};\n\nvar AutocompleteSearchBarUncontrolled = function AutocompleteSearchBarUncontrolled(props) {\n  return /*#__PURE__*/React__default.createElement(AutocompleteSearchBar, Object.assign({\n    key: props.queryString\n  }, props));\n};\n\nvar Element$2 = function Element(_ref2) {\n  var overridableId = _ref2.overridableId,\n      props = _objectWithoutProperties(_ref2, [\"overridableId\"]);\n\n  var placeholder = props.placeholder,\n      queryString = props.queryString,\n      querySuggestions = props.querySuggestions,\n      onInputChange = props.onInputChange,\n      executeSearch = props.executeSearch;\n\n  var onBtnSearchClick = function onBtnSearchClick(event, input) {\n    executeSearch();\n  };\n\n  var onKeyPress = function onKeyPress(event, input) {\n    if (event.key === 'Enter') {\n      executeSearch();\n    }\n  };\n\n  return /*#__PURE__*/React__default.createElement(Overridable, Object.assign({\n    id: buildUID('AutocompleteSearchBar.element', overridableId)\n  }, props), /*#__PURE__*/React__default.createElement(\"div\", {\n    className: \"AutoCompleteText\"\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.Input, {\n    action: {\n      content: 'Search',\n      onClick: onBtnSearchClick\n    },\n    fluid: true,\n    placeholder: placeholder,\n    onChange: function onChange(event, _ref3) {\n      var value = _ref3.value;\n      onInputChange(value);\n    },\n    value: queryString,\n    onKeyPress: onKeyPress\n  }), /*#__PURE__*/React__default.createElement(Suggestions, {\n    querySuggestions: querySuggestions,\n    overridableId: overridableId\n  })));\n};\n\nvar Suggestions = function Suggestions(_ref4) {\n  var overridableId = _ref4.overridableId,\n      props = _objectWithoutProperties(_ref4, [\"overridableId\"]);\n\n  var querySuggestions = props.querySuggestions;\n\n  var onSuggestionSelected = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/regenerator.mark(function _callee2(suggestion) {\n      return regenerator.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this2.setState({\n                currentValue: suggestion\n              });\n\n            case 2:\n              _this2.clearSuggestions();\n\n              _this2.executeSearch();\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onSuggestionSelected(_x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  if (querySuggestions.length === 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/React__default.createElement(Overridable, Object.assign({\n    id: buildUID('AutocompleteSearchBar.suggestions', overridableId)\n  }, props), /*#__PURE__*/React__default.createElement(\"ul\", null, querySuggestions.map(function (text) {\n    return /*#__PURE__*/React__default.createElement(\"li\", {\n      onClick: function onClick() {\n        return onSuggestionSelected(text);\n      },\n      key: text\n    }, text);\n  })));\n};\n\nvar AutocompleteSearchBarComponent = Overridable.component('AutocompleteSearchBar', AutocompleteSearchBarUncontrolled);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar mapDispatchToProps$2 = function mapDispatchToProps(dispatch) {\n  return {\n    updateQueryString: function updateQueryString$1(query) {\n      return dispatch(updateQueryString(query));\n    },\n    updateSuggestions: function updateSuggestions$1(query) {\n      return dispatch(updateSuggestions(query));\n    },\n    clearSuggestions: function clearSuggestions$1() {\n      return dispatch(clearSuggestions());\n    }\n  };\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    queryString: state.query.queryString,\n    suggestions: state.query.suggestions\n  };\n};\n\nvar AutocompleteSearchBar$1 = connectExtended(mapStateToProps, mapDispatchToProps$2)(AutocompleteSearchBarComponent);\n\nvar ShouldRender = /*#__PURE__*/function (_Component) {\n  _inherits(ShouldRender, _Component);\n\n  var _super = _createSuper(ShouldRender);\n\n  function ShouldRender() {\n    _classCallCheck(this, ShouldRender);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ShouldRender, [{\n    key: \"render\",\n    value: function render() {\n      var condition = this.props.condition;\n      return condition ? this.props.children : null;\n    }\n  }]);\n\n  return ShouldRender;\n}(React.Component);\n\nShouldRender.defaultProps = {\n  condition: true\n};\nvar ShouldRender$1 = Overridable.component('ShouldRender', ShouldRender);\n\nvar Count = /*#__PURE__*/function (_Component) {\n  _inherits(Count, _Component);\n\n  var _super = _createSuper(Count);\n\n  function Count() {\n    _classCallCheck(this, Count);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Count, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          totalResults = _this$props.totalResults,\n          label = _this$props.label,\n          overridableId = _this$props.overridableId;\n      return /*#__PURE__*/React__default.createElement(ShouldRender$1, {\n        condition: !loading && totalResults > 0\n      }, label( /*#__PURE__*/React__default.createElement(Element$3, {\n        totalResults: totalResults,\n        overridableId: overridableId\n      })));\n    }\n  }]);\n\n  return Count;\n}(React.Component);\n\nCount.defaultProps = {\n  label: function label(cmp) {\n    return cmp;\n  },\n  overridableId: ''\n};\n\nvar Element$3 = function Element(_ref) {\n  var totalResults = _ref.totalResults,\n      overridableId = _ref.overridableId;\n  return /*#__PURE__*/React__default.createElement(Overridable, {\n    id: buildUID('Count.element', overridableId),\n    totalResults: totalResults\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.Label, {\n    color: 'blue'\n  }, totalResults));\n};\n\nvar CountComponent = Overridable.component('Count', Count);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar Count$1 = connectExtended(function (state) {\n  return {\n    loading: state.results.loading,\n    totalResults: state.results.data.total\n  };\n})(CountComponent);\n\nvar EmptyResults = /*#__PURE__*/function (_Component) {\n  _inherits(EmptyResults, _Component);\n\n  var _super = _createSuper(EmptyResults);\n\n  function EmptyResults(props) {\n    var _this;\n\n    _classCallCheck(this, EmptyResults);\n\n    _this = _super.call(this, props);\n    _this.resetQuery = props.resetQuery;\n    return _this;\n  }\n\n  _createClass(EmptyResults, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          totalResults = _this$props.totalResults,\n          error = _this$props.error,\n          queryString = _this$props.queryString,\n          overridableId = _this$props.overridableId;\n      return /*#__PURE__*/React__default.createElement(ShouldRender$1, {\n        condition: !loading && _isEmpty(error) && totalResults === 0\n      }, /*#__PURE__*/React__default.createElement(Element$4, {\n        queryString: queryString,\n        resetQuery: this.resetQuery,\n        overridableId: overridableId\n      }));\n    }\n  }]);\n\n  return EmptyResults;\n}(React.Component);\n\nEmptyResults.defaultProps = {\n  queryString: '',\n  overridableId: ''\n};\n\nvar Element$4 = function Element(_ref) {\n  var overridableId = _ref.overridableId,\n      props = _objectWithoutProperties(_ref, [\"overridableId\"]);\n\n  var queryString = props.queryString,\n      resetQuery = props.resetQuery;\n  return /*#__PURE__*/React__default.createElement(Overridable, Object.assign({\n    id: buildUID('EmptyResults.element', overridableId)\n  }, props), /*#__PURE__*/React__default.createElement(semanticUiReact.Segment, {\n    placeholder: true,\n    textAlign: \"center\"\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.Header, {\n    icon: true\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.Icon, {\n    name: \"search\"\n  }), \"No results found!\"), queryString && /*#__PURE__*/React__default.createElement(\"em\", null, \"Current search \\\"\", queryString, \"\\\"\"), /*#__PURE__*/React__default.createElement(\"br\", null), /*#__PURE__*/React__default.createElement(semanticUiReact.Button, {\n    primary: true,\n    onClick: function onClick() {\n      return resetQuery();\n    }\n  }, \"Clear query\")));\n};\n\nvar EmptyResultsComponent = Overridable.component('EmptyResults', EmptyResults);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar mapDispatchToProps$3 = function mapDispatchToProps(dispatch) {\n  return {\n    resetQuery: function resetQuery$1() {\n      return dispatch(resetQuery());\n    }\n  };\n};\n\nvar EmptyResults$1 = connectExtended(function (state) {\n  return {\n    loading: state.results.loading,\n    totalResults: state.results.data.total,\n    error: state.results.error,\n    queryString: state.query.queryString\n  };\n}, mapDispatchToProps$3)(EmptyResultsComponent);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nfunction Error$1(_ref) {\n  var loading = _ref.loading,\n      error = _ref.error,\n      overridableId = _ref.overridableId;\n  return /*#__PURE__*/React__default.createElement(ShouldRender$1, {\n    condition: !loading && !_isEmpty(error)\n  }, /*#__PURE__*/React__default.createElement(Element$5, {\n    error: error,\n    overridableId: overridableId\n  }));\n}\n\nError$1.defaultProps = {\n  overridableId: ''\n};\n\nvar Element$5 = function Element(_ref2) {\n  var error = _ref2.error,\n      overridableId = _ref2.overridableId;\n  return /*#__PURE__*/React__default.createElement(Overridable, {\n    id: buildUID('Error.element', overridableId),\n    error: error\n  }, /*#__PURE__*/React__default.createElement(\"div\", null, \"Oups! Something went wrong while fetching results.\"));\n};\n\nvar ErrorComponent = Overridable.component('Error', Error$1);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar Error$2 = connectExtended(function (state) {\n  return {\n    loading: state.results.loading,\n    error: state.results.error\n  };\n})(ErrorComponent);\n\nvar LayoutSwitcher = /*#__PURE__*/function (_Component) {\n  _inherits(LayoutSwitcher, _Component);\n\n  var _super = _createSuper(LayoutSwitcher);\n\n  function LayoutSwitcher(props) {\n    var _this;\n\n    _classCallCheck(this, LayoutSwitcher);\n\n    _this = _super.call(this, props);\n\n    _this.onLayoutChange = function (layoutName) {\n      _this.updateLayout(layoutName);\n    };\n\n    _this.defaultValue = _this.props.defaultLayout;\n    _this.updateLayout = props.updateLayout;\n    _this.setInitialState = props.setInitialState;\n    return _this;\n  }\n\n  _createClass(LayoutSwitcher, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.currentLayout === null) {\n        this.setInitialState({\n          layout: this.defaultValue\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          currentLayout = _this$props.currentLayout,\n          loading = _this$props.loading,\n          totalResults = _this$props.totalResults,\n          overridableId = _this$props.overridableId;\n      return /*#__PURE__*/React__default.createElement(ShouldRender$1, {\n        condition: currentLayout !== null && !loading && totalResults > 0\n      }, /*#__PURE__*/React__default.createElement(Element$6, {\n        currentLayout: currentLayout,\n        onLayoutChange: this.onLayoutChange,\n        overridableId: overridableId\n      }));\n    }\n  }]);\n\n  return LayoutSwitcher;\n}(React.Component);\n\nLayoutSwitcher.defaultProps = {\n  defaultLayout: 'list',\n  currentLayout: null,\n  overridableId: ''\n};\n\nvar Element$6 = function Element(_ref) {\n  var overridableId = _ref.overridableId,\n      props = _objectWithoutProperties(_ref, [\"overridableId\"]);\n\n  var currentLayout = props.currentLayout,\n      onLayoutChange = props.onLayoutChange;\n\n  var clickHandler = function clickHandler(event, _ref2) {\n    var name = _ref2.name;\n    onLayoutChange(name);\n  };\n\n  return /*#__PURE__*/React__default.createElement(Overridable, Object.assign({\n    id: buildUID('LayoutSwitcher.element', overridableId)\n  }, props), /*#__PURE__*/React__default.createElement(semanticUiReact.Menu, {\n    compact: true,\n    icon: true\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.Menu.Item, {\n    name: \"list\",\n    active: currentLayout === 'list',\n    onClick: clickHandler\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.Icon, {\n    name: \"list layout\"\n  })), /*#__PURE__*/React__default.createElement(semanticUiReact.Menu.Item, {\n    name: \"grid\",\n    active: currentLayout === 'grid',\n    onClick: clickHandler\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.Icon, {\n    name: \"grid layout\"\n  }))));\n};\n\nvar LayoutSwitcherComponent = Overridable.component('LayoutSwitcher', LayoutSwitcher);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar mapDispatchToProps$4 = function mapDispatchToProps(dispatch) {\n  return {\n    updateLayout: function updateLayout(layout) {\n      return dispatch(updateResultsLayout(layout));\n    },\n    setInitialState: function setInitialState$1(initialState) {\n      return dispatch(setInitialState(initialState));\n    }\n  };\n};\n\nvar LayoutSwitcher$1 = connectExtended(function (state) {\n  return {\n    loading: state.results.loading,\n    currentLayout: state.query.layout,\n    totalResults: state.results.data.total\n  };\n}, mapDispatchToProps$4)(LayoutSwitcherComponent);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nfunction ResultsLoader(_ref) {\n  var children = _ref.children,\n      loading = _ref.loading,\n      overridableId = _ref.overridableId;\n  return loading ? /*#__PURE__*/React__default.createElement(Element$7, {\n    overridableId: overridableId\n  }) : children;\n}\n\nResultsLoader.defaultProps = {\n  overridableId: ''\n};\n\nvar Element$7 = function Element(_ref2) {\n  var overridableId = _ref2.overridableId;\n  return /*#__PURE__*/React__default.createElement(Overridable, {\n    id: buildUID('ResultsLoader.element', overridableId)\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.Loader, {\n    active: true,\n    size: \"huge\",\n    inline: \"centered\"\n  }));\n};\n\nvar ResultsLoaderComponent = Overridable.component('ResultsLoader', ResultsLoader);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar ResultsLoader$1 = connectExtended(function (state) {\n  return {\n    loading: state.results.loading\n  };\n})(ResultsLoaderComponent);\n\nvar Pagination = /*#__PURE__*/function (_Component) {\n  _inherits(Pagination, _Component);\n\n  var _super = _createSuper(Pagination);\n\n  function Pagination(props) {\n    var _this;\n\n    _classCallCheck(this, Pagination);\n\n    _this = _super.call(this, props);\n\n    _this.onPageChange = function (activePage) {\n      if (activePage === _this.props.currentPage) return;\n\n      _this.updateQueryPage(activePage);\n    };\n\n    _this.defaultValue = props.defaultValue;\n    _this.updateQueryPage = props.updateQueryPage;\n    _this.setInitialState = props.setInitialState;\n    return _this;\n  }\n\n  _createClass(Pagination, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.currentPage === -1) {\n        this.setInitialState({\n          page: this.defaultValue\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          totalResults = _this$props.totalResults,\n          currentPage = _this$props.currentPage,\n          currentSize = _this$props.currentSize,\n          options = _this$props.options,\n          overridableId = _this$props.overridableId;\n      return /*#__PURE__*/React__default.createElement(ShouldRender$1, {\n        condition: !loading && currentPage > -1 && currentSize > -1 && totalResults > 0\n      }, /*#__PURE__*/React__default.createElement(Element$8, {\n        currentPage: currentPage,\n        currentSize: currentSize,\n        totalResults: totalResults,\n        onPageChange: this.onPageChange,\n        options: options,\n        overridableId: overridableId\n      }));\n    }\n  }]);\n\n  return Pagination;\n}(React.Component);\n\nPagination.defaultProps = {\n  options: {\n    boundaryRangeCount: 1,\n    siblingRangeCount: 1,\n    showEllipsis: true,\n    showFirst: true,\n    showLast: true,\n    showPrev: true,\n    showNext: true\n  },\n  defaultValue: 10,\n  overridableId: ''\n};\n\nvar Element$8 = function Element(_ref) {\n  var overridableId = _ref.overridableId,\n      props = _objectWithoutProperties(_ref, [\"overridableId\"]);\n\n  var currentPage = props.currentPage,\n      currentSize = props.currentSize,\n      totalResults = props.totalResults,\n      onPageChange = props.onPageChange,\n      options = props.options,\n      extraParams = _objectWithoutProperties(props, [\"currentPage\", \"currentSize\", \"totalResults\", \"onPageChange\", \"options\"]);\n\n  var pages = Math.ceil(totalResults / currentSize);\n  var boundaryRangeCount = options.boundaryRangeCount;\n  var siblingRangeCount = options.siblingRangeCount;\n  var showEllipsis = options.showEllipsis;\n  var showFirst = options.showFirst;\n  var showLast = options.showLast;\n  var showPrev = options.showPrev;\n  var showNext = options.showNext;\n\n  var _onPageChange = function _onPageChange(event, _ref2) {\n    var activePage = _ref2.activePage;\n    onPageChange(activePage);\n  };\n\n  return /*#__PURE__*/React__default.createElement(Overridable, Object.assign({\n    id: buildUID('Pagination.element', overridableId)\n  }, props), /*#__PURE__*/React__default.createElement(semanticUiReact.Pagination, Object.assign({\n    activePage: currentPage,\n    totalPages: pages,\n    onPageChange: _onPageChange,\n    boundaryRange: boundaryRangeCount,\n    siblingRange: siblingRangeCount,\n    ellipsisItem: showEllipsis ? undefined : null,\n    firstItem: showFirst ? undefined : null,\n    lastItem: showLast ? undefined : null,\n    prevItem: showPrev ? undefined : null,\n    nextItem: showNext ? undefined : null\n  }, extraParams)));\n};\n\nvar PaginationComponent = Overridable.component('Pagination', Pagination);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar mapDispatchToProps$5 = function mapDispatchToProps(dispatch) {\n  return {\n    updateQueryPage: function updateQueryPage(page) {\n      return dispatch(updateQueryPaginationPage(page));\n    },\n    setInitialState: function setInitialState$1(value) {\n      return dispatch(setInitialState(value));\n    }\n  };\n};\n\nvar Pagination$1 = connectExtended(function (state) {\n  return {\n    currentPage: state.query.page,\n    currentSize: state.query.size,\n    loading: state.results.loading,\n    totalResults: state.results.data.total\n  };\n}, mapDispatchToProps$5)(PaginationComponent);\n\nvar Bootstrap = /*#__PURE__*/function (_Component) {\n  _inherits(Bootstrap, _Component);\n\n  var _super = _createSuper(Bootstrap);\n\n  function Bootstrap(props) {\n    var _this;\n\n    _classCallCheck(this, Bootstrap);\n\n    _this = _super.call(this, props);\n\n    _this.updateQueryState = function (query) {\n      return _this.props.updateQueryState(query);\n    };\n\n    _this.onQueryChanged = function (_ref) {\n      var payload = _ref.detail;\n      var appReceiverName = payload.appName || _this.appName;\n\n      if (appReceiverName === _this.appName) {\n        _this.updateQueryState(payload.searchQuery);\n      } else {\n        console.debug(\"RSK app \".concat(_this.appName, \": ignore event sent for app \").concat(appReceiverName, \"...\"));\n      }\n    };\n\n    _this.appName = props.appName;\n    _this.searchOnInit = props.searchOnInit;\n    _this.eventListenerEnabled = props.eventListenerEnabled;\n    _this.onAppInitialized = props.onAppInitialized;\n    _this.searchOnUrlQueryStringChanged = props.searchOnUrlQueryStringChanged;\n    return _this;\n  }\n\n  _createClass(Bootstrap, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.eventListenerEnabled) {\n        window.addEventListener('queryChanged', this.onQueryChanged);\n      }\n\n      window.onpopstate = function () {\n        _this2.searchOnUrlQueryStringChanged();\n      };\n\n      this.onAppInitialized(this.searchOnInit);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React__default.createElement(React.Fragment, null, this.props.children);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.historyUnlisten && this.historyUnlisten();\n\n      window.onpopstate = function () {};\n\n      window.removeEventListener('queryChanged', this.onQueryChanged);\n    }\n  }]);\n\n  return Bootstrap;\n}(React.Component);\n\nBootstrap.defaultProps = {\n  searchOnInit: true\n};\nvar BootstrapComponent = Overridable.component('Bootstrap', Bootstrap);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar mapDispatchToProps$6 = function mapDispatchToProps(dispatch) {\n  return {\n    onAppInitialized: function onAppInitialized$1(searchOnInit) {\n      return dispatch(onAppInitialized(searchOnInit));\n    },\n    updateQueryState: function updateQueryState(queryState) {\n      return dispatch(updateQueryState$1(queryState));\n    },\n    searchOnUrlQueryStringChanged: function searchOnUrlQueryStringChanged() {\n      return dispatch(executeQuery({\n        shouldUpdateUrlQueryString: false\n      }));\n    }\n  };\n};\n\nvar Bootstrap$1 = connectExtended(null, mapDispatchToProps$6)(BootstrapComponent);\n\nvar ReactSearchKit = /*#__PURE__*/function (_Component) {\n  _inherits(ReactSearchKit, _Component);\n\n  var _super = _createSuper(ReactSearchKit);\n\n  function ReactSearchKit(props) {\n    var _this;\n\n    _classCallCheck(this, ReactSearchKit);\n\n    _this = _super.call(this, props);\n    var appConfig = {\n      searchApi: props.searchApi,\n      suggestionApi: props.suggestionApi,\n      urlHandlerApi: props.urlHandlerApi.enabled ? props.urlHandlerApi.customHandler || new UrlHandlerApi(props.urlHandlerApi.overrideConfig) : null,\n      defaultSortByOnEmptyQuery: props.defaultSortByOnEmptyQuery,\n      searchOnInit: props.searchOnInit\n    };\n    _this.store = configureStore(appConfig);\n    _this.appName = props.appName;\n    _this.eventListenerEnabled = props.eventListenerEnabled;\n    return _this;\n  }\n\n  _createClass(ReactSearchKit, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          searchOnInit = _this$props.searchOnInit,\n          overridableId = _this$props.overridableId;\n      return /*#__PURE__*/React__default.createElement(reactRedux.Provider, {\n        store: this.store\n      }, /*#__PURE__*/React__default.createElement(Bootstrap$1, {\n        searchOnInit: searchOnInit,\n        appName: this.appName,\n        eventListenerEnabled: this.eventListenerEnabled\n      }, /*#__PURE__*/React__default.createElement(Overridable, {\n        id: buildUID('ReactSearchKit.children', overridableId)\n      }, this.props.children)));\n    }\n  }]);\n\n  return ReactSearchKit;\n}(React.Component);\n\nReactSearchKit.defaultProps = {\n  suggestionApi: null,\n  urlHandlerApi: {\n    enabled: true,\n    overrideConfig: {},\n    customHandler: null\n  },\n  searchOnInit: true,\n  defaultSortByOnEmptyQuery: null,\n  appName: 'RSK',\n  eventListenerEnabled: false,\n  overridableId: ''\n};\nvar ReactSearchKit$1 = Overridable.component('ReactSearchKit', ReactSearchKit);\n\nfunction ResultsGrid(_ref) {\n  var loading = _ref.loading,\n      totalResults = _ref.totalResults,\n      results = _ref.results,\n      resultsPerRow = _ref.resultsPerRow,\n      overridableId = _ref.overridableId;\n  return /*#__PURE__*/React__default.createElement(ShouldRender$1, {\n    condition: !loading && totalResults > 0\n  }, /*#__PURE__*/React__default.createElement(Element$9, {\n    results: results,\n    resultsPerRow: resultsPerRow,\n    overridableId: overridableId\n  }));\n}\n\nResultsGrid.defaultProps = {\n  resultsPerRow: 3,\n  overridableId: ''\n};\n\nvar GridItem = function GridItem(_ref2) {\n  var result = _ref2.result,\n      index = _ref2.index,\n      overridableId = _ref2.overridableId;\n  return /*#__PURE__*/React__default.createElement(Overridable, {\n    id: buildUID('ResultsGrid.item', overridableId),\n    result: result,\n    index: index\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.Card, {\n    fluid: true,\n    key: index,\n    href: \"#\".concat(result.id)\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.Image, {\n    src: result.imgSrc || 'http://placehold.it/200'\n  }), /*#__PURE__*/React__default.createElement(semanticUiReact.Card.Content, null, /*#__PURE__*/React__default.createElement(semanticUiReact.Card.Header, null, result.title), /*#__PURE__*/React__default.createElement(semanticUiReact.Card.Description, null, result.description))));\n};\n\nvar Element$9 = function Element(_ref3) {\n  var overridableId = _ref3.overridableId,\n      props = _objectWithoutProperties(_ref3, [\"overridableId\"]);\n\n  var results = props.results,\n      resultsPerRow = props.resultsPerRow;\n\n  var _results = results.map(function (result, index) {\n    return /*#__PURE__*/React__default.createElement(GridItem, {\n      key: index,\n      result: result,\n      index: index,\n      overridableId: overridableId\n    });\n  });\n\n  return /*#__PURE__*/React__default.createElement(Overridable, Object.assign({\n    id: buildUID('ResultsGrid.container', overridableId)\n  }, props), /*#__PURE__*/React__default.createElement(semanticUiReact.Card.Group, {\n    itemsPerRow: resultsPerRow\n  }, _results));\n};\n\nvar ResultsGridComponent = Overridable.component('ResultsGrid', ResultsGrid);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar ResultsGrid$1 = connectExtended(function (state) {\n  return {\n    loading: state.results.loading,\n    totalResults: state.results.data.total,\n    results: state.results.data.hits\n  };\n})(ResultsGridComponent);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nfunction ResultsList(_ref) {\n  var loading = _ref.loading,\n      totalResults = _ref.totalResults,\n      results = _ref.results,\n      overridableId = _ref.overridableId;\n  return /*#__PURE__*/React__default.createElement(ShouldRender$1, {\n    condition: !loading && totalResults > 0\n  }, /*#__PURE__*/React__default.createElement(Element$a, {\n    results: results,\n    overridableId: overridableId\n  }));\n}\n\nResultsList.defaultProps = {\n  overridableId: ''\n};\n\nvar ListItem = function ListItem(_ref2) {\n  var result = _ref2.result,\n      index = _ref2.index,\n      overridableId = _ref2.overridableId;\n  return /*#__PURE__*/React__default.createElement(Overridable, {\n    id: buildUID('ResultsList.item', overridableId),\n    result: result,\n    index: index\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.Item, {\n    key: index,\n    href: \"#\".concat(result.id)\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.Item.Image, {\n    size: \"small\",\n    src: result.imgSrc || 'http://placehold.it/200'\n  }), /*#__PURE__*/React__default.createElement(semanticUiReact.Item.Content, null, /*#__PURE__*/React__default.createElement(semanticUiReact.Item.Header, null, result.title), /*#__PURE__*/React__default.createElement(semanticUiReact.Item.Description, null, result.description))));\n};\n\nvar Element$a = function Element(_ref3) {\n  var results = _ref3.results,\n      overridableId = _ref3.overridableId;\n\n  var _results = results.map(function (result, index) {\n    return /*#__PURE__*/React__default.createElement(ListItem, {\n      result: result,\n      index: index,\n      key: index,\n      overridableId: overridableId\n    });\n  });\n\n  return /*#__PURE__*/React__default.createElement(Overridable, {\n    id: buildUID('ResultsList.container', overridableId),\n    results: _results\n  }, /*#__PURE__*/React__default.createElement(semanticUiReact.Item.Group, {\n    divided: true,\n    relaxed: true,\n    link: true\n  }, _results));\n};\n\nvar ResultsListComponent = Overridable.component('ResultsList', ResultsList);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar ResultsList$1 = connectExtended(function (state) {\n  return {\n    loading: state.results.loading,\n    totalResults: state.results.data.total,\n    results: state.results.data.hits\n  };\n})(ResultsListComponent);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nfunction ResultsMultiLayout(_ref) {\n  var loading = _ref.loading,\n      totalResults = _ref.totalResults,\n      currentLayout = _ref.currentLayout,\n      overridableId = _ref.overridableId;\n  return /*#__PURE__*/React__default.createElement(ShouldRender$1, {\n    condition: currentLayout != null && !loading && totalResults > 0\n  }, /*#__PURE__*/React__default.createElement(Element$b, {\n    layout: currentLayout,\n    overridableId: overridableId\n  }));\n}\n\nResultsMultiLayout.defaultProps = {\n  currentLayout: null,\n  overridableId: ''\n};\n\nvar Element$b = function Element(_ref2) {\n  var layout = _ref2.layout,\n      overridableId = _ref2.overridableId;\n  return /*#__PURE__*/React__default.createElement(Overridable, {\n    id: buildUID('ResultsMultiLayout.element', overridableId),\n    layout: layout,\n    ResultsList: ResultsList$1,\n    ResultsGrid: ResultsGrid$1\n  }, layout === 'list' ? /*#__PURE__*/React__default.createElement(ResultsList$1, {\n    overridableId: overridableId\n  }) : /*#__PURE__*/React__default.createElement(ResultsGrid$1, {\n    overridableId: overridableId\n  }));\n};\n\nvar ResultsMultiLayoutComponent = Overridable.component('ResultsMultiLayout', ResultsMultiLayout);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar ResultsMultiLayout$1 = connectExtended(function (state) {\n  return {\n    loading: state.results.loading,\n    totalResults: state.results.data.total,\n    currentLayout: state.query.layout\n  };\n})(ResultsMultiLayoutComponent);\n\nvar ResultsPerPage = /*#__PURE__*/function (_Component) {\n  _inherits(ResultsPerPage, _Component);\n\n  var _super = _createSuper(ResultsPerPage);\n\n  function ResultsPerPage(props) {\n    var _this;\n\n    _classCallCheck(this, ResultsPerPage);\n\n    _this = _super.call(this, props);\n\n    _this.onChange = function (value) {\n      if (value === _this.props.currentSize) return;\n\n      _this.updateQuerySize(value);\n    };\n\n    _this.options = props.values;\n    _this.defaultValue = props.defaultValue;\n    _this.updateQuerySize = _this.props.updateQuerySize;\n    _this.setInitialState = props.setInitialState;\n    return _this;\n  }\n\n  _createClass(ResultsPerPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.currentSize === -1) {\n        this.setInitialState({\n          size: this.defaultValue\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          loading = _this$props.loading,\n          currentSize = _this$props.currentSize,\n          totalResults = _this$props.totalResults,\n          label = _this$props.label,\n          overridableId = _this$props.overridableId;\n      return /*#__PURE__*/React__default.createElement(ShouldRender$1, {\n        condition: !loading && totalResults > 0 && currentSize !== -1\n      }, label( /*#__PURE__*/React__default.createElement(Element$c, {\n        currentSize: currentSize,\n        options: this.options,\n        onValueChange: this.onChange,\n        overridableId: overridableId\n      })));\n    }\n  }]);\n\n  return ResultsPerPage;\n}(React.Component);\n\nResultsPerPage.defaultProps = {\n  defaultValue: 10,\n  label: function label(cmp) {\n    return cmp;\n  },\n  overridableId: ''\n};\n\nvar Element$c = function Element(_ref) {\n  var overridableId = _ref.overridableId,\n      props = _objectWithoutProperties(_ref, [\"overridableId\"]);\n\n  var currentSize = props.currentSize,\n      options = props.options,\n      onValueChange = props.onValueChange;\n\n  var _options = options.map(function (element, index) {\n    return {\n      key: index,\n      text: element.text,\n      value: element.value\n    };\n  });\n\n  return /*#__PURE__*/React__default.createElement(Overridable, Object.assign({\n    id: buildUID('ResultsPerPage.element', overridableId)\n  }, props), /*#__PURE__*/React__default.createElement(semanticUiReact.Dropdown, {\n    inline: true,\n    compact: true,\n    options: _options,\n    value: currentSize,\n    onChange: function onChange(e, _ref2) {\n      var value = _ref2.value;\n      return onValueChange(value);\n    }\n  }));\n};\n\nvar ResultsPerPageComponent = Overridable.component('ResultsPerPage', ResultsPerPage);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar mapDispatchToProps$7 = function mapDispatchToProps(dispatch) {\n  return {\n    updateQuerySize: function updateQuerySize(size) {\n      return dispatch(updateQueryPaginationSize(size));\n    },\n    setInitialState: function setInitialState$1(value) {\n      return dispatch(setInitialState(value));\n    }\n  };\n};\n\nvar ResultsPerPage$1 = connectExtended(function (state) {\n  return {\n    loading: state.results.loading,\n    currentSize: state.query.size,\n    totalResults: state.results.data.total\n  };\n}, mapDispatchToProps$7)(ResultsPerPageComponent);\n\nvar SearchBar = /*#__PURE__*/function (_Component) {\n  _inherits(SearchBar, _Component);\n\n  var _super = _createSuper(SearchBar);\n\n  function SearchBar(props) {\n    var _this;\n\n    _classCallCheck(this, SearchBar);\n\n    _this = _super.call(this, props);\n\n    _this.onInputChange = function (queryString) {\n      _this.setState({\n        currentValue: queryString\n      });\n    };\n\n    _this.executeSearch = function () {\n      _this.updateQueryString(_this.state.currentValue);\n    };\n\n    _this.updateQueryString = _this.props.updateQueryString;\n    _this.state = {\n      currentValue: _this.props.queryString || ''\n    };\n    return _this;\n  }\n\n  _createClass(SearchBar, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          placeholder = _this$props.placeholder,\n          overridableId = _this$props.overridableId;\n      return /*#__PURE__*/React__default.createElement(Element$d, {\n        placeholder: placeholder,\n        queryString: this.state.currentValue,\n        onInputChange: this.onInputChange,\n        executeSearch: this.executeSearch,\n        overridableId: overridableId\n      });\n    }\n  }]);\n\n  return SearchBar;\n}(React.Component);\n\nSearchBar.defaultProps = {\n  placeholder: '',\n  queryString: '',\n  overridableId: ''\n};\n\nvar SearchBarUncontrolled = function SearchBarUncontrolled(props) {\n  return /*#__PURE__*/React__default.createElement(SearchBar, Object.assign({\n    key: props.queryString\n  }, props));\n};\n\nvar Element$d = function Element(_ref) {\n  var overridableId = _ref.overridableId,\n      props = _objectWithoutProperties(_ref, [\"overridableId\"]);\n\n  var passedPlaceholder = props.placeholder,\n      queryString = props.queryString,\n      onInputChange = props.onInputChange,\n      executeSearch = props.executeSearch;\n  var placeholder = passedPlaceholder || 'Type something';\n\n  var onBtnSearchClick = function onBtnSearchClick(event, input) {\n    executeSearch();\n  };\n\n  var onKeyPress = function onKeyPress(event, input) {\n    if (event.key === 'Enter') {\n      executeSearch();\n    }\n  };\n\n  return /*#__PURE__*/React__default.createElement(Overridable, Object.assign({\n    id: buildUID('SearchBar.element', overridableId)\n  }, props), /*#__PURE__*/React__default.createElement(semanticUiReact.Input, {\n    action: {\n      content: 'Search',\n      onClick: onBtnSearchClick\n    },\n    fluid: true,\n    placeholder: placeholder,\n    onChange: function onChange(event, _ref2) {\n      var value = _ref2.value;\n      onInputChange(value);\n    },\n    value: queryString,\n    onKeyPress: onKeyPress\n  }));\n};\n\nvar SearchBarComponent = Overridable.component('SearchBar', SearchBarUncontrolled);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar mapDispatchToProps$8 = function mapDispatchToProps(dispatch) {\n  return {\n    updateQueryString: function updateQueryString$1(query) {\n      return dispatch(updateQueryString(query));\n    }\n  };\n};\n\nvar SearchBar$1 = connectExtended(function (state) {\n  return {\n    queryString: state.query.queryString\n  };\n}, mapDispatchToProps$8)(SearchBarComponent);\n\nvar Sort = /*#__PURE__*/function (_Component) {\n  _inherits(Sort, _Component);\n\n  var _super = _createSuper(Sort);\n\n  function Sort(props) {\n    var _this;\n\n    _classCallCheck(this, Sort);\n\n    _this = _super.call(this, props);\n\n    _this._computeValue = function (sortBy, sortOrder) {\n      return \"\".concat(sortBy, \"-\").concat(sortOrder);\n    };\n\n    _this.onChange = function (value) {\n      if (value === _this._computeValue(_this.props.currentSortBy, _this.props.currentSortOrder)) return;\n\n      var selected = _this.options.find(function (option) {\n        return option.value === value;\n      });\n\n      _this.updateQuerySorting(selected.sortBy, selected.sortOrder);\n    };\n\n    _this.options = props.values;\n    _this.updateQuerySorting = props.updateQuerySorting;\n    _this.setInitialState = props.setInitialState;\n\n    _this.options.forEach(function (option) {\n      return option['value'] = _this._computeValue(option.sortBy, option.sortOrder);\n    }); // compute default value for sort field and sort order\n\n\n    var defaultValue = _this.options.find(function (option) {\n      return 'default' in option && option.default;\n    });\n\n    _this.defaultValue = {\n      sortBy: defaultValue.sortBy || _this.options[0].sortBy,\n      sortOrder: defaultValue.sortOrder || _this.options[0].sortOrder\n    };\n\n    var defaultValueOnEmptyString = _this.options.find(function (option) {\n      return 'defaultOnEmptyString' in option && option.defaultOnEmptyString;\n    });\n\n    _this.defaultValueOnEmptyString = {\n      sortBy: defaultValueOnEmptyString ? defaultValueOnEmptyString.sortBy : _this.options[0].sortBy,\n      sortOrder: defaultValueOnEmptyString ? defaultValueOnEmptyString.sortOrder : _this.options[0].sortOrder\n    };\n    return _this;\n  }\n\n  _createClass(Sort, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.currentSortBy === null && this.props.currentSortOrder === null) {\n        var defaultValue = this.props.currentQueryString ? this.defaultValue : this.defaultValueOnEmptyString;\n        this.setInitialState({\n          sortBy: defaultValue.sortBy,\n          sortOrder: defaultValue.sortOrder\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          currentSortBy = _this$props.currentSortBy,\n          currentSortOrder = _this$props.currentSortOrder,\n          loading = _this$props.loading,\n          totalResults = _this$props.totalResults,\n          label = _this$props.label,\n          overridableId = _this$props.overridableId;\n      return /*#__PURE__*/React__default.createElement(ShouldRender$1, {\n        condition: currentSortBy !== null && currentSortOrder !== null && !loading && totalResults > 0\n      }, label( /*#__PURE__*/React__default.createElement(Element$e, {\n        currentSortBy: currentSortBy,\n        currentSortOrder: currentSortOrder,\n        options: this.options,\n        onValueChange: this.onChange,\n        computeValue: this._computeValue,\n        overridableId: overridableId\n      })));\n    }\n  }]);\n\n  return Sort;\n}(React.Component);\n\nSort.defaultProps = {\n  currentSortBy: null,\n  currentSortOrder: null,\n  label: function label(cmp) {\n    return cmp;\n  },\n  overridableId: ''\n};\n\nvar Element$e = function Element(_ref) {\n  var overridableId = _ref.overridableId,\n      props = _objectWithoutProperties(_ref, [\"overridableId\"]);\n\n  var currentSortBy = props.currentSortBy,\n      currentSortOrder = props.currentSortOrder,\n      options = props.options,\n      onValueChange = props.onValueChange,\n      computeValue = props.computeValue;\n  var selected = computeValue(currentSortBy, currentSortOrder);\n\n  var _options = options.map(function (element, index) {\n    return {\n      key: index,\n      text: element.text,\n      value: element.value\n    };\n  });\n\n  return /*#__PURE__*/React__default.createElement(Overridable, Object.assign({\n    id: buildUID('Sort.element', overridableId)\n  }, props), /*#__PURE__*/React__default.createElement(semanticUiReact.Dropdown, {\n    selection: true,\n    compact: true,\n    options: _options,\n    value: selected,\n    onChange: function onChange(e, _ref2) {\n      var value = _ref2.value;\n      return onValueChange(value);\n    }\n  }));\n};\n\nvar SortComponent = Overridable.component('Sort', Sort);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar mapDispatchToProps$9 = function mapDispatchToProps(dispatch) {\n  return {\n    updateQuerySorting: function updateQuerySorting$1(sortBy, sortOrder) {\n      return dispatch(updateQuerySorting(sortBy, sortOrder));\n    },\n    setInitialState: function setInitialState$1(value) {\n      return dispatch(setInitialState(value));\n    }\n  };\n};\n\nvar Sort$1 = connectExtended(function (state) {\n  return {\n    currentQueryString: state.query.queryString,\n    currentSortBy: state.query.sortBy,\n    currentSortOrder: state.query.sortOrder,\n    loading: state.results.loading,\n    totalResults: state.results.data.total\n  };\n}, mapDispatchToProps$9)(SortComponent);\n\nvar SortBy = /*#__PURE__*/function (_Component) {\n  _inherits(SortBy, _Component);\n\n  var _super = _createSuper(SortBy);\n\n  function SortBy(props) {\n    var _this;\n\n    _classCallCheck(this, SortBy);\n\n    _this = _super.call(this, props);\n\n    _this.onChange = function (value) {\n      if (value === _this.props.currentSortBy) return;\n\n      _this.updateQuerySortBy(value);\n    };\n\n    _this.options = props.values;\n    _this.defaultValue = _this.props.defaultValue;\n    _this.defaultValueOnEmptyString = _this.props.defaultValueOnEmptyString;\n    _this.updateQuerySortBy = props.updateQuerySortBy;\n    _this.setInitialState = props.setInitialState;\n    return _this;\n  }\n\n  _createClass(SortBy, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.currentSortBy === null) {\n        var sortBy = this.props.currentQueryString ? this.defaultValue : this.defaultValueOnEmptyString || this.defaultValue;\n        this.setInitialState({\n          sortBy: sortBy\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          currentSortBy = _this$props.currentSortBy,\n          loading = _this$props.loading,\n          totalResults = _this$props.totalResults,\n          label = _this$props.label,\n          overridableId = _this$props.overridableId;\n      return /*#__PURE__*/React__default.createElement(ShouldRender$1, {\n        condition: currentSortBy !== null && !loading && totalResults > 0\n      }, label( /*#__PURE__*/React__default.createElement(Element$f, {\n        currentSortBy: currentSortBy,\n        options: this.options,\n        onValueChange: this.onChange,\n        overridableId: overridableId\n      })));\n    }\n  }]);\n\n  return SortBy;\n}(React.Component);\n\nSortBy.defaultProps = {\n  defaultValueOnEmptyString: null,\n  currentSortBy: null,\n  label: function label(cmp) {\n    return cmp;\n  },\n  overridableId: ''\n};\n\nvar Element$f = function Element(_ref) {\n  var overridableId = _ref.overridableId,\n      props = _objectWithoutProperties(_ref, [\"overridableId\"]);\n\n  var currentSortBy = props.currentSortBy,\n      options = props.options,\n      onValueChange = props.onValueChange;\n\n  var _options = options.map(function (element, index) {\n    return {\n      key: index,\n      text: element.text,\n      value: element.value\n    };\n  });\n\n  return /*#__PURE__*/React__default.createElement(Overridable, Object.assign({\n    id: buildUID('SortBy.element', overridableId)\n  }, props), /*#__PURE__*/React__default.createElement(semanticUiReact.Dropdown, {\n    selection: true,\n    compact: true,\n    options: _options,\n    value: currentSortBy,\n    onChange: function onChange(e, _ref2) {\n      var value = _ref2.value;\n      return onValueChange(value);\n    }\n  }));\n};\n\nvar SortByComponent = Overridable.component('SortBy', SortBy);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar mapDispatchToProps$a = function mapDispatchToProps(dispatch) {\n  return {\n    updateQuerySortBy: function updateQuerySortBy$1(sortByValue) {\n      return dispatch(updateQuerySortBy(sortByValue));\n    },\n    setInitialState: function setInitialState$1(value) {\n      return dispatch(setInitialState(value));\n    }\n  };\n};\n\nvar SortBy$1 = connectExtended(function (state) {\n  return {\n    loading: state.results.loading,\n    totalResults: state.results.data.total,\n    currentSortBy: state.query.sortBy,\n    currentQueryString: state.query.queryString\n  };\n}, mapDispatchToProps$a)(SortByComponent);\n\nvar SortOrder = /*#__PURE__*/function (_Component) {\n  _inherits(SortOrder, _Component);\n\n  var _super = _createSuper(SortOrder);\n\n  function SortOrder(props) {\n    var _this;\n\n    _classCallCheck(this, SortOrder);\n\n    _this = _super.call(this, props);\n\n    _this.onChange = function (value) {\n      if (value === _this.props.currentSortOrder) return;\n\n      _this.updateQuerySortOrder(value);\n    };\n\n    _this.options = props.values;\n    _this.defaultValue = _this.props.defaultValue;\n    _this.updateQuerySortOrder = props.updateQuerySortOrder;\n    _this.setInitialState = props.setInitialState;\n    return _this;\n  }\n\n  _createClass(SortOrder, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.currentSortOrder === null) {\n        this.setInitialState({\n          sortOrder: this.defaultValue\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          currentSortOrder = _this$props.currentSortOrder,\n          loading = _this$props.loading,\n          totalResults = _this$props.totalResults,\n          label = _this$props.label,\n          overridableId = _this$props.overridableId;\n      return /*#__PURE__*/React__default.createElement(ShouldRender$1, {\n        condition: currentSortOrder !== null && !loading && totalResults > 0\n      }, label( /*#__PURE__*/React__default.createElement(Element$g, {\n        currentSortOrder: currentSortOrder,\n        options: this.options,\n        onValueChange: this.onChange,\n        overridableId: overridableId\n      })));\n    }\n  }]);\n\n  return SortOrder;\n}(React.Component);\n\nSortOrder.defaultProps = {\n  currentSortOrder: null,\n  label: function label(cmp) {\n    return cmp;\n  },\n  overridableId: ''\n};\n\nvar Element$g = function Element(_ref) {\n  var overridableId = _ref.overridableId,\n      props = _objectWithoutProperties(_ref, [\"overridableId\"]);\n\n  var currentSortOrder = props.currentSortOrder,\n      options = props.options,\n      onValueChange = props.onValueChange;\n\n  var _options = options.map(function (element, index) {\n    return {\n      key: index,\n      text: element.text,\n      value: element.value\n    };\n  });\n\n  return /*#__PURE__*/React__default.createElement(Overridable, Object.assign({\n    id: buildUID('SortOrder.element', overridableId)\n  }, props), /*#__PURE__*/React__default.createElement(semanticUiReact.Dropdown, {\n    selection: true,\n    compact: true,\n    options: _options,\n    value: currentSortOrder,\n    onChange: function onChange(e, _ref2) {\n      var value = _ref2.value;\n      return onValueChange(value);\n    }\n  }));\n};\n\nvar SortOrderComponent = Overridable.component('SortOrder', SortOrder);\n/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nvar mapDispatchToProps$b = function mapDispatchToProps(dispatch) {\n  return {\n    updateQuerySortOrder: function updateQuerySortOrder$1(sortOrderValue) {\n      return dispatch(updateQuerySortOrder(sortOrderValue));\n    },\n    setInitialState: function setInitialState$1(value) {\n      return dispatch(setInitialState(value));\n    }\n  };\n};\n\nvar SortOrder$1 = connectExtended(function (state) {\n  return {\n    loading: state.results.loading,\n    totalResults: state.results.data.total,\n    currentSortOrder: state.query.sortOrder\n  };\n}, mapDispatchToProps$b)(SortOrderComponent);\n\nfunction withState(Component) {\n  var WrappedComponent = function WrappedComponent(_ref) {\n    var dispatch = _ref.dispatch,\n        props = _objectWithoutProperties(_ref, [\"dispatch\"]);\n\n    return /*#__PURE__*/React__default.createElement(Component, props);\n  };\n\n  var mapStateToProps = function mapStateToProps(state) {\n    return {\n      currentQueryState: state.query,\n      currentResultsState: state.results\n    };\n  };\n\n  var mapDispatchToProps = function mapDispatchToProps(dispatch) {\n    return {\n      updateQueryState: function updateQueryState(queryState) {\n        return dispatch(updateQueryState$1(queryState));\n      }\n    };\n  };\n\n  return connectExtended(mapStateToProps, mapDispatchToProps)(WrappedComponent);\n}\n\nvar onQueryChanged = function onQueryChanged(payload) {\n  var evt = new CustomEvent('queryChanged', {\n    detail: payload\n  });\n  window.dispatchEvent(evt);\n};\n\nexports.ActiveFilters = ActiveFilters$1;\nexports.AutocompleteSearchBar = AutocompleteSearchBar$1;\nexports.BucketAggregation = BucketAggregation$1;\nexports.Count = Count$1;\nexports.ESRequestSerializer = ESRequestSerializer;\nexports.ESResponseSerializer = ESResponseSerializer;\nexports.ESSearchApi = ESSearchApi;\nexports.EmptyResults = EmptyResults$1;\nexports.Error = Error$2;\nexports.InvenioRequestSerializer = InvenioRequestSerializer;\nexports.InvenioResponseSerializer = InvenioResponseSerializer;\nexports.InvenioSearchApi = InvenioSearchApi;\nexports.InvenioSuggestionApi = InvenioSuggestionApi;\nexports.LayoutSwitcher = LayoutSwitcher$1;\nexports.Pagination = Pagination$1;\nexports.ReactSearchKit = ReactSearchKit$1;\nexports.ResultsGrid = ResultsGrid$1;\nexports.ResultsList = ResultsList$1;\nexports.ResultsLoader = ResultsLoader$1;\nexports.ResultsMultiLayout = ResultsMultiLayout$1;\nexports.ResultsPerPage = ResultsPerPage$1;\nexports.SearchBar = SearchBar$1;\nexports.Sort = Sort$1;\nexports.SortBy = SortBy$1;\nexports.SortOrder = SortOrder$1;\nexports.UrlHandlerApi = UrlHandlerApi;\nexports.configureStore = configureStore;\nexports.connect = connectExtended;\nexports.onQueryChanged = onQueryChanged;\nexports.withState = withState;","map":{"version":3,"sources":["../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../../src/lib/api/contrib/elasticsearch/ESRequestSerializer.js","../../src/lib/api/contrib/elasticsearch/ESResponseSerializer.js","../../node_modules/regenerator-runtime/runtime.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../../src/lib/api/contrib/elasticsearch/ESSearchApi.js","../../src/lib/api/contrib/invenio/InvenioRequestSerializer.js","../../src/lib/api/contrib/invenio/InvenioResponseSerializer.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../../src/lib/api/contrib/invenio/InvenioSearchApi.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/superPropBase.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js","../../src/lib/api/contrib/invenio/InvenioSuggestionApi.js","../../src/lib/api/UrlHandlerApi.js","../../src/lib/state/types/index.js","../../src/lib/state/selectors/query.js","../../src/lib/storeConfig.js","../../src/lib/state/reducers/query.js","../../src/lib/state/reducers/results.js","../../src/lib/state/reducers/index.js","../../src/lib/store.js","../../src/lib/state/actions/query.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../src/lib/util.js","../../src/lib/components/ActiveFilters/ActiveFilters.js","../../src/lib/components/ActiveFilters/index.js","../../src/lib/components/BucketAggregation/BucketAggregationValues.js","../../src/lib/components/BucketAggregation/BucketAggregation.js","../../src/lib/components/BucketAggregation/index.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/lib/components/AutocompleteSearchBar/AutocompleteSearchBar.js","../../src/lib/components/AutocompleteSearchBar/index.js","../../src/lib/components/ShouldRender/ShouldRender.js","../../src/lib/components/Count/Count.js","../../src/lib/components/Count/index.js","../../src/lib/components/EmptyResults/EmptyResults.js","../../src/lib/components/EmptyResults/index.js","../../src/lib/components/Error/Error.js","../../src/lib/components/Error/index.js","../../src/lib/components/LayoutSwitcher/LayoutSwitcher.js","../../src/lib/components/LayoutSwitcher/index.js","../../src/lib/components/ResultsLoader/ResultsLoader.js","../../src/lib/components/ResultsLoader/index.js","../../src/lib/components/Pagination/Pagination.js","../../src/lib/components/Pagination/index.js","../../src/lib/components/Bootstrap/Bootstrap.js","../../src/lib/components/Bootstrap/index.js","../../src/lib/components/ReactSearchKit/ReactSearchKit.js","../../src/lib/components/ResultsGrid/ResultsGrid.js","../../src/lib/components/ResultsGrid/index.js","../../src/lib/components/ResultsList/ResultsList.js","../../src/lib/components/ResultsList/index.js","../../src/lib/components/ResultsMultiLayout/ResultsMultiLayout.js","../../src/lib/components/ResultsMultiLayout/index.js","../../src/lib/components/ResultsPerPage/ResultsPerPage.js","../../src/lib/components/ResultsPerPage/index.js","../../src/lib/components/SearchBar/SearchBar.js","../../src/lib/components/SearchBar/index.js","../../src/lib/components/Sort/Sort.js","../../src/lib/components/Sort/index.js","../../src/lib/components/SortBy/SortBy.js","../../src/lib/components/SortBy/index.js","../../src/lib/components/SortOrder/SortOrder.js","../../src/lib/components/SortOrder/index.js","../../src/lib/components/HOC/withState.js","../../src/lib/events.js"],"names":["ESRequestSerializer","queryString","sortBy","sortOrder","page","size","stateQuery","bodyParams","_isEmpty","query_string","query","sortObj","s","from","ESResponseSerializer","aggregations","payload","hits","hit","total","value","undefined","require$$0","ESSearchApi","_get","_hasIn","requestSerializerCls","responseSerializerCls","axios","response","method","data","InvenioRequestSerializer","Array","filter","aggName","fieldValue","filterUrlParams","hasChild","filters","getParams","filterParams","_extend","arrayFormat","InvenioResponseSerializer","defineProperty","InvenioSearchApi","axiosConfig","paramsSerializer","serialize","params","getPrototypeOf","superPropBase","setPrototypeOf","assertThisInitialized","isNativeReflectConstruct","possibleConstructorReturn","InvenioSuggestionRequestSerializer","suggestionString","encode","InvenioSuggestionResponseSerializer","responseField","suggestions","InvenioSuggestionApi","config","pushHistory","window","path","replaceHistory","UrlParser","parsedValue","parseInt","_isNaN","_value","JSON","_isNil","console","parsedParams","ignoreQueryPrefix","Object","key","entry","UrlParamValidator","isValid","UrlHandlerApi","_isObject","layout","_isBoolean","_isString","childFilter","stateKey","queryState","paramKey","addQueryPrefix","skipNulls","indices","childSepPos","filterStr","aggNamePos","end","filterList","result","urlParamsObj","queryStateKey","_queryState","_cloneDeep","urlStateObj","newQueryState","newUrlParams","SET_QUERY_COMPONENT_INITIAL_STATE","SET_QUERY_STRING","SET_QUERY_SORTING","SET_QUERY_SORT_BY","SET_QUERY_SORT_ORDER","SET_QUERY_STATE","SET_QUERY_PAGINATION_PAGE","SET_QUERY_PAGINATION_SIZE","SET_QUERY_FILTERS","SET_QUERY_SUGGESTIONS","SET_SUGGESTION_STRING","CLEAR_QUERY_SUGGESTIONS","RESULTS_LOADING","RESULTS_FETCH_SUCCESS","RESULTS_FETCH_ERROR","RESULTS_UPDATE_LAYOUT","RESET_QUERY","first","q","array","Qs","arr","lastChild","removeLastChild","strQuery","toString","strStateFilters","anyRemoved","filteredStrStates","childFilterExists","startsWith","parentFilterExists","queryFilter","parse","updateQueryFilters","_isArray","_head","updateFilter","tempStateFilters","_forEach","updateQueryState","pickedState","_pick","oldState","INITIAL_STORE_STATE","STORE_KEYS","state","action","loading","error","combineReducers","results","resultsReducer","initialQueryState","initialResultsState","appConfig","preloadedQueryState","preloadedState","createStore","applyMiddleware","thunk","connect","setInitialState","dispatch","type","initialState","onAppInitialized","executeQuery","shouldUpdateUrlQueryString","updateQueryString","updateQuerySorting","sortOrderValue","updateQuerySortBy","sortByValue","updateQuerySortOrder","updateQueryPaginationPage","updateQueryPaginationSize","updateResultsLayout","urlHandlerApi","newStateQuery","getState","resetQuery","shouldReplaceUrlQueryString","searchApi","updateSuggestions","executeSuggestionQuery","suggestionApi","clearSuggestions","objectWithoutPropertiesLoose","overridableId","ActiveFilters","Component","props","currentFilter","label","activeFilter","renderElement","Element","removeActiveFilter","getLabel","buildUID","Label","Icon","Overridable","mapDispatchToProps","BucketAggregationValues","hasChildAggregation","selectedChildFilters","childBuckets","bucket","selectedFilters","isThisAggregation","isThisValue","onFilterClicked","buckets","valuesCmp","isSelected","getChildAggCmps","ValueElement","childAggCmps","List","Checkbox","ContainerElement","React","BucketAggregation","thisAggs","userSelectionFilters","resultsAggregations","resultBuckets","renderValuesContainerElement","renderValueElement","title","containerCmp","Card","AutocompleteSearchBar","leading","currentValue","placeholder","handleAutocompleteChange","minCharsToAutocomplete","AutocompleteSearchBarUncontrolled","querySuggestions","onInputChange","executeSearch","onBtnSearchClick","onKeyPress","event","Input","content","onClick","Suggestions","onSuggestionSelected","suggestion","text","mapStateToProps","ShouldRender","condition","Count","totalResults","EmptyResults","Segment","Header","Button","Error","LayoutSwitcher","defaultValue","currentLayout","defaultLayout","onLayoutChange","clickHandler","name","Menu","updateLayout","children","ResultsLoader","Loader","Pagination","activePage","currentPage","currentSize","options","boundaryRangeCount","siblingRangeCount","showEllipsis","showFirst","showLast","showPrev","showNext","onPageChange","extraParams","pages","Math","_onPageChange","Paginator","updateQueryPage","Bootstrap","detail","appReceiverName","Fragment","searchOnInit","_onAppInitialized","searchOnUrlQueryStringChanged","ReactSearchKit","defaultSortByOnEmptyQuery","configureStore","Provider","store","eventListenerEnabled","enabled","overrideConfig","customHandler","appName","resultsPerRow","ResultsGrid","GridItem","index","Image","_results","ResultsList","ListItem","Item","ResultsMultiLayout","ResultsPerPage","onValueChange","_options","element","Dropdown","updateQuerySize","SearchBar","SearchBarUncontrolled","passedPlaceholder","Sort","option","defaultValueOnEmptyString","selected","currentSortBy","currentSortOrder","computeValue","currentQueryString","SortBy","SortOrder","WrappedComponent","currentQueryState","currentResultsState","onQueryChanged","evt"],"mappings":"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","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport _isEmpty from 'lodash/isEmpty';\n\nexport class ESRequestSerializer {\n  constructor() {\n    this.serialize = this.serialize.bind(this);\n  }\n\n  /**\n   * Return a serialized version of the app state `query` for the API backend.\n   * @param {object} stateQuery the `query` state to serialize\n   */\n  serialize(stateQuery) {\n    const { queryString, sortBy, sortOrder, page, size } = stateQuery;\n\n    const bodyParams = {};\n    if (!_isEmpty(queryString)) {\n      bodyParams['query'] = {\n        query_string: {\n          query: queryString,\n        },\n      };\n    }\n    if (sortBy) {\n      const sortObj = {};\n      sortObj[sortBy] = sortOrder && sortOrder === 'desc' ? 'desc' : 'asc';\n      bodyParams['sort'] = sortObj;\n    }\n\n    if (size > 0) {\n      bodyParams['size'] = size;\n    }\n\n    if (page > 0) {\n      const s = size > 0 ? size : 0;\n      const from = (page - 1) * s;\n      bodyParams['from'] = from;\n    }\n\n    return bodyParams;\n  }\n}\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nexport class ESResponseSerializer {\n  constructor() {\n    this.serialize = this.serialize.bind(this);\n  }\n\n  /**\n   * Return a serialized version of the API backend response for the app state `results`.\n   * @param {object} payload the backend response payload\n   */\n  serialize(payload) {\n    return {\n      aggregations: payload.aggregations || {},\n      hits: payload.hits.hits.map(hit => hit._source),\n      total: payload.hits.total.value,\n    };\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport _get from 'lodash/get';\nimport _hasIn from 'lodash/hasIn';\nimport axios from 'axios';\nimport { ESRequestSerializer } from './ESRequestSerializer';\nimport { ESResponseSerializer } from './ESResponseSerializer';\n\nexport class ESSearchApi {\n  constructor(config) {\n    this.axiosConfig = _get(config, 'axios', {});\n    this.validateAxiosConfig();\n    this.initSerializers(config);\n    this.initInterceptors(config);\n    this.initAxios();\n    this.search = this.search.bind(this);\n  }\n\n  validateAxiosConfig() {\n    if (!_hasIn(this.axiosConfig, 'url')) {\n      throw new Error('ESSearchApi config: `node` field is required.');\n    }\n  }\n\n  initInterceptors(config) {\n    this.requestInterceptor = _get(config, 'interceptors.request', undefined);\n    this.responseInterceptor = _get(config, 'interceptors.response', undefined);\n  }\n\n  initSerializers(config) {\n    const requestSerializerCls = _get(\n      config,\n      'es.requestSerializer',\n      ESRequestSerializer\n    );\n    const responseSerializerCls = _get(\n      config,\n      'es.responseSerializer',\n      ESResponseSerializer\n    );\n\n    this.requestSerializer = new requestSerializerCls();\n    this.responseSerializer = new responseSerializerCls();\n  }\n\n  initAxios() {\n    this.http = axios.create(this.axiosConfig);\n    this.addInterceptors();\n  }\n\n  addInterceptors() {\n    if (this.requestInterceptor) {\n      this.http.interceptors.request.use(\n        this.requestInterceptor.resolve,\n        this.requestInterceptor.reject\n      );\n    }\n    if (this.responseInterceptor) {\n      this.http.interceptors.request.use(\n        this.responseInterceptor.resolve,\n        this.responseInterceptor.reject\n      );\n    }\n  }\n\n  /**\n   * Perform the backend request to search and return the serialized list of results for the app state `results`.\n   * @param {string} stateQuery the `query` state with the user input\n   */\n  async search(stateQuery) {\n    const payload = this.requestSerializer.serialize(stateQuery);\n    const response = await this.http.request({\n      method: 'POST',\n      data: payload,\n    });\n    return this.responseSerializer.serialize(response.data);\n  }\n}\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport Qs from 'qs';\nimport _extend from 'lodash/extend';\n\n/** Default backend request serializer */\nexport class InvenioRequestSerializer {\n  constructor() {\n    this.serialize = this.serialize.bind(this);\n  }\n\n  _addFilter = (filter, filterUrlParams) => {\n    if (!Array.isArray(filter)) {\n      throw new Error(\n        `Filter value \"${filter}\" in query state must be an array.`\n      );\n    }\n    if (!(filter.length === 2 || filter.length === 3)) {\n      throw new Error(\n        `Filter value \"${filter}\" in query state must be an array of 2 or 3 elements`\n      );\n    }\n    const aggName = filter[0];\n    const fieldValue = filter[1];\n    filterUrlParams[aggName] = fieldValue;\n    const hasChild = filter.length === 3;\n    if (hasChild) {\n      this._addFilter(filter[2], filterUrlParams);\n    }\n  };\n\n  _addFilters = filters => {\n    if (!Array.isArray(filters)) {\n      throw new Error(`Filters query state \"${filters}\" must be an array.`);\n    }\n    /**\n     * input: [\n     *   [ 'type_agg', 'value1' ]\n     *   [ 'type_agg', 'value2', [ 'subtype_agg', 'a value' ] ]\n     * ]\n     */\n    const filterUrlParams = {};\n    filters.forEach(filter => {\n      this._addFilter(filter, filterUrlParams);\n    });\n    /**\n     * output: {\n     *  type_agg: 'value1'.\n     *  subtype_agg: 'a value'\n     * }\n     */\n    return filterUrlParams;\n  };\n\n  /**\n   * Return a serialized version of the app state `query` for the API backend.\n   * @param {object} stateQuery the `query` state to serialize\n   */\n  serialize(stateQuery) {\n    const { queryString, sortBy, sortOrder, page, size, filters } = stateQuery;\n\n    const getParams = {};\n    if (queryString !== null) {\n      getParams['q'] = queryString;\n    }\n    if (sortBy !== null) {\n      getParams['sort'] = sortBy;\n\n      if (sortOrder !== null) {\n        getParams['sort'] = sortOrder === 'desc' ? `-${sortBy}` : sortBy;\n      }\n    }\n    if (page > 0) {\n      getParams['page'] = page;\n    }\n    if (size > 0) {\n      getParams['size'] = size;\n    }\n    const filterParams = this._addFilters(filters);\n    _extend(getParams, filterParams);\n\n    return Qs.stringify(getParams, { arrayFormat: 'repeat' });\n  }\n}\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\n/** Default backend response serializer */\nexport class InvenioResponseSerializer {\n  constructor() {\n    this.serialize = this.serialize.bind(this);\n  }\n\n  /**\n   * Return a serialized version of the API backend response for the app state `results`.\n   * @param {object} payload the backend response payload\n   */\n  serialize(payload) {\n    return {\n      aggregations: payload.aggregations || {},\n      hits: payload.hits.hits,\n      total: payload.hits.total,\n    };\n  }\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport _get from 'lodash/get';\nimport _hasIn from 'lodash/hasIn';\nimport axios from 'axios';\nimport { InvenioRequestSerializer } from './InvenioRequestSerializer';\nimport { InvenioResponseSerializer } from './InvenioResponseSerializer';\n\nexport class InvenioSearchApi {\n  constructor(config) {\n    this.axiosConfig = _get(config, 'axios', {});\n    this.validateAxiosConfig();\n    this.initSerializers(config);\n    this.initInterceptors(config);\n    this.initAxios();\n    this.search = this.search.bind(this);\n  }\n\n  validateAxiosConfig() {\n    if (!_hasIn(this.axiosConfig, 'url')) {\n      throw new Error('InvenioSearchApi config: `url` field is required.');\n    }\n  }\n\n  initInterceptors(config) {\n    this.requestInterceptor = _get(config, 'interceptors.request', undefined);\n    this.responseInterceptor = _get(config, 'interceptors.response', undefined);\n  }\n\n  initSerializers(config) {\n    const requestSerializerCls = _get(\n      config,\n      'invenio.requestSerializer',\n      InvenioRequestSerializer\n    );\n    const responseSerializerCls = _get(\n      config,\n      'invenio.responseSerializer',\n      InvenioResponseSerializer\n    );\n\n    this.requestSerializer = new requestSerializerCls();\n    this.responseSerializer = new responseSerializerCls();\n  }\n\n  initAxios() {\n    const axiosConfig = {\n      paramsSerializer: this.requestSerializer.serialize,\n      ...this.axiosConfig,\n    };\n    this.http = axios.create(axiosConfig);\n    this.addInterceptors();\n  }\n\n  addInterceptors() {\n    if (this.requestInterceptor) {\n      this.http.interceptors.request.use(\n        this.requestInterceptor.resolve,\n        this.requestInterceptor.reject\n      );\n    }\n    if (this.responseInterceptor) {\n      this.http.interceptors.request.use(\n        this.responseInterceptor.resolve,\n        this.responseInterceptor.reject\n      );\n    }\n  }\n\n  /**\n   * Perform the backend request to search and return the serialized list of results for the app state `results`.\n   * @param {string} stateQuery the `query` state with the user input\n   */\n  async search(stateQuery) {\n    const response = await this.http.request({\n      params: stateQuery,\n    });\n    return this.responseSerializer.serialize(response.data);\n  }\n}\n","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}","import superPropBase from \"./superPropBase\";\nexport default function _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import getPrototypeOf from \"./getPrototypeOf\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn\";\nexport default function _createSuper(Derived) {\n  return function () {\n    var Super = getPrototypeOf(Derived),\n        result;\n\n    if (isNativeReflectConstruct()) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return possibleConstructorReturn(this, result);\n  };\n}","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport _get from 'lodash/get';\nimport _hasIn from 'lodash/hasIn';\nimport Qs from 'qs';\nimport { InvenioSearchApi } from './InvenioSearchApi';\n\nclass InvenioSuggestionRequestSerializer {\n  constructor(queryField) {\n    this.queryField = queryField;\n    this.serialize = this.serialize.bind(this);\n  }\n\n  /**\n   * Return a serialized version of the app state `query` for the API backend.\n   * @param {object} stateQuery the `query` state to serialize\n   */\n  serialize(stateQuery) {\n    const { suggestionString } = stateQuery;\n\n    const getParams = {};\n    if (suggestionString !== null) {\n      getParams['q'] = this.queryField + ':' + suggestionString;\n    }\n\n    return Qs.stringify(getParams, { arrayFormat: 'repeat', encode: false });\n  }\n}\n\nclass InvenioSuggestionResponseSerializer {\n  constructor(responseField) {\n    this.responseFieldPath = responseField.split('.');\n    this.serialize = this.serialize.bind(this);\n  }\n\n  _serializeSuggestions = responseHits => {\n    return Array.from(\n      new Set(\n        responseHits.map(hit => _get(hit.metadata, this.responseFieldPath))\n      )\n    );\n  };\n\n  /**\n   * Return a serialized version of the API backend response for the app state `suggestions`.\n   * @param {object} payload the backend response payload\n   */\n  serialize(payload) {\n    return {\n      suggestions: this._serializeSuggestions(payload.hits.hits || []),\n    };\n  }\n}\n\nexport class InvenioSuggestionApi extends InvenioSearchApi {\n  validateConfig(config) {\n    super.validateConfig(config);\n\n    if (!_hasIn(config, 'invenio.suggestions.queryField')) {\n      throw new Error(\n        'InvenioSuggestionApi config: `invenio.suggestions.queryField` is required.'\n      );\n    }\n    if (!_hasIn(config, 'invenio.suggestions.responseField')) {\n      throw new Error(\n        'InvenioSuggestionApi config: `invenio.suggestions.queryField` is responseField.'\n      );\n    }\n  }\n\n  initSerializers(config) {\n    const requestSerializerCls = _get(\n      config,\n      'invenio.requestSerializer',\n      InvenioSuggestionRequestSerializer\n    );\n    const responseSerializerCls = _get(\n      config,\n      'invenio.responseSerializer',\n      InvenioSuggestionResponseSerializer\n    );\n\n    this.requestSerializer = new requestSerializerCls(\n      config.invenio.suggestions.queryField\n    );\n    this.responseSerializer = new responseSerializerCls(\n      config.invenio.suggestions.responseField\n    );\n  }\n}\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport Qs from 'qs';\nimport _isString from 'lodash/isString';\nimport _isBoolean from 'lodash/isBoolean';\nimport _isObject from 'lodash/isObject';\nimport _isNaN from 'lodash/isNaN';\nimport _isNil from 'lodash/isNil';\nimport _cloneDeep from 'lodash/cloneDeep';\n\nconst pushHistory = query => {\n  if (window.history.pushState) {\n    window.history.pushState({ path: query }, '', query);\n  }\n};\n\nconst replaceHistory = query => {\n  if (window.history.replaceState) {\n    window.history.replaceState({ path: query }, '', query);\n  }\n};\n\n/** Default URL parser implementation */\nclass UrlParser {\n  constructor() {\n    this.parse = this.parse.bind(this);\n  }\n\n  _sanitizeParamValue = value => {\n    let parsedValue = parseInt(value);\n    if (_isNaN(parsedValue)) {\n      try {\n        const _value = JSON.parse(value);\n        if (!_isNil(_value)) {\n          parsedValue = _value;\n        }\n      } catch (e) {\n        if (value !== 'undefined') {\n          parsedValue = value;\n        } else {\n          console.error(`Cannot parse value ${value}.`);\n        }\n      }\n    }\n    return parsedValue;\n  };\n\n  /**\n   * Parse the URL query string and return an object with all the params.\n   * @param {string} queryString the query string to parse\n   */\n  parse(queryString = '') {\n    const parsedParams = Qs.parse(queryString, { ignoreQueryPrefix: true });\n    const params = {};\n    Object.entries(parsedParams).forEach(entry => {\n      const key = entry[0];\n      const value = entry[1];\n      params[key] = this._sanitizeParamValue(value);\n    });\n    return params;\n  }\n}\n\n/** Default implementation for a param validator class */\nclass UrlParamValidator {\n  /**\n   * Return true if the param value is valid, false otherwise\n   * @param {object} queryState the `query` state\n   * @param {boolean} updateUrlQueryString a flag to push the new updated version of `query` state to the URL query string\n   */\n  isValid = (key, value) => true;\n}\n\n/** Object responsible to update the URL query string and parse it to update the app state */\nexport class UrlHandlerApi {\n  constructor(config = {}) {\n    this.urlParamsMapping = _isObject(config.urlParamsMapping)\n      ? config.urlParamsMapping\n      : {\n          queryString: 'q',\n          sortBy: 'sort',\n          sortOrder: 'order',\n          page: 'p',\n          size: 's',\n          layout: 'l',\n          filters: 'f',\n        };\n\n    this.keepHistory =\n      config.keepHistory !== undefined ? config.keepHistory : true;\n    if (!_isBoolean(this.keepHistory)) {\n      throw new Error(\n        `\"keepHistory configuration must be a boolean, ${this.keepHistory} provided.`\n      );\n    }\n\n    this.urlFilterSeparator =\n      config.urlFilterSeparator !== undefined ? config.urlFilterSeparator : '+';\n    if (!_isString(this.urlFilterSeparator)) {\n      throw new Error(\n        `\"urlFilterSeparator configuration must be a string, ${this.urlFilterSeparator} provided.`\n      );\n    }\n\n    this.urlParamValidator =\n      config.urlParamValidator || new UrlParamValidator();\n    this.urlParser = config.urlParser || new UrlParser();\n\n    // build the serializer from URL params to Query state by flipping the urlParamsMapping\n    this.fromUrlParamsMapping = {};\n    Object.keys(this.urlParamsMapping).forEach(stateKey => {\n      this.fromUrlParamsMapping[this.urlParamsMapping[stateKey]] = stateKey;\n    });\n\n    this.get = this.get.bind(this);\n    this.set = this.set.bind(this);\n    this.replace = this.replace.bind(this);\n  }\n\n  /**\n   * Map filters from list to string that is human readable\n   * [ 'type', 'photo', [ 'subtype', 'png' ]] => type:photo+subtype:png\n   */\n  _filterListToString = filter => {\n    const childFilter =\n      filter.length === 3\n        ? this.urlFilterSeparator.concat(this._filterListToString(filter[2]))\n        : '';\n    return `${filter[0]}:${filter[1]}${childFilter}`;\n  };\n\n  /**\n   * Map each query state field to an URL param\n   */\n  _mapQueryStateToUrlParams = queryState => {\n    const params = {};\n    Object.keys(queryState)\n      .filter(stateKey => stateKey in this.urlParamsMapping)\n      .filter(stateKey => {\n        // filter out negative or null values\n        if (\n          (stateKey === 'page' || stateKey === 'size') &&\n          queryState[stateKey] <= 0\n        ) {\n          return false;\n        }\n        return queryState[stateKey] !== null;\n      })\n      .forEach(stateKey => {\n        const paramKey = this.urlParamsMapping[stateKey];\n        if (stateKey === 'filters') {\n          params[paramKey] = queryState[stateKey].map(filter =>\n            this._filterListToString(filter)\n          );\n        } else {\n          params[paramKey] = queryState[stateKey];\n        }\n      });\n\n    // will omit undefined and null values from the query\n    return Qs.stringify(params, {\n      addQueryPrefix: true,\n      skipNulls: true,\n      indices: false, // order for filters params is not important, remove indices\n    });\n  };\n\n  /**\n   * Map filters from string to list\n   * type:photo+subtype:png => [ 'type', 'photo', [ 'subtype', 'png' ]]\n   */\n  _filterStringToList = filterStr => {\n    const childSepPos = filterStr.indexOf(this.urlFilterSeparator);\n    const hasChild = childSepPos > -1;\n\n    const aggNamePos = filterStr.indexOf(':');\n    if (aggNamePos === -1) {\n      throw new Error(\n        `Filter \"${filterStr}\" not parsable. Format expected: \"<agg name>:<value>\"`\n      );\n    }\n    const aggName = filterStr.slice(0, aggNamePos);\n    const end = hasChild ? childSepPos : filterStr.length;\n    const value = filterStr.slice(aggNamePos + 1, end);\n    let filterList = [aggName, value];\n    if (hasChild) {\n      const childFilter = filterStr.slice(childSepPos + 1, filterStr.length);\n      filterList.push(this._filterStringToList(childFilter));\n    }\n    return filterList;\n  };\n\n  /**\n   * Map each URL param to a query state field\n   */\n  _mapUrlParamsToQueryState = urlParamsObj => {\n    const result = {};\n    Object.keys(urlParamsObj).forEach(paramKey => {\n      if (this.urlParamValidator.isValid(paramKey, urlParamsObj[paramKey])) {\n        const queryStateKey = this.fromUrlParamsMapping[paramKey];\n        result[queryStateKey] = urlParamsObj[paramKey];\n        // custom transformation for filters\n        if (queryStateKey === 'filters') {\n          if (!Array.isArray(urlParamsObj[paramKey])) {\n            // if only 1 filter, create an array with one element\n            urlParamsObj[paramKey] = [urlParamsObj[paramKey]];\n          }\n          result[queryStateKey] = urlParamsObj[paramKey].map(filter =>\n            this._filterStringToList(filter)\n          );\n        }\n      }\n    });\n    return result;\n  };\n\n  _mergeParamsIntoState = (urlStateObj, queryState) => {\n    const _queryState = _cloneDeep(queryState);\n    Object.keys(urlStateObj).forEach(stateKey => {\n      if (stateKey in _queryState) {\n        _queryState[stateKey] = urlStateObj[stateKey];\n      }\n    });\n    return _queryState;\n  };\n\n  /**\n   * Return a new version of the given `query` state with updated values parsed from the URL query string.\n   * @param {object} queryState the `query` state\n   */\n  get(queryState) {\n    const urlParamsObj = this.urlParser.parse(window.location.search);\n    const urlStateObj = this._mapUrlParamsToQueryState(urlParamsObj);\n    const newQueryState = this._mergeParamsIntoState(urlStateObj, queryState);\n    const newUrlParams = this._mapQueryStateToUrlParams(newQueryState);\n    replaceHistory(newUrlParams);\n    return newQueryState;\n  }\n\n  /**\n   * Update the URL query string parameters from the given `query` state\n   * @param {object} stateQuery the `query` state\n   */\n  set(stateQuery) {\n    if (this.keepHistory) {\n      const newUrlParams = this._mapQueryStateToUrlParams(stateQuery);\n      pushHistory(newUrlParams);\n    } else {\n      this.replace(stateQuery);\n    }\n  }\n\n  /**\n   * Replace the URL query string parameters from the given `query` state\n   * @param {object} stateQuery the `query` state\n   */\n  replace(stateQuery) {\n    const newUrlParams = this._mapQueryStateToUrlParams(stateQuery);\n    replaceHistory(newUrlParams);\n  }\n}\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nexport const SET_QUERY_COMPONENT_INITIAL_STATE =\n  'SET_QUERY_COMPONENT_INITIAL_STATE';\nexport const SET_QUERY_STRING = 'SET_QUERY_STRING';\nexport const SET_QUERY_SORTING = 'SET_QUERY_SORTING';\nexport const SET_QUERY_SORT_BY = 'SET_QUERY_SORT_BY';\nexport const SET_QUERY_SORT_ORDER = 'SET_QUERY_SORT_ORDER';\nexport const SET_QUERY_STATE = 'SET_QUERY_STATE';\nexport const SET_QUERY_PAGINATION_PAGE = 'SET_QUERY_PAGINATION_PAGE';\nexport const SET_QUERY_PAGINATION_SIZE = 'SET_QUERY_PAGINATION_SIZE';\nexport const SET_QUERY_FILTERS = 'SET_QUERY_FILTERS';\nexport const SET_QUERY_SUGGESTIONS = 'SET_QUERY_SUGGESTIONS';\nexport const SET_SUGGESTION_STRING = 'SET_SUGGESTION_STRING';\nexport const CLEAR_QUERY_SUGGESTIONS = 'CLEAR_QUERY_SUGGESTIONS';\n\nexport const RESULTS_LOADING = 'RESULTS_LOADING';\nexport const RESULTS_FETCH_SUCCESS = 'RESULTS_FETCH_SUCCESS';\nexport const RESULTS_FETCH_ERROR = 'RESULTS_FETCH_ERROR';\nexport const RESULTS_UPDATE_LAYOUT = 'RESULTS_UPDATE_LAYOUT';\nexport const SET_RESULTS_COMPONENT_INITIAL_STATE =\n  'SET_RESULTS_COMPONENT_INITIAL_STATE';\nexport const RESET_QUERY = 'RESET_QUERY';\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport Qs from 'qs';\nimport _forEach from 'lodash/forEach';\nimport _head from 'lodash/head';\nimport _isArray from 'lodash/isArray';\nimport _isEmpty from 'lodash/isEmpty';\nimport _pick from 'lodash/pick';\n\n/**\n * Return true if the first string starts and contains the second.\n * @param {string} first a string\n * @param {string} second a string\n */\nfunction startsWith(first, second) {\n  return first.indexOf(second) === 0;\n}\n\nfunction toString(array) {\n  return Qs.stringify({ q: array });\n}\n\nfunction parse(str) {\n  return Qs.parse(str)['q'];\n}\n\nfunction removeLastChild(arr) {\n  const hasChild = arr.length === 3;\n  if (hasChild) {\n    const result = [arr[0], arr[1]];\n    const lastChild = removeLastChild(arr[2]);\n    if (lastChild.length) {\n      result.push(lastChild);\n    }\n    return result;\n  }\n  return [];\n}\n\nfunction updateFilter(queryFilter, stateFilters) {\n  /**\n   * convert query and state to strings so they can be compared\n   */\n  const strQuery = toString(queryFilter);\n  const strStateFilters = stateFilters.map(stateObjQuery =>\n    toString(stateObjQuery)\n  );\n\n  /**\n   * filter out any state that starts with the query or any parent of the query\n   * e.g. query = ['file_type', 'pdf']\n   *      state = [[ 'file_type', 'pdf' ]]\n   *      filtered = []\n   *\n   *      query = [ 'type', 'publication' ]\n   *      state = [['type', 'publication', ['subtype', 'report' ]]\n   *      filtered = []\n   *\n   *      query = ['type', 'publication', ['subtype', 'report']]]\n   *      state = [[ 'type', 'publication' ]]\n   *      filtered = []\n   */\n  let anyRemoved = false;\n  const filteredStrStates = strStateFilters.filter(strStateFilter => {\n    const childFilterExists = startsWith(strStateFilter, strQuery);\n    const parentFilterExists = startsWith(strQuery, strStateFilter);\n\n    if (childFilterExists && !anyRemoved) {\n      anyRemoved = true;\n    }\n    return !childFilterExists && !parentFilterExists;\n  });\n\n  if (!anyRemoved) {\n    /**\n     * if nothing has been removed, it means it was not previously there, so\n     * the user query has to be added.\n     * e.g. query = ['type', 'publication', ['subtype', 'report']]\n     *      state = []\n     *      filtered = [['type', 'publication', ['subtype', 'report']]]\n     */\n    filteredStrStates.push(strQuery);\n  } else {\n    /**\n     * if a filter has been removed, it might have been a child. Add its parent if it is the root parent.\n     * e.g. query = ['type', 'publication', 'subtype', 'report']\n     *      state = [['type', 'publication', ['subtype', 'report']]]\n     *      filtered = [['type', 'publication']]\n     */\n    const hasChild = queryFilter.length === 3;\n    if (hasChild) {\n      const arr = removeLastChild(queryFilter);\n      filteredStrStates.push(toString(arr));\n    }\n  }\n\n  /**\n   * convert back to lists\n   */\n  return filteredStrStates.map(strState => parse(strState));\n}\n\nexport const updateQueryFilters = (queryFilter, stateFilters) => {\n  if (_isEmpty(queryFilter)) return;\n\n  /** If we have one filter as query = ['file_type', 'pdf'] */\n  if (!_isArray(_head(queryFilter))) {\n    return updateFilter(queryFilter, stateFilters);\n  }\n\n  /** If we have an array of filters as query we apply the filters one by one.\n   * e.g. query = [['file_type', 'pdf'], ['file_type', 'txt']]\n   */\n  let tempStateFilters = stateFilters;\n  _forEach(\n    queryFilter,\n    filter => (tempStateFilters = updateFilter(filter, tempStateFilters))\n  );\n  return tempStateFilters;\n};\n\nexport const updateQueryState = (oldState, newState, storeKeys) => {\n  let pickedState = _pick(newState, storeKeys);\n  if ('filters' in pickedState) {\n    pickedState['filters'] = updateQueryFilters(\n      pickedState.filters,\n      oldState.filters\n    );\n  }\n  return pickedState;\n};\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2020 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nexport const INITIAL_STORE_STATE = {\n  queryString: '',\n  suggestions: [],\n  sortBy: null,\n  sortOrder: null,\n  page: -1,\n  size: -1,\n  filters: [],\n  layout: null,\n};\n\nexport const STORE_KEYS = Object.keys(INITIAL_STORE_STATE);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport {\n  SET_QUERY_COMPONENT_INITIAL_STATE,\n  SET_QUERY_STRING,\n  SET_QUERY_SORTING,\n  SET_QUERY_SORT_BY,\n  SET_QUERY_SORT_ORDER,\n  SET_QUERY_PAGINATION_PAGE,\n  SET_QUERY_PAGINATION_SIZE,\n  SET_QUERY_FILTERS,\n  SET_QUERY_SUGGESTIONS,\n  SET_QUERY_STATE,\n  SET_SUGGESTION_STRING,\n  CLEAR_QUERY_SUGGESTIONS,\n  RESULTS_UPDATE_LAYOUT,\n  RESET_QUERY,\n} from '../types';\nimport { updateQueryFilters, updateQueryState } from '../selectors';\nimport { STORE_KEYS } from '../../storeConfig';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case SET_QUERY_STRING:\n      return { ...state, queryString: action.payload, page: 1 };\n    case SET_QUERY_SORTING:\n      return {\n        ...state,\n        sortBy: action.payload.sortBy,\n        sortOrder: action.payload.sortOrder,\n        page: 1,\n      };\n    case SET_QUERY_SORT_BY:\n      return {\n        ...state,\n        sortBy: action.payload,\n        page: 1,\n      };\n    case SET_QUERY_SORT_ORDER:\n      return {\n        ...state,\n        sortOrder: action.payload,\n        page: 1,\n      };\n    case SET_QUERY_PAGINATION_PAGE:\n      return {\n        ...state,\n        page: action.payload,\n      };\n    case SET_QUERY_PAGINATION_SIZE:\n      return {\n        ...state,\n        size: action.payload,\n        page: 1,\n      };\n    case SET_QUERY_FILTERS: {\n      return {\n        ...state,\n        page: 1,\n        filters: updateQueryFilters(action.payload, state.filters),\n      };\n    }\n    case SET_QUERY_SUGGESTIONS:\n      return {\n        ...state,\n        suggestions: action.payload.suggestions,\n      };\n    case CLEAR_QUERY_SUGGESTIONS:\n      return {\n        ...state,\n        suggestions: action.payload.suggestions,\n      };\n    case SET_SUGGESTION_STRING:\n      return {\n        ...state,\n        suggestionString: action.payload,\n      };\n    case SET_QUERY_COMPONENT_INITIAL_STATE:\n      return {\n        ...state,\n        ...action.payload,\n      };\n    case SET_QUERY_STATE:\n      return {\n        ...state,\n        ...updateQueryState(state, action.payload, STORE_KEYS),\n      };\n    case RESULTS_UPDATE_LAYOUT:\n      return {\n        ...state,\n        layout: action.payload,\n      };\n    case RESET_QUERY:\n      return {\n        ...state,\n        queryString: '',\n        page: 1,\n        filters: [],\n      };\n    default:\n      return state;\n  }\n};\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport {\n  RESULTS_LOADING,\n  RESULTS_FETCH_SUCCESS,\n  RESULTS_FETCH_ERROR,\n} from '../types';\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case RESULTS_LOADING:\n      return {\n        ...state,\n        loading: true,\n        data: {\n          ...state.data,\n        },\n      };\n    case RESULTS_FETCH_SUCCESS:\n      return {\n        loading: false,\n        data: {\n          ...state.data,\n          aggregations: action.payload.aggregations,\n          hits: action.payload.hits,\n          total: action.payload.total,\n        },\n        error: {},\n      };\n    case RESULTS_FETCH_ERROR:\n      return {\n        loading: false,\n        data: {\n          ...state.data,\n          aggregations: {},\n          hits: [],\n          total: 0,\n        },\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { combineReducers } from 'redux';\n\nimport queryReducer from './query';\nimport resultsReducer from './results';\n\nexport default combineReducers({\n  query: queryReducer,\n  results: resultsReducer,\n});\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { connect } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport rootReducer from './state/reducers';\nimport { INITIAL_STORE_STATE } from './storeConfig';\n\nexport function configureStore(appConfig) {\n  const initialQueryState = INITIAL_STORE_STATE;\n\n  const initialResultsState = {\n    loading: appConfig.searchOnInit,\n    data: {\n      hits: [],\n      total: 0,\n      aggregations: {},\n    },\n    error: {},\n  };\n\n  // configure the initial state\n  const preloadedQueryState = appConfig.urlHandlerApi\n    ? appConfig.urlHandlerApi.get(initialQueryState)\n    : initialQueryState;\n  const preloadedState = {\n    query: preloadedQueryState,\n    results: initialResultsState,\n  };\n  return createStore(\n    rootReducer,\n    preloadedState,\n    applyMiddleware(thunk.withExtraArgument(appConfig))\n  );\n}\n\nfunction connectExtended(mapStateToProps, mapDispatchToProps, mergeProps) {\n  return connect(mapStateToProps, mapDispatchToProps, mergeProps);\n}\n\nexport { connectExtended as connect };\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport _cloneDeep from 'lodash/cloneDeep';\nimport {\n  SET_QUERY_COMPONENT_INITIAL_STATE,\n  SET_QUERY_STRING,\n  SET_QUERY_SORTING,\n  SET_QUERY_SORT_BY,\n  SET_QUERY_SORT_ORDER,\n  SET_QUERY_STATE,\n  SET_QUERY_PAGINATION_PAGE,\n  SET_QUERY_PAGINATION_SIZE,\n  SET_QUERY_FILTERS,\n  SET_QUERY_SUGGESTIONS,\n  SET_SUGGESTION_STRING,\n  CLEAR_QUERY_SUGGESTIONS,\n  RESET_QUERY,\n  RESULTS_LOADING,\n  RESULTS_FETCH_SUCCESS,\n  RESULTS_FETCH_ERROR,\n  RESULTS_UPDATE_LAYOUT,\n} from '../types';\n\nexport const setInitialState = initialState => {\n  return dispatch => {\n    dispatch({\n      type: SET_QUERY_COMPONENT_INITIAL_STATE,\n      payload: initialState,\n    });\n  };\n};\n\nexport const onAppInitialized = searchOnInit => {\n  return dispatch => {\n    if (searchOnInit) {\n      dispatch(executeQuery({ shouldUpdateUrlQueryString: false }));\n    }\n  };\n};\n\nexport const updateQueryString = queryString => {\n  return dispatch => {\n    dispatch({\n      type: SET_QUERY_STRING,\n      payload: queryString,\n    });\n    dispatch(executeQuery());\n  };\n};\n\nexport const updateQuerySorting = (sortByValue, sortOrderValue) => {\n  return dispatch => {\n    dispatch({\n      type: SET_QUERY_SORTING,\n      payload: { sortBy: sortByValue, sortOrder: sortOrderValue },\n    });\n    dispatch(executeQuery());\n  };\n};\n\nexport const updateQuerySortBy = sortByValue => {\n  return dispatch => {\n    dispatch({\n      type: SET_QUERY_SORT_BY,\n      payload: sortByValue,\n    });\n    dispatch(executeQuery());\n  };\n};\n\nexport const updateQuerySortOrder = sortOrderValue => {\n  return dispatch => {\n    dispatch({ type: SET_QUERY_SORT_ORDER, payload: sortOrderValue });\n    dispatch(executeQuery());\n  };\n};\n\nexport const updateQueryPaginationPage = page => {\n  return dispatch => {\n    dispatch({ type: SET_QUERY_PAGINATION_PAGE, payload: page });\n    dispatch(executeQuery());\n  };\n};\n\nexport const updateQueryPaginationSize = size => {\n  return dispatch => {\n    dispatch({ type: SET_QUERY_PAGINATION_SIZE, payload: size });\n    dispatch(executeQuery());\n  };\n};\n\nexport const updateQueryFilters = filters => {\n  return dispatch => {\n    dispatch({\n      type: SET_QUERY_FILTERS,\n      payload: filters,\n    });\n    dispatch(executeQuery());\n  };\n};\n\nexport const updateResultsLayout = layout => {\n  return async (dispatch, getState, config) => {\n    const urlHandlerApi = config.urlHandlerApi;\n    if (urlHandlerApi) {\n      await dispatch({\n        type: RESULTS_UPDATE_LAYOUT,\n        payload: layout,\n      });\n      const newStateQuery = getState().query;\n      urlHandlerApi.set(newStateQuery);\n    } else {\n      dispatch({\n        type: RESULTS_UPDATE_LAYOUT,\n        payload: layout,\n      });\n    }\n  };\n};\n\nexport const resetQuery = () => {\n  return dispatch => {\n    dispatch({\n      type: RESET_QUERY,\n    });\n    dispatch(executeQuery());\n  };\n};\n\nexport const executeQuery = ({\n  shouldUpdateUrlQueryString = true,\n  shouldReplaceUrlQueryString = false,\n} = {}) => {\n  return async (dispatch, getState, config) => {\n    const queryState = _cloneDeep(getState().query);\n    const searchApi = config.searchApi;\n    const urlHandlerApi = config.urlHandlerApi;\n\n    if (urlHandlerApi) {\n      if (shouldReplaceUrlQueryString) {\n        urlHandlerApi.replace(queryState);\n      } else if (shouldUpdateUrlQueryString) {\n        urlHandlerApi.set(queryState);\n      }\n    }\n\n    dispatch({ type: RESULTS_LOADING });\n    try {\n      const response = await searchApi.search(queryState);\n      dispatch({\n        type: RESULTS_FETCH_SUCCESS,\n        payload: {\n          aggregations: response.aggregations,\n          hits: response.hits,\n          total: response.total,\n        },\n      });\n    } catch (reason) {\n      console.error(reason);\n      dispatch({ type: RESULTS_FETCH_ERROR, payload: reason });\n    }\n  };\n};\n\nexport const updateSuggestions = suggestionString => {\n  return dispatch => {\n    dispatch({\n      type: SET_SUGGESTION_STRING,\n      payload: suggestionString,\n    });\n    dispatch(executeSuggestionQuery());\n  };\n};\n\nexport const executeSuggestionQuery = () => {\n  return async (dispatch, getState, config) => {\n    const queryState = _cloneDeep(getState().query);\n    const suggestionApi = config.suggestionApi;\n\n    try {\n      const response = await suggestionApi.search(queryState);\n      dispatch({\n        type: SET_QUERY_SUGGESTIONS,\n        payload: {\n          suggestions: response.suggestions,\n        },\n      });\n    } catch (reason) {\n      console.error('Could not load suggestions due to: ' + reason);\n    }\n  };\n};\n\nexport const clearSuggestions = () => {\n  return dispatch => {\n    dispatch({\n      type: CLEAR_QUERY_SUGGESTIONS,\n      payload: {\n        suggestions: [],\n      },\n    });\n  };\n};\n\nexport const updateQueryState = queryState => {\n  return dispatch => {\n    dispatch({\n      type: SET_QUERY_STATE,\n      payload: queryState,\n    });\n    dispatch(executeQuery());\n  };\n};\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2020 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\n/**\n * Build namespaced unique identifier.\n * @param {string} elementName component element name\n * @param {string} overridableId unique identifier passed as prop to overridable component\n */\nexport function buildUID(elementName, overridableId) {\n  return `${elementName}${overridableId && `.${overridableId}`}`;\n}\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label, Icon } from 'semantic-ui-react';\nimport Overridable from 'react-overridable';\nimport { buildUID } from '../../util';\n\nclass ActiveFilters extends Component {\n  constructor(props) {\n    super(props);\n    this.updateQueryFilters = props.updateQueryFilters;\n  }\n\n  _getLabel = (filter) => {\n    const aggName = filter[0];\n    let value = filter[1];\n    let currentFilter = [aggName, value];\n    const hasChild = filter.length === 3;\n    if (hasChild) {\n      const { label, activeFilter } = this._getLabel(filter[2]);\n      value = `${value}.${label}`;\n      currentFilter.push(activeFilter);\n    }\n    return {\n      label: value,\n      activeFilter: currentFilter,\n    };\n  };\n\n  render() {\n    const { filters, overridableId } = this.props;\n    return (\n      !!filters.length && (\n        <Element\n          filters={filters}\n          removeActiveFilter={this.updateQueryFilters}\n          getLabel={this._getLabel}\n          overridableId={overridableId}\n        />\n      )\n    );\n  }\n}\n\nActiveFilters.propTypes = {\n  filters: PropTypes.array.isRequired,\n  updateQueryFilters: PropTypes.func.isRequired,\n  renderElement: PropTypes.func,\n  overridableId: PropTypes.string,\n};\n\nActiveFilters.defaultProps = {\n  renderElement: null,\n  overridableId: '',\n};\n\nconst Element = ({ overridableId, ...props }) => {\n  const { filters, removeActiveFilter, getLabel } = props;\n  return (\n    <Overridable\n      id={buildUID('ActiveFilters.element', overridableId)}\n      {...props}\n    >\n      <>\n        {filters.map((filter, index) => {\n          const { label, activeFilter } = getLabel(filter);\n          return (\n            <Label\n              image\n              key={index}\n              onClick={() => removeActiveFilter(activeFilter)}\n            >\n              {label}\n              <Icon name=\"delete\" />\n            </Label>\n          );\n        })}\n      </>\n    </Overridable>\n  );\n};\n\nexport default Overridable.component('ActiveFilters', ActiveFilters);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport { updateQueryFilters } from '../../state/actions';\nimport ActiveFiltersComponent from './ActiveFilters';\n\nconst mapDispatchToProps = dispatch => ({\n  updateQueryFilters: filter => dispatch(updateQueryFilters(filter)),\n});\n\nexport const ActiveFilters = connect(\n  state => ({\n    filters: state.query.filters,\n  }),\n  mapDispatchToProps\n)(ActiveFiltersComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Checkbox, List } from 'semantic-ui-react';\nimport Overridable from 'react-overridable';\nimport { buildUID } from '../../util';\n\nclass BucketAggregationValues extends Component {\n  constructor(props) {\n    super(props);\n    this.field = props.field;\n    this.aggName = props.aggName;\n    this.childAgg = props.childAgg;\n    this.onFilterClicked = props.onFilterClicked;\n  }\n\n  _isSelected = (aggName, value, selectedFilters) => {\n    // return True there is at least one filter that has this value\n    return (\n      selectedFilters.filter(\n        (filter) => filter[0] === aggName && filter[1] === value\n      ).length >= 1\n    );\n  };\n\n  getChildAggCmps = (bucket, selectedFilters) => {\n    const hasChildAggregation =\n      this.childAgg && this.childAgg['aggName'] in bucket;\n    let selectedChildFilters = [];\n    if (hasChildAggregation) {\n      const childBuckets = bucket[this.childAgg['aggName']]['buckets'];\n      selectedFilters.forEach((filter) => {\n        const isThisAggregation = filter[0] === this.aggName;\n        const isThisValue = filter[1] === bucket.key;\n        const hasChild = filter.length === 3;\n        if (isThisAggregation && isThisValue && hasChild) {\n          selectedChildFilters.push(filter[2]);\n        }\n      });\n      const onFilterClicked = (value) => {\n        this.onFilterClicked([this.aggName, bucket.key, value]);\n      };\n      return (\n        <BucketAggregationValues\n          buckets={childBuckets}\n          selectedFilters={selectedChildFilters}\n          field={this.childAgg.field}\n          aggName={this.childAgg.aggName}\n          childAgg={this.childAgg.childAgg}\n          onFilterClicked={onFilterClicked}\n        />\n      );\n    }\n    return null;\n  };\n\n  render() {\n    const { buckets, selectedFilters, overridableId } = this.props;\n\n    const valuesCmp = buckets.map((bucket) => {\n      const isSelected = this._isSelected(\n        this.aggName,\n        bucket.key,\n        selectedFilters\n      );\n      const onFilterClicked = (value) => {\n        this.onFilterClicked([this.aggName, value]);\n      };\n      const getChildAggCmps = (bucket) =>\n        this.getChildAggCmps(bucket, selectedFilters);\n      return (\n        <ValueElement\n          key={bucket.key}\n          bucket={bucket}\n          isSelected={isSelected}\n          onFilterClicked={onFilterClicked}\n          getChildAggCmps={getChildAggCmps}\n          overridableId={overridableId}\n        />\n      );\n    });\n    return (\n      <ContainerElement valuesCmp={valuesCmp} overridableId={overridableId} />\n    );\n  }\n}\n\nBucketAggregationValues.propTypes = {\n  buckets: PropTypes.array.isRequired,\n  selectedFilters: PropTypes.array.isRequired,\n  field: PropTypes.string.isRequired,\n  aggName: PropTypes.string.isRequired,\n  childAgg: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    aggName: PropTypes.string.isRequired,\n    childAgg: PropTypes.object,\n  }),\n  onFilterClicked: PropTypes.func.isRequired,\n  overridableId: PropTypes.string,\n};\n\nBucketAggregationValues.defaultProps = {\n  overridableId: '',\n};\n\nconst ValueElement = (props) => {\n  const {\n    bucket,\n    isSelected,\n    onFilterClicked,\n    getChildAggCmps,\n    overridableId,\n  } = props;\n  const label = `${bucket.key} (${bucket.doc_count})`;\n  const childAggCmps = getChildAggCmps(bucket);\n  return (\n    <Overridable\n      id={buildUID('BucketAggregationValues.element', overridableId)}\n      {...props}\n    >\n      <List.Item key={bucket.key}>\n        <Checkbox\n          label={label}\n          value={bucket.key}\n          onClick={() => onFilterClicked(bucket.key)}\n          checked={isSelected}\n        />\n        {childAggCmps}\n      </List.Item>\n    </Overridable>\n  );\n};\n\nconst ContainerElement = ({ valuesCmp, overridableId }) => (\n  <Overridable\n    id={buildUID('BucketAggregationContainer.element', overridableId)}\n    valuesCmp={valuesCmp}\n  >\n    <List>{valuesCmp}</List>\n  </Overridable>\n);\n\nexport default Overridable.component(\n  'BucketAggregationValues',\n  BucketAggregationValues\n);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'semantic-ui-react';\nimport _get from 'lodash/get';\nimport Overridable from 'react-overridable';\nimport BucketAggregationValues from './BucketAggregationValues';\nimport { buildUID } from '../../util';\n\nclass BucketAggregation extends Component {\n  constructor(props) {\n    super(props);\n    this.title = props.title;\n    this.agg = props.agg;\n    this.updateQueryFilters = props.updateQueryFilters;\n  }\n\n  onFilterClicked = (filter) => {\n    this.updateQueryFilters(filter);\n  };\n\n  _renderValues = (resultBuckets, selectedFilters) => {\n    const { overridableId } = this.props;\n    return (\n      <BucketAggregationValues\n        buckets={resultBuckets}\n        selectedFilters={selectedFilters}\n        field={this.agg.field}\n        aggName={this.agg.aggName}\n        childAgg={this.agg.childAgg}\n        onFilterClicked={this.onFilterClicked}\n        overridableId={overridableId}\n      />\n    );\n  };\n\n  _getSelectedFilters = (userSelectionFilters) => {\n    // get selected filters for this field only\n    return userSelectionFilters.filter(\n      (filter) => filter[0] === this.agg.aggName\n    );\n  };\n\n  _getResultBuckets = (resultsAggregations) => {\n    // get buckets of this field\n    const thisAggs = _get(resultsAggregations, this.agg.aggName, {});\n    return 'buckets' in thisAggs ? thisAggs['buckets'] : [];\n  };\n\n  render() {\n    const {\n      userSelectionFilters,\n      resultsAggregations,\n      overridableId,\n    } = this.props;\n    const selectedFilters = this._getSelectedFilters(userSelectionFilters);\n    const resultBuckets = this._getResultBuckets(resultsAggregations);\n    const valuesCmp = resultBuckets.length\n      ? this._renderValues(resultBuckets, selectedFilters)\n      : null;\n    return (\n      <Element\n        title={this.title}\n        containerCmp={valuesCmp}\n        overridableId={overridableId}\n      />\n    );\n  }\n}\n\nBucketAggregation.propTypes = {\n  title: PropTypes.string.isRequired,\n  agg: PropTypes.shape({\n    field: PropTypes.string.isRequired,\n    aggName: PropTypes.string.isRequired,\n    childAgg: PropTypes.object,\n  }),\n  userSelectionFilters: PropTypes.array.isRequired,\n  resultsAggregations: PropTypes.object.isRequired,\n  updateQueryFilters: PropTypes.func.isRequired,\n  renderValuesContainerElement: PropTypes.func,\n  renderValueElement: PropTypes.func,\n  overridableId: PropTypes.string,\n};\n\nBucketAggregation.defaultProps = {\n  renderValuesContainerElement: null,\n  renderValueElement: null,\n  overridableId: '',\n};\n\nconst Element = ({ overridableId, ...props }) => {\n  const { title, containerCmp } = props;\n  return (\n    containerCmp && (\n      <Overridable\n        id={buildUID('BucketAggregation.element', overridableId)}\n        {...props}\n      >\n        <Card>\n          <Card.Content>\n            <Card.Header>{title}</Card.Header>\n          </Card.Content>\n          <Card.Content>{containerCmp}</Card.Content>\n        </Card>\n      </Overridable>\n    )\n  );\n};\n\nexport default Overridable.component('BucketAggregation', BucketAggregation);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport { updateQueryFilters } from '../../state/actions';\nimport BucketAggregationComponent from './BucketAggregation';\n\nconst mapDispatchToProps = dispatch => ({\n  updateQueryFilters: filter => dispatch(updateQueryFilters(filter)),\n});\n\nexport const BucketAggregation = connect(\n  state => ({\n    userSelectionFilters: state.query.filters,\n    resultsAggregations: state.results.data.aggregations,\n  }),\n  mapDispatchToProps\n)(BucketAggregationComponent);\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport _ from 'lodash';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\nimport Overridable from 'react-overridable';\nimport './AutocompleteSearchBar.scss';\nimport { buildUID } from '../../util';\n\nclass AutocompleteSearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.updateQueryString = this.props.updateQueryString;\n    this.updateSuggestions = this.props.debounce\n      ? _.debounce(this.props.updateSuggestions, this.props.debounceTime, {\n          leading: true,\n        })\n      : this.props.updateSuggestions;\n    this.clearSuggestions = this.props.clearSuggestions;\n    this.minCharsToAutocomplete = this.props.minCharsToAutocomplete;\n    this.state = {\n      currentValue: this.props.queryString || '',\n    };\n    this.handleAutocompleteChange =\n      props.handleAutocompleteChange || this._handleAutocompleteChange;\n  }\n\n  _handleAutocompleteChange = (suggestionString) => {\n    if (suggestionString.length >= this.minCharsToAutocomplete) {\n      this.updateSuggestions(suggestionString);\n    }\n  };\n\n  onInputChange = async (queryString) => {\n    await this.setState({\n      currentValue: queryString,\n    });\n\n    this.handleAutocompleteChange(this.state.currentValue);\n  };\n\n  executeSearch = () => {\n    this.updateQueryString(this.state.currentValue);\n  };\n\n  render() {\n    const { placeholder, suggestions, overridableId } = this.props;\n    return (\n      <Element\n        placeholder={placeholder}\n        queryString={this.state.currentValue}\n        querySuggestions={suggestions}\n        onInputChange={this.onInputChange}\n        executeSearch={this.executeSearch}\n        overridableId={overridableId}\n      />\n    );\n  }\n}\n\nAutocompleteSearchBar.propTypes = {\n  queryString: PropTypes.string,\n  updateQueryString: PropTypes.func.isRequired,\n  updateSuggestions: PropTypes.func.isRequired,\n  clearSuggestions: PropTypes.func.isRequired,\n  handleAutocompleteChange: PropTypes.func,\n  debounce: PropTypes.bool,\n  debounceTime: PropTypes.number,\n  placeholder: PropTypes.string,\n  minCharsToAutocomplete: PropTypes.number,\n  overridableId: PropTypes.string,\n};\n\nAutocompleteSearchBar.defaultProps = {\n  handleAutocompleteChange: null,\n  placeholder: 'Type something',\n  minCharsToAutocomplete: 3,\n  overridableId: '',\n};\n\nconst AutocompleteSearchBarUncontrolled = (props) => (\n  <AutocompleteSearchBar key={props.queryString} {...props} />\n);\n\nconst Element = ({ overridableId, ...props }) => {\n  const {\n    placeholder,\n    queryString,\n    querySuggestions,\n    onInputChange,\n    executeSearch,\n  } = props;\n  const onBtnSearchClick = (event, input) => {\n    executeSearch();\n  };\n  const onKeyPress = (event, input) => {\n    if (event.key === 'Enter') {\n      executeSearch();\n    }\n  };\n\n  return (\n    <Overridable\n      id={buildUID('AutocompleteSearchBar.element', overridableId)}\n      {...props}\n    >\n      <div className=\"AutoCompleteText\">\n        <Input\n          action={{\n            content: 'Search',\n            onClick: onBtnSearchClick,\n          }}\n          fluid\n          placeholder={placeholder}\n          onChange={(event, { value }) => {\n            onInputChange(value);\n          }}\n          value={queryString}\n          onKeyPress={onKeyPress}\n        />\n        <Suggestions\n          querySuggestions={querySuggestions}\n          overridableId={overridableId}\n        />\n      </div>\n    </Overridable>\n  );\n};\n\nconst Suggestions = ({ overridableId, ...props }) => {\n  const { querySuggestions } = props;\n  const onSuggestionSelected = async (suggestion) => {\n    await this.setState({\n      currentValue: suggestion,\n    });\n    this.clearSuggestions();\n    this.executeSearch();\n  };\n\n  if (querySuggestions.length === 0) {\n    return null;\n  }\n\n  return (\n    <Overridable\n      id={buildUID('AutocompleteSearchBar.suggestions', overridableId)}\n      {...props}\n    >\n      <ul>\n        {querySuggestions.map((text) => (\n          <li onClick={() => onSuggestionSelected(text)} key={text}>\n            {text}\n          </li>\n        ))}\n      </ul>\n    </Overridable>\n  );\n};\n\nexport default Overridable.component(\n  'AutocompleteSearchBar',\n  AutocompleteSearchBarUncontrolled\n);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport {\n  updateQueryString,\n  updateSuggestions,\n  clearSuggestions,\n} from '../../state/actions';\nimport AutocompleteSearchBarComponent from '../AutocompleteSearchBar/AutocompleteSearchBar';\n\nconst mapDispatchToProps = dispatch => ({\n  updateQueryString: query => dispatch(updateQueryString(query)),\n  updateSuggestions: query => dispatch(updateSuggestions(query)),\n  clearSuggestions: () => dispatch(clearSuggestions()),\n});\n\nconst mapStateToProps = state => ({\n  queryString: state.query.queryString,\n  suggestions: state.query.suggestions,\n});\n\nexport const AutocompleteSearchBar = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AutocompleteSearchBarComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Overridable from 'react-overridable';\nclass ShouldRender extends Component {\n  render() {\n    const { condition } = this.props;\n    return condition ? this.props.children : null;\n  }\n}\n\nShouldRender.propTypes = {\n  condition: PropTypes.bool,\n};\n\nShouldRender.defaultProps = {\n  condition: true,\n};\n\nexport default Overridable.component('ShouldRender', ShouldRender);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Label } from 'semantic-ui-react';\nimport Overridable from 'react-overridable';\nimport { ShouldRender } from '../ShouldRender';\nimport { buildUID } from '../../util';\n\nclass Count extends Component {\n  render() {\n    const { loading, totalResults, label, overridableId } = this.props;\n    return (\n      <ShouldRender condition={!loading && totalResults > 0}>\n        {label(\n          <Element totalResults={totalResults} overridableId={overridableId} />\n        )}\n      </ShouldRender>\n    );\n  }\n}\n\nCount.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  label: PropTypes.func,\n  overridableId: PropTypes.string,\n};\n\nCount.defaultProps = {\n  label: (cmp) => cmp,\n  overridableId: '',\n};\n\nconst Element = ({ totalResults, overridableId }) => (\n  <Overridable\n    id={buildUID('Count.element', overridableId)}\n    totalResults={totalResults}\n  >\n    <Label color={'blue'}>{totalResults}</Label>\n  </Overridable>\n);\n\nexport default Overridable.component('Count', Count);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport CountComponent from './Count';\n\nexport const Count = connect(state => ({\n  loading: state.results.loading,\n  totalResults: state.results.data.total,\n}))(CountComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Segment, Header, Icon, Button } from 'semantic-ui-react';\nimport _isEmpty from 'lodash/isEmpty';\nimport Overridable from 'react-overridable';\nimport { ShouldRender } from '../ShouldRender';\nimport { buildUID } from '../../util';\n\nclass EmptyResults extends Component {\n  constructor(props) {\n    super(props);\n    this.resetQuery = props.resetQuery;\n  }\n\n  render() {\n    const {\n      loading,\n      totalResults,\n      error,\n      queryString,\n      overridableId,\n    } = this.props;\n    return (\n      <ShouldRender\n        condition={!loading && _isEmpty(error) && totalResults === 0}\n      >\n        <Element\n          queryString={queryString}\n          resetQuery={this.resetQuery}\n          overridableId={overridableId}\n        />\n      </ShouldRender>\n    );\n  }\n}\n\nEmptyResults.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  error: PropTypes.object.isRequired,\n  queryString: PropTypes.string,\n  resetQuery: PropTypes.func.isRequired,\n  overridableId: PropTypes.string,\n};\n\nEmptyResults.defaultProps = {\n  queryString: '',\n  overridableId: '',\n};\n\nconst Element = ({ overridableId, ...props }) => {\n  const { queryString, resetQuery } = props;\n  return (\n    <Overridable\n      id={buildUID('EmptyResults.element', overridableId)}\n      {...props}\n    >\n      <Segment placeholder textAlign=\"center\">\n        <Header icon>\n          <Icon name=\"search\" />\n          No results found!\n        </Header>\n        {queryString && <em>Current search \"{queryString}\"</em>}\n        <br />\n        <Button primary onClick={() => resetQuery()}>\n          Clear query\n        </Button>\n      </Segment>\n    </Overridable>\n  );\n};\n\nexport default Overridable.component('EmptyResults', EmptyResults);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport { resetQuery } from '../../state/actions';\nimport EmptyResultsComponent from './EmptyResults';\n\nconst mapDispatchToProps = dispatch => ({\n  resetQuery: () => dispatch(resetQuery()),\n});\nexport const EmptyResults = connect(\n  state => ({\n    loading: state.results.loading,\n    totalResults: state.results.data.total,\n    error: state.results.error,\n    queryString: state.query.queryString,\n  }),\n  mapDispatchToProps\n)(EmptyResultsComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport _isEmpty from 'lodash/isEmpty';\nimport Overridable from 'react-overridable';\nimport { ShouldRender } from '../ShouldRender';\nimport { buildUID } from '../../util';\n\nfunction Error({ loading, error, overridableId }) {\n  return (\n    <ShouldRender condition={!loading && !_isEmpty(error)}>\n      <Element error={error} overridableId={overridableId} />\n    </ShouldRender>\n  );\n}\n\nError.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.object.isRequired,\n  overridableId: PropTypes.string,\n};\n\nError.defaultProps = {\n  overridableId: '',\n};\n\nconst Element = ({ error, overridableId }) => {\n  return (\n    <Overridable id={buildUID('Error.element', overridableId)} error={error}>\n      <div>Oups! Something went wrong while fetching results.</div>\n    </Overridable>\n  );\n};\n\nexport default Overridable.component('Error', Error);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport ErrorComponent from './Error';\n\nexport const Error = connect(state => ({\n  loading: state.results.loading,\n  error: state.results.error,\n}))(ErrorComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Menu, Icon } from 'semantic-ui-react';\nimport Overridable from 'react-overridable';\nimport { ShouldRender } from '../ShouldRender';\nimport { buildUID } from '../../util';\n\nclass LayoutSwitcher extends Component {\n  constructor(props) {\n    super(props);\n    this.defaultValue = this.props.defaultLayout;\n    this.updateLayout = props.updateLayout;\n    this.setInitialState = props.setInitialState;\n  }\n\n  componentDidMount() {\n    if (this.props.currentLayout === null) {\n      this.setInitialState({\n        layout: this.defaultValue,\n      });\n    }\n  }\n\n  onLayoutChange = (layoutName) => {\n    this.updateLayout(layoutName);\n  };\n\n  render() {\n    const { currentLayout, loading, totalResults, overridableId } = this.props;\n    return (\n      <ShouldRender\n        condition={currentLayout !== null && !loading && totalResults > 0}\n      >\n        <Element\n          currentLayout={currentLayout}\n          onLayoutChange={this.onLayoutChange}\n          overridableId={overridableId}\n        />\n      </ShouldRender>\n    );\n  }\n}\n\nLayoutSwitcher.propTypes = {\n  defaultLayout: PropTypes.oneOf(['list', 'grid']),\n  updateLayout: PropTypes.func.isRequired,\n  setInitialState: PropTypes.func.isRequired,\n  loading: PropTypes.bool.isRequired,\n  currentLayout: PropTypes.string,\n  totalResults: PropTypes.number.isRequired,\n  overridableId: PropTypes.string,\n};\n\nLayoutSwitcher.defaultProps = {\n  defaultLayout: 'list',\n  currentLayout: null,\n  overridableId: '',\n};\n\nconst Element = ({ overridableId, ...props }) => {\n  const { currentLayout, onLayoutChange } = props;\n  const clickHandler = (event, { name }) => {\n    onLayoutChange(name);\n  };\n  return (\n    <Overridable\n      id={buildUID('LayoutSwitcher.element', overridableId)}\n      {...props}\n    >\n      <Menu compact icon>\n        <Menu.Item\n          name=\"list\"\n          active={currentLayout === 'list'}\n          onClick={clickHandler}\n        >\n          <Icon name=\"list layout\" />\n        </Menu.Item>\n        <Menu.Item\n          name=\"grid\"\n          active={currentLayout === 'grid'}\n          onClick={clickHandler}\n        >\n          <Icon name=\"grid layout\" />\n        </Menu.Item>\n      </Menu>\n    </Overridable>\n  );\n};\n\nexport default Overridable.component('LayoutSwitcher', LayoutSwitcher);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport { updateResultsLayout, setInitialState } from '../../state/actions';\nimport LayoutSwitcherComponent from './LayoutSwitcher';\n\nconst mapDispatchToProps = dispatch => ({\n  updateLayout: layout => dispatch(updateResultsLayout(layout)),\n  setInitialState: initialState => dispatch(setInitialState(initialState)),\n});\nexport const LayoutSwitcher = connect(\n  state => ({\n    loading: state.results.loading,\n    currentLayout: state.query.layout,\n    totalResults: state.results.data.total,\n  }),\n  mapDispatchToProps\n)(LayoutSwitcherComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Loader } from 'semantic-ui-react';\nimport Overridable from 'react-overridable';\nimport { buildUID } from '../../util';\n\nfunction ResultsLoader({ children, loading, overridableId }) {\n  return loading ? <Element overridableId={overridableId} /> : children;\n}\n\nResultsLoader.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  overridableId: PropTypes.string,\n};\n\nResultsLoader.defaultProps = {\n  overridableId: '',\n};\n\nconst Element = ({ overridableId }) => (\n  <Overridable id={buildUID('ResultsLoader.element', overridableId)}>\n    <Loader active size=\"huge\" inline=\"centered\" />\n  </Overridable>\n);\n\nexport default Overridable.component('ResultsLoader', ResultsLoader);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport ResultsLoaderComponent from './ResultsLoader';\n\nexport const ResultsLoader = connect(state => ({\n  loading: state.results.loading,\n}))(ResultsLoaderComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Pagination as Paginator } from 'semantic-ui-react';\nimport Overridable from 'react-overridable';\nimport { ShouldRender } from '../ShouldRender';\nimport { buildUID } from '../../util';\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    this.defaultValue = props.defaultValue;\n    this.updateQueryPage = props.updateQueryPage;\n    this.setInitialState = props.setInitialState;\n  }\n\n  componentDidMount() {\n    if (this.props.currentPage === -1) {\n      this.setInitialState({\n        page: this.defaultValue,\n      });\n    }\n  }\n\n  onPageChange = (activePage) => {\n    if (activePage === this.props.currentPage) return;\n    this.updateQueryPage(activePage);\n  };\n\n  render() {\n    const {\n      loading,\n      totalResults,\n      currentPage,\n      currentSize,\n      options,\n      overridableId,\n    } = this.props;\n    return (\n      <ShouldRender\n        condition={\n          !loading && currentPage > -1 && currentSize > -1 && totalResults > 0\n        }\n      >\n        <Element\n          currentPage={currentPage}\n          currentSize={currentSize}\n          totalResults={totalResults}\n          onPageChange={this.onPageChange}\n          options={options}\n          overridableId={overridableId}\n        />\n      </ShouldRender>\n    );\n  }\n}\n\nPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  currentSize: PropTypes.number.isRequired,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  options: PropTypes.PropTypes.shape({\n    boundaryRangeCount: PropTypes.number,\n    siblingRangeCount: PropTypes.number,\n    showEllipsis: PropTypes.bool,\n    showFirst: PropTypes.bool,\n    showLast: PropTypes.bool,\n    showPrev: PropTypes.bool,\n    showNext: PropTypes.bool,\n  }),\n  defaultValue: PropTypes.number,\n  overridableId: PropTypes.string,\n};\n\nPagination.defaultProps = {\n  options: {\n    boundaryRangeCount: 1,\n    siblingRangeCount: 1,\n    showEllipsis: true,\n    showFirst: true,\n    showLast: true,\n    showPrev: true,\n    showNext: true,\n  },\n  defaultValue: 10,\n  overridableId: '',\n};\n\nconst Element = ({ overridableId, ...props }) => {\n  const {\n    currentPage,\n    currentSize,\n    totalResults,\n    onPageChange,\n    options,\n    ...extraParams\n  } = props;\n  const pages = Math.ceil(totalResults / currentSize);\n  const boundaryRangeCount = options.boundaryRangeCount;\n  const siblingRangeCount = options.siblingRangeCount;\n  const showEllipsis = options.showEllipsis;\n  const showFirst = options.showFirst;\n  const showLast = options.showLast;\n  const showPrev = options.showPrev;\n  const showNext = options.showNext;\n  const _onPageChange = (event, { activePage }) => {\n    onPageChange(activePage);\n  };\n\n  return (\n    <Overridable id={buildUID('Pagination.element', overridableId)} {...props}>\n      <Paginator\n        activePage={currentPage}\n        totalPages={pages}\n        onPageChange={_onPageChange}\n        boundaryRange={boundaryRangeCount}\n        siblingRange={siblingRangeCount}\n        ellipsisItem={showEllipsis ? undefined : null}\n        firstItem={showFirst ? undefined : null}\n        lastItem={showLast ? undefined : null}\n        prevItem={showPrev ? undefined : null}\n        nextItem={showNext ? undefined : null}\n        {...extraParams}\n      />\n    </Overridable>\n  );\n};\n\nexport default Overridable.component('Pagination', Pagination);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport {\n  updateQueryPaginationPage,\n  setInitialState,\n} from '../../state/actions';\nimport PaginationComponent from './Pagination';\n\nconst mapDispatchToProps = dispatch => ({\n  updateQueryPage: page => dispatch(updateQueryPaginationPage(page)),\n  setInitialState: value => dispatch(setInitialState(value)),\n});\n\nexport const Pagination = connect(\n  state => ({\n    currentPage: state.query.page,\n    currentSize: state.query.size,\n    loading: state.results.loading,\n    totalResults: state.results.data.total,\n  }),\n  mapDispatchToProps\n)(PaginationComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport Overridable from 'react-overridable';\n\nclass Bootstrap extends Component {\n  constructor(props) {\n    super(props);\n    this.appName = props.appName;\n    this.searchOnInit = props.searchOnInit;\n    this.eventListenerEnabled = props.eventListenerEnabled;\n    this.onAppInitialized = props.onAppInitialized;\n    this.searchOnUrlQueryStringChanged = props.searchOnUrlQueryStringChanged;\n  }\n\n  updateQueryState = (query) => this.props.updateQueryState(query);\n\n  onQueryChanged = ({ detail: payload }) => {\n    const appReceiverName = payload.appName || this.appName;\n    if (appReceiverName === this.appName) {\n      this.updateQueryState(payload.searchQuery);\n    } else {\n      console.debug(\n        `RSK app ${this.appName}: ignore event sent for app ${appReceiverName}...`\n      );\n    }\n  };\n\n  componentDidMount() {\n    if (this.eventListenerEnabled) {\n      window.addEventListener('queryChanged', this.onQueryChanged);\n    }\n\n    window.onpopstate = () => {\n      this.searchOnUrlQueryStringChanged();\n    };\n\n    this.onAppInitialized(this.searchOnInit);\n  }\n\n  render() {\n    return <Fragment>{this.props.children}</Fragment>;\n  }\n\n  componentWillUnmount() {\n    this.historyUnlisten && this.historyUnlisten();\n    window.onpopstate = () => {};\n    window.removeEventListener('queryChanged', this.onQueryChanged);\n  }\n}\n\nBootstrap.propTypes = {\n  searchOnInit: PropTypes.bool,\n  eventListenerEnabled: PropTypes.bool,\n  appName: PropTypes.string,\n};\n\nBootstrap.defaultProps = {\n  searchOnInit: true,\n};\n\nexport default Overridable.component('Bootstrap', Bootstrap);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport {\n  onAppInitialized as _onAppInitialized,\n  executeQuery,\n  updateQueryState,\n} from '../../state/actions';\nimport BootstrapComponent from './Bootstrap';\n\nconst mapDispatchToProps = dispatch => ({\n  onAppInitialized: searchOnInit => dispatch(_onAppInitialized(searchOnInit)),\n  updateQueryState: queryState => dispatch(updateQueryState(queryState)),\n  searchOnUrlQueryStringChanged: () =>\n    dispatch(executeQuery({ shouldUpdateUrlQueryString: false })),\n});\n\nexport const Bootstrap = connect(null, mapDispatchToProps)(BootstrapComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Overridable from 'react-overridable';\nimport { configureStore } from '../../store';\nimport { UrlHandlerApi } from '../../api';\nimport { Bootstrap } from '../Bootstrap';\nimport { buildUID } from '../../util';\n\nexport class ReactSearchKit extends Component {\n  constructor(props) {\n    super(props);\n    const appConfig = {\n      searchApi: props.searchApi,\n      suggestionApi: props.suggestionApi,\n      urlHandlerApi: props.urlHandlerApi.enabled\n        ? props.urlHandlerApi.customHandler ||\n          new UrlHandlerApi(props.urlHandlerApi.overrideConfig)\n        : null,\n      defaultSortByOnEmptyQuery: props.defaultSortByOnEmptyQuery,\n      searchOnInit: props.searchOnInit,\n    };\n    this.store = configureStore(appConfig);\n    this.appName = props.appName;\n    this.eventListenerEnabled = props.eventListenerEnabled;\n  }\n\n  render() {\n    const { searchOnInit, overridableId } = this.props;\n\n    return (\n      <Provider store={this.store}>\n        <Bootstrap\n          searchOnInit={searchOnInit}\n          appName={this.appName}\n          eventListenerEnabled={this.eventListenerEnabled}\n        >\n          <Overridable id={buildUID('ReactSearchKit.children', overridableId)}>\n            {this.props.children}\n          </Overridable>\n        </Bootstrap>\n      </Provider>\n    );\n  }\n}\n\nReactSearchKit.propTypes = {\n  searchApi: PropTypes.object.isRequired,\n  suggestionApi: PropTypes.object,\n  urlHandlerApi: PropTypes.shape({\n    enabled: PropTypes.bool.isRequired,\n    overrideConfig: PropTypes.shape({\n      keepHistory: PropTypes.bool,\n      urlFilterSeparator: PropTypes.string,\n      urlParamsMapping: PropTypes.object,\n      urlParamValidator: PropTypes.object,\n      urlParser: PropTypes.object,\n    }),\n    customHandler: PropTypes.object,\n  }),\n  searchOnInit: PropTypes.bool,\n  defaultSortByOnEmptyQuery: PropTypes.string,\n  appName: PropTypes.string,\n  eventListenerEnabled: PropTypes.bool,\n  overridableId: PropTypes.string,\n};\n\nReactSearchKit.defaultProps = {\n  suggestionApi: null,\n  urlHandlerApi: {\n    enabled: true,\n    overrideConfig: {},\n    customHandler: null,\n  },\n  searchOnInit: true,\n  defaultSortByOnEmptyQuery: null,\n  appName: 'RSK',\n  eventListenerEnabled: false,\n  overridableId: '',\n};\n\nexport default Overridable.component('ReactSearchKit', ReactSearchKit);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Image } from 'semantic-ui-react';\nimport Overridable from 'react-overridable';\nimport { ShouldRender } from '../ShouldRender';\nimport { buildUID } from '../../util';\n\nfunction ResultsGrid({\n  loading,\n  totalResults,\n  results,\n  resultsPerRow,\n  overridableId,\n}) {\n  return (\n    <ShouldRender condition={!loading && totalResults > 0}>\n      <Element\n        results={results}\n        resultsPerRow={resultsPerRow}\n        overridableId={overridableId}\n      />\n    </ShouldRender>\n  );\n}\n\nResultsGrid.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  results: PropTypes.array.isRequired,\n  resultsPerRow: PropTypes.number,\n  overridableId: PropTypes.string,\n};\n\nResultsGrid.defaultProps = {\n  resultsPerRow: 3,\n  overridableId: '',\n};\n\nconst GridItem = ({ result, index, overridableId }) => (\n  <Overridable\n    id={buildUID('ResultsGrid.item', overridableId)}\n    result={result}\n    index={index}\n  >\n    <Card fluid key={index} href={`#${result.id}`}>\n      <Image src={result.imgSrc || 'http://placehold.it/200'} />\n      <Card.Content>\n        <Card.Header>{result.title}</Card.Header>\n        <Card.Description>{result.description}</Card.Description>\n      </Card.Content>\n    </Card>\n  </Overridable>\n);\n\nconst Element = ({ overridableId, ...props }) => {\n  const { results, resultsPerRow } = props;\n  const _results = results.map((result, index) => (\n    <GridItem\n      key={index}\n      result={result}\n      index={index}\n      overridableId={overridableId}\n    />\n  ));\n\n  return (\n    <Overridable\n      id={buildUID('ResultsGrid.container', overridableId)}\n      {...props}\n    >\n      <Card.Group itemsPerRow={resultsPerRow}>{_results}</Card.Group>\n    </Overridable>\n  );\n};\n\nexport default Overridable.component('ResultsGrid', ResultsGrid);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport ResultsGridComponent from './ResultsGrid';\n\nexport const ResultsGrid = connect(state => ({\n  loading: state.results.loading,\n  totalResults: state.results.data.total,\n  results: state.results.data.hits,\n}))(ResultsGridComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Item } from 'semantic-ui-react';\nimport Overridable from 'react-overridable';\nimport { ShouldRender } from '../ShouldRender';\nimport { buildUID } from '../../util';\n\nfunction ResultsList({ loading, totalResults, results, overridableId }) {\n  return (\n    <ShouldRender condition={!loading && totalResults > 0}>\n      <Element results={results} overridableId={overridableId} />\n    </ShouldRender>\n  );\n}\n\nResultsList.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  results: PropTypes.array.isRequired,\n  overridableId: PropTypes.string,\n};\n\nResultsList.defaultProps = {\n  overridableId: '',\n};\n\nconst ListItem = ({ result, index, overridableId }) => (\n  <Overridable\n    id={buildUID('ResultsList.item', overridableId)}\n    result={result}\n    index={index}\n  >\n    <Item key={index} href={`#${result.id}`}>\n      <Item.Image\n        size=\"small\"\n        src={result.imgSrc || 'http://placehold.it/200'}\n      />\n      <Item.Content>\n        <Item.Header>{result.title}</Item.Header>\n        <Item.Description>{result.description}</Item.Description>\n      </Item.Content>\n    </Item>\n  </Overridable>\n);\n\nconst Element = ({ results, overridableId }) => {\n  const _results = results.map((result, index) => (\n    <ListItem\n      result={result}\n      index={index}\n      key={index}\n      overridableId={overridableId}\n    />\n  ));\n\n  return (\n    <Overridable\n      id={buildUID('ResultsList.container', overridableId)}\n      results={_results}\n    >\n      <Item.Group divided relaxed link>\n        {_results}\n      </Item.Group>\n    </Overridable>\n  );\n};\n\nexport default Overridable.component('ResultsList', ResultsList);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport ResultsListComponent from './ResultsList';\n\nexport const ResultsList = connect(state => ({\n  loading: state.results.loading,\n  totalResults: state.results.data.total,\n  results: state.results.data.hits,\n}))(ResultsListComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Overridable from 'react-overridable';\nimport { ResultsList } from '../ResultsList';\nimport { ResultsGrid } from '../ResultsGrid';\nimport { ShouldRender } from '../ShouldRender';\nimport { buildUID } from '../../util';\n\nfunction ResultsMultiLayout({\n  loading,\n  totalResults,\n  currentLayout,\n  overridableId,\n}) {\n  return (\n    <ShouldRender\n      condition={currentLayout != null && !loading && totalResults > 0}\n    >\n      <Element layout={currentLayout} overridableId={overridableId} />\n    </ShouldRender>\n  );\n}\n\nResultsMultiLayout.propTypes = {\n  totalResults: PropTypes.number.isRequired,\n  currentLayout: PropTypes.string,\n  overridableId: PropTypes.string,\n};\n\nResultsMultiLayout.defaultProps = {\n  currentLayout: null,\n  overridableId: '',\n};\n\nconst Element = ({ layout, overridableId }) => (\n  <Overridable\n    id={buildUID('ResultsMultiLayout.element', overridableId)}\n    layout={layout}\n    ResultsList={ResultsList}\n    ResultsGrid={ResultsGrid}\n  >\n    {layout === 'list' ? (\n      <ResultsList overridableId={overridableId} />\n    ) : (\n      <ResultsGrid overridableId={overridableId} />\n    )}\n  </Overridable>\n);\n\nexport default Overridable.component('ResultsMultiLayout', ResultsMultiLayout);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport ResultsMultiLayoutComponent from './ResultsMultiLayout';\n\nexport const ResultsMultiLayout = connect(state => ({\n  loading: state.results.loading,\n  totalResults: state.results.data.total,\n  currentLayout: state.query.layout,\n}))(ResultsMultiLayoutComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ShouldRender } from '../ShouldRender';\nimport { buildUID } from '../../util';\nimport { Dropdown } from 'semantic-ui-react';\nimport Overridable from 'react-overridable';\n\nclass ResultsPerPage extends Component {\n  constructor(props) {\n    super(props);\n    this.options = props.values;\n    this.defaultValue = props.defaultValue;\n    this.updateQuerySize = this.props.updateQuerySize;\n    this.setInitialState = props.setInitialState;\n  }\n\n  componentDidMount() {\n    if (this.props.currentSize === -1) {\n      this.setInitialState({\n        size: this.defaultValue,\n      });\n    }\n  }\n\n  onChange = (value) => {\n    if (value === this.props.currentSize) return;\n    this.updateQuerySize(value);\n  };\n\n  render() {\n    const {\n      loading,\n      currentSize,\n      totalResults,\n      label,\n      overridableId,\n    } = this.props;\n    return (\n      <ShouldRender\n        condition={!loading && totalResults > 0 && currentSize !== -1}\n      >\n        {label(\n          <Element\n            currentSize={currentSize}\n            options={this.options}\n            onValueChange={this.onChange}\n            overridableId={overridableId}\n          />\n        )}\n      </ShouldRender>\n    );\n  }\n}\n\nResultsPerPage.propTypes = {\n  currentSize: PropTypes.number.isRequired,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  values: PropTypes.array.isRequired,\n  defaultValue: PropTypes.number,\n  updateQuerySize: PropTypes.func.isRequired,\n  setInitialState: PropTypes.func.isRequired,\n  label: PropTypes.func,\n  overridableId: PropTypes.string,\n};\n\nResultsPerPage.defaultProps = {\n  defaultValue: 10,\n  label: (cmp) => cmp,\n  overridableId: '',\n};\n\nconst Element = ({ overridableId, ...props }) => {\n  const { currentSize, options, onValueChange } = props;\n  const _options = options.map((element, index) => {\n    return { key: index, text: element.text, value: element.value };\n  });\n  return (\n    <Overridable\n      id={buildUID('ResultsPerPage.element', overridableId)}\n      {...props}\n    >\n      <Dropdown\n        inline\n        compact\n        options={_options}\n        value={currentSize}\n        onChange={(e, { value }) => onValueChange(value)}\n      />\n    </Overridable>\n  );\n};\n\nexport default Overridable.component('ResultsPerPage', ResultsPerPage);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport {\n  updateQueryPaginationSize,\n  setInitialState,\n} from '../../state/actions';\nimport ResultsPerPageComponent from './ResultsPerPage';\n\nconst mapDispatchToProps = dispatch => ({\n  updateQuerySize: size => dispatch(updateQueryPaginationSize(size)),\n  setInitialState: value => dispatch(setInitialState(value)),\n});\n\nexport const ResultsPerPage = connect(\n  state => ({\n    loading: state.results.loading,\n    currentSize: state.query.size,\n    totalResults: state.results.data.total,\n  }),\n  mapDispatchToProps\n)(ResultsPerPageComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'semantic-ui-react';\nimport Overridable from 'react-overridable';\nimport { buildUID } from '../../util';\n\nclass SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.updateQueryString = this.props.updateQueryString;\n    this.state = {\n      currentValue: this.props.queryString || '',\n    };\n  }\n\n  onInputChange = (queryString) => {\n    this.setState({\n      currentValue: queryString,\n    });\n  };\n\n  executeSearch = () => {\n    this.updateQueryString(this.state.currentValue);\n  };\n\n  render() {\n    const { placeholder, overridableId } = this.props;\n    return (\n      <Element\n        placeholder={placeholder}\n        queryString={this.state.currentValue}\n        onInputChange={this.onInputChange}\n        executeSearch={this.executeSearch}\n        overridableId={overridableId}\n      />\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  placeholder: PropTypes.string,\n  queryString: PropTypes.string.isRequired,\n  updateQueryString: PropTypes.func.isRequired,\n  overridableId: PropTypes.string,\n};\n\nSearchBar.defaultProps = {\n  placeholder: '',\n  queryString: '',\n  overridableId: '',\n};\n\nconst SearchBarUncontrolled = (props) => (\n  <SearchBar key={props.queryString} {...props} />\n);\n\nconst Element = ({ overridableId, ...props }) => {\n  const {\n    placeholder: passedPlaceholder,\n    queryString,\n    onInputChange,\n    executeSearch,\n  } = props;\n  const placeholder = passedPlaceholder || 'Type something';\n  const onBtnSearchClick = (event, input) => {\n    executeSearch();\n  };\n  const onKeyPress = (event, input) => {\n    if (event.key === 'Enter') {\n      executeSearch();\n    }\n  };\n  return (\n    <Overridable id={buildUID('SearchBar.element', overridableId)} {...props}>\n      <Input\n        action={{\n          content: 'Search',\n          onClick: onBtnSearchClick,\n        }}\n        fluid\n        placeholder={placeholder}\n        onChange={(event, { value }) => {\n          onInputChange(value);\n        }}\n        value={queryString}\n        onKeyPress={onKeyPress}\n      />\n    </Overridable>\n  );\n};\n\nexport default Overridable.component('SearchBar', SearchBarUncontrolled);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport { updateQueryString } from '../../state/actions';\nimport SearchBarComponent from './SearchBar';\n\nconst mapDispatchToProps = dispatch => ({\n  updateQueryString: query => dispatch(updateQueryString(query)),\n});\n\nexport const SearchBar = connect(\n  state => ({\n    queryString: state.query.queryString,\n  }),\n  mapDispatchToProps\n)(SearchBarComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\nimport Overridable from 'react-overridable';\nimport { ShouldRender } from '../ShouldRender';\nimport { buildUID } from '../../util';\n\nclass Sort extends Component {\n  constructor(props) {\n    super(props);\n    this.options = props.values;\n    this.updateQuerySorting = props.updateQuerySorting;\n    this.setInitialState = props.setInitialState;\n\n    this.options.forEach(\n      (option) =>\n        (option['value'] = this._computeValue(option.sortBy, option.sortOrder))\n    );\n\n    // compute default value for sort field and sort order\n    const defaultValue = this.options.find(\n      (option) => 'default' in option && option.default\n    );\n    this.defaultValue = {\n      sortBy: defaultValue.sortBy || this.options[0].sortBy,\n      sortOrder: defaultValue.sortOrder || this.options[0].sortOrder,\n    };\n\n    const defaultValueOnEmptyString = this.options.find(\n      (option) =>\n        'defaultOnEmptyString' in option && option.defaultOnEmptyString\n    );\n    this.defaultValueOnEmptyString = {\n      sortBy: defaultValueOnEmptyString\n        ? defaultValueOnEmptyString.sortBy\n        : this.options[0].sortBy,\n      sortOrder: defaultValueOnEmptyString\n        ? defaultValueOnEmptyString.sortOrder\n        : this.options[0].sortOrder,\n    };\n  }\n\n  componentDidMount() {\n    if (\n      this.props.currentSortBy === null &&\n      this.props.currentSortOrder === null\n    ) {\n      const defaultValue = this.props.currentQueryString\n        ? this.defaultValue\n        : this.defaultValueOnEmptyString;\n      this.setInitialState({\n        sortBy: defaultValue.sortBy,\n        sortOrder: defaultValue.sortOrder,\n      });\n    }\n  }\n\n  _computeValue = (sortBy, sortOrder) => {\n    return `${sortBy}-${sortOrder}`;\n  };\n\n  onChange = (value) => {\n    if (\n      value ===\n      this._computeValue(this.props.currentSortBy, this.props.currentSortOrder)\n    )\n      return;\n    const selected = this.options.find((option) => option.value === value);\n    this.updateQuerySorting(selected.sortBy, selected.sortOrder);\n  };\n\n  render() {\n    const {\n      currentSortBy,\n      currentSortOrder,\n      loading,\n      totalResults,\n      label,\n      overridableId,\n    } = this.props;\n    return (\n      <ShouldRender\n        condition={\n          currentSortBy !== null &&\n          currentSortOrder !== null &&\n          !loading &&\n          totalResults > 0\n        }\n      >\n        {label(\n          <Element\n            currentSortBy={currentSortBy}\n            currentSortOrder={currentSortOrder}\n            options={this.options}\n            onValueChange={this.onChange}\n            computeValue={this._computeValue}\n            overridableId={overridableId}\n          />\n        )}\n      </ShouldRender>\n    );\n  }\n}\n\nSort.propTypes = {\n  values: PropTypes.array.isRequired,\n  currentSortBy: PropTypes.string,\n  currentSortOrder: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  updateQuerySorting: PropTypes.func.isRequired,\n  setInitialState: PropTypes.func.isRequired,\n  label: PropTypes.func,\n  overridableId: PropTypes.string,\n};\n\nSort.defaultProps = {\n  currentSortBy: null,\n  currentSortOrder: null,\n  label: (cmp) => cmp,\n  overridableId: '',\n};\n\nconst Element = ({ overridableId, ...props }) => {\n  const {\n    currentSortBy,\n    currentSortOrder,\n    options,\n    onValueChange,\n    computeValue,\n  } = props;\n  const selected = computeValue(currentSortBy, currentSortOrder);\n  const _options = options.map((element, index) => {\n    return {\n      key: index,\n      text: element.text,\n      value: element.value,\n    };\n  });\n  return (\n    <Overridable id={buildUID('Sort.element', overridableId)} {...props}>\n      <Dropdown\n        selection\n        compact\n        options={_options}\n        value={selected}\n        onChange={(e, { value }) => onValueChange(value)}\n      />\n    </Overridable>\n  );\n};\n\nexport default Overridable.component('Sort', Sort);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport { updateQuerySorting, setInitialState } from '../../state/actions';\nimport SortComponent from './Sort';\n\nconst mapDispatchToProps = dispatch => ({\n  updateQuerySorting: (sortBy, sortOrder) =>\n    dispatch(updateQuerySorting(sortBy, sortOrder)),\n  setInitialState: value => dispatch(setInitialState(value)),\n});\n\nexport const Sort = connect(\n  state => ({\n    currentQueryString: state.query.queryString,\n    currentSortBy: state.query.sortBy,\n    currentSortOrder: state.query.sortOrder,\n    loading: state.results.loading,\n    totalResults: state.results.data.total,\n  }),\n  mapDispatchToProps\n)(SortComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\nimport Overridable from 'react-overridable';\nimport { ShouldRender } from '../ShouldRender';\nimport { buildUID } from '../../util';\n\nclass SortBy extends Component {\n  constructor(props) {\n    super(props);\n    this.options = props.values;\n    this.defaultValue = this.props.defaultValue;\n    this.defaultValueOnEmptyString = this.props.defaultValueOnEmptyString;\n    this.updateQuerySortBy = props.updateQuerySortBy;\n    this.setInitialState = props.setInitialState;\n  }\n\n  componentDidMount() {\n    if (this.props.currentSortBy === null) {\n      const sortBy = this.props.currentQueryString\n        ? this.defaultValue\n        : this.defaultValueOnEmptyString || this.defaultValue;\n      this.setInitialState({\n        sortBy: sortBy,\n      });\n    }\n  }\n\n  onChange = (value) => {\n    if (value === this.props.currentSortBy) return;\n    this.updateQuerySortBy(value);\n  };\n\n  render() {\n    const {\n      currentSortBy,\n      loading,\n      totalResults,\n      label,\n      overridableId,\n    } = this.props;\n    return (\n      <ShouldRender\n        condition={currentSortBy !== null && !loading && totalResults > 0}\n      >\n        {label(\n          <Element\n            currentSortBy={currentSortBy}\n            options={this.options}\n            onValueChange={this.onChange}\n            overridableId={overridableId}\n          />\n        )}\n      </ShouldRender>\n    );\n  }\n}\n\nSortBy.propTypes = {\n  values: PropTypes.array.isRequired,\n  defaultValue: PropTypes.string.isRequired,\n  defaultValueOnEmptyString: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  currentSortBy: PropTypes.string,\n  currentQueryString: PropTypes.string.isRequired,\n  updateQuerySortBy: PropTypes.func.isRequired,\n  setInitialState: PropTypes.func.isRequired,\n  label: PropTypes.func,\n  overridableId: PropTypes.string,\n};\n\nSortBy.defaultProps = {\n  defaultValueOnEmptyString: null,\n  currentSortBy: null,\n  label: (cmp) => cmp,\n  overridableId: '',\n};\n\nconst Element = ({ overridableId, ...props }) => {\n  const { currentSortBy, options, onValueChange } = props;\n  const _options = options.map((element, index) => {\n    return { key: index, text: element.text, value: element.value };\n  });\n  return (\n    <Overridable id={buildUID('SortBy.element', overridableId)} {...props}>\n      <Dropdown\n        selection\n        compact\n        options={_options}\n        value={currentSortBy}\n        onChange={(e, { value }) => onValueChange(value)}\n      />\n    </Overridable>\n  );\n};\n\nexport default Overridable.component('SortBy', SortBy);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport { updateQuerySortBy, setInitialState } from '../../state/actions';\nimport SortByComponent from './SortBy';\nconst mapDispatchToProps = dispatch => ({\n  updateQuerySortBy: sortByValue => dispatch(updateQuerySortBy(sortByValue)),\n  setInitialState: value => dispatch(setInitialState(value)),\n});\n\nexport const SortBy = connect(\n  state => ({\n    loading: state.results.loading,\n    totalResults: state.results.data.total,\n    currentSortBy: state.query.sortBy,\n    currentQueryString: state.query.queryString,\n  }),\n  mapDispatchToProps\n)(SortByComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018-2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Dropdown } from 'semantic-ui-react';\nimport Overridable from 'react-overridable';\nimport { ShouldRender } from '../ShouldRender';\nimport { buildUID } from '../../util';\n\nclass SortOrder extends Component {\n  constructor(props) {\n    super(props);\n    this.options = props.values;\n    this.defaultValue = this.props.defaultValue;\n    this.updateQuerySortOrder = props.updateQuerySortOrder;\n    this.setInitialState = props.setInitialState;\n  }\n\n  componentDidMount() {\n    if (this.props.currentSortOrder === null) {\n      this.setInitialState({\n        sortOrder: this.defaultValue,\n      });\n    }\n  }\n\n  onChange = (value) => {\n    if (value === this.props.currentSortOrder) return;\n    this.updateQuerySortOrder(value);\n  };\n\n  render() {\n    const {\n      currentSortOrder,\n      loading,\n      totalResults,\n      label,\n      overridableId,\n    } = this.props;\n    return (\n      <ShouldRender\n        condition={currentSortOrder !== null && !loading && totalResults > 0}\n      >\n        {label(\n          <Element\n            currentSortOrder={currentSortOrder}\n            options={this.options}\n            onValueChange={this.onChange}\n            overridableId={overridableId}\n          />\n        )}\n      </ShouldRender>\n    );\n  }\n}\n\nSortOrder.propTypes = {\n  values: PropTypes.array.isRequired,\n  defaultValue: PropTypes.string.isRequired,\n  currentSortOrder: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  totalResults: PropTypes.number.isRequired,\n  updateQuerySortOrder: PropTypes.func.isRequired,\n  setInitialState: PropTypes.func.isRequired,\n  label: PropTypes.func,\n  overridableId: PropTypes.string,\n};\n\nSortOrder.defaultProps = {\n  currentSortOrder: null,\n  label: (cmp) => cmp,\n  overridableId: '',\n};\n\nconst Element = ({ overridableId, ...props }) => {\n  const { currentSortOrder, options, onValueChange } = props;\n  const _options = options.map((element, index) => {\n    return { key: index, text: element.text, value: element.value };\n  });\n  return (\n    <Overridable id={buildUID('SortOrder.element', overridableId)} {...props}>\n      <Dropdown\n        selection\n        compact\n        options={_options}\n        value={currentSortOrder}\n        onChange={(e, { value }) => onValueChange(value)}\n      />\n    </Overridable>\n  );\n};\n\nexport default Overridable.component('SortOrder', SortOrder);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2018 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport { connect } from '../../store';\nimport { updateQuerySortOrder, setInitialState } from '../../state/actions';\nimport SortOrderComponent from './SortOrder';\n\nconst mapDispatchToProps = dispatch => ({\n  updateQuerySortOrder: sortOrderValue =>\n    dispatch(updateQuerySortOrder(sortOrderValue)),\n  setInitialState: value => dispatch(setInitialState(value)),\n});\n\nexport const SortOrder = connect(\n  state => ({\n    loading: state.results.loading,\n    totalResults: state.results.data.total,\n    currentSortOrder: state.query.sortOrder,\n  }),\n  mapDispatchToProps\n)(SortOrderComponent);\n","/*\n * This file is part of React-SearchKit.\n * Copyright (C) 2019 CERN.\n *\n * React-SearchKit is free software; you can redistribute it and/or modify it\n * under the terms of the MIT License; see LICENSE file for more details.\n */\n\nimport React from 'react';\nimport { connect } from '../../store';\nimport { updateQueryState } from '../../state/actions';\n\nexport function withState(Component) {\n  const WrappedComponent = ({ dispatch, ...props }) => <Component {...props} />;\n  const mapStateToProps = state => ({\n    currentQueryState: state.query,\n    currentResultsState: state.results,\n  });\n\n  const mapDispatchToProps = dispatch => ({\n    updateQueryState: queryState => dispatch(updateQueryState(queryState)),\n  });\n\n  return connect(mapStateToProps, mapDispatchToProps)(WrappedComponent);\n}\n","export const onQueryChanged = payload => {\n  var evt = new CustomEvent('queryChanged', {\n    detail: payload,\n  });\n  window.dispatchEvent(evt);\n};\n"]},"metadata":{},"sourceType":"script"}