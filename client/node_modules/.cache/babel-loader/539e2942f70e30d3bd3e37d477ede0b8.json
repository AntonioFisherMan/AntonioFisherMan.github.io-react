{"ast":null,"code":"import { returnErrors, clearErrors } from './ErrorReducer';\nimport { testAPI } from \"../api/api\";\nconst USER_LOADING = \"USER_LOADING\";\nconst USER_LOADED = \"USER_LOADED\";\nconst AUTH_ERROR = \"AUTH_ERROR\";\nconst LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nconst LOGIN_FAIL = \"LOGIN_FAIL\";\nconst LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\";\nconst REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nconst REGISTER_FAIL = \"REGISTER_FAIL\";\nconst initialState = {\n  token: sessionStorage.getItem(\"token\") || \"\",\n  isAuth: null,\n  isLoading: false,\n  user: null\n};\n\nconst AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case USER_LOADED:\n      sessionStorage.setItem('token', action.payload.token);\n      return { ...state,\n        isLoading: false,\n        isAuth: true,\n        user: action.payload\n      };\n\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      sessionStorage.setItem('token', action.payload.token);\n      return { ...state,\n        ...action.payload,\n        isAuth: true,\n        isLoading: false\n      };\n\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case LOGOUT_SUCCESS:\n      sessionStorage.removeItem('token');\n      return { ...state,\n        isAuth: false,\n        isLoading: false,\n        user: null,\n        token: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const userLoad = payload => ({\n  type: USER_LOADED,\n  payload\n});\nexport const getAuth = () => async (dispatch, getState) => {\n  try {\n    const token = getState().auth.token;\n    let response = await testAPI.getAuth(token);\n    dispatch(userLoad(response.data));\n  } catch (error) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\nexport const login = (email, password, rememberMe) => async dispatch => {\n  dispatch({\n    type: USER_LOADING\n  });\n  testAPI.login(email, password, rememberMe).then(response => {\n    dispatch(userLoad(response.data.user));\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: response.data\n    });\n    dispatch(clearErrors(null, null, null));\n  }).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL'));\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  });\n};\nexport const register = (name, email, password) => dispatch => {\n  debugger;\n  testAPI.register(name, email, password).then(response => {\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: response.data\n    });\n    dispatch(clearErrors(null, null, null));\n  }).catch(err => {\n    dispatch(returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL'));\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  });\n};\nexport const logout = () => ({\n  type: LOGOUT_SUCCESS\n});\nexport default AuthReducer;","map":{"version":3,"sources":["/Users/anton/Desktop/myApp/client/src/redux/AuthReducer.js"],"names":["returnErrors","clearErrors","testAPI","USER_LOADING","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","REGISTER_FAIL","initialState","token","sessionStorage","getItem","isAuth","isLoading","user","AuthReducer","state","action","type","setItem","payload","removeItem","userLoad","getAuth","dispatch","getState","auth","response","data","error","login","email","password","rememberMe","then","catch","err","status","register","name","logout"],"mappings":"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","sourcesContent":["\nimport {returnErrors,clearErrors} from './ErrorReducer'\nimport { testAPI } from \"../api/api\";\n\n const USER_LOADING=\"USER_LOADING\"\nconst USER_LOADED=\"USER_LOADED\"\nconst AUTH_ERROR=\"AUTH_ERROR\"\nconst LOGIN_SUCCESS=\"LOGIN_SUCCESS\"\nconst LOGIN_FAIL=\"LOGIN_FAIL\"\n const LOGOUT_SUCCESS=\"LOGOUT_SUCCESS\"\nconst REGISTER_SUCCESS=\"REGISTER_SUCCESS\"\nconst REGISTER_FAIL=\"REGISTER_FAIL\"\n\n\n\nconst initialState = {\n  token:sessionStorage.getItem(\"token\")||\"\",\n  isAuth: null,\n  isLoading: false,\n  user:null,\n};\n\nconst AuthReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_LOADING:\n      return { ...state, isLoading: true };\n    case USER_LOADED:\n      sessionStorage.setItem('token',action.payload.token)\n      return { ...state, isLoading: false, isAuth: true, user: action.payload };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      sessionStorage.setItem('token',action.payload.token)\n      return { ...state, ...action.payload, isAuth: true, isLoading: false };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case LOGOUT_SUCCESS:\n      sessionStorage.removeItem('token')\n      return {\n        ...state,\n        isAuth: false,\n        isLoading: false,\n        user: null,\n        token: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const userLoad=(payload)=>({type:USER_LOADED,payload})\n\n\nexport const getAuth=()=>async (dispatch,getState)=>{\n  try {\n    const token=getState().auth.token;\n     let response=await testAPI.getAuth(token)\n      dispatch(userLoad(response.data))\n  } catch (error) {\n    dispatch({type:AUTH_ERROR})\n  }\n}\nexport const login = (email,password,rememberMe) => async(dispatch) => {\n  dispatch({type:USER_LOADING})\n  testAPI.login(email,password,rememberMe).then(response=>{\n    dispatch(userLoad(response.data.user))\n    dispatch({type:LOGIN_SUCCESS,payload:response.data})\n    dispatch(clearErrors(null,null,null))\n  }).catch(err=>{\n    dispatch(returnErrors(err.response.data,err.response.status,'LOGIN_FAIL'))\n    dispatch({type:LOGIN_FAIL})\n  })\n};\n\nexport const register=(name,email,password)=>dispatch=>{\n  debugger\n  testAPI.register(name,email,password).then(response=>{\n    dispatch({type:REGISTER_SUCCESS,payload:response.data})\n    dispatch(clearErrors(null,null,null))\n  }).catch(err=>{\n\n      dispatch(returnErrors(err.response.data,err.response.status,'REGISTER_FAIL'))\n       dispatch({type:REGISTER_FAIL})\n  })\n}\n\nexport const logout=()=>({type:LOGOUT_SUCCESS})\n\n\nexport default AuthReducer;\n"]},"metadata":{},"sourceType":"module"}