{"ast":null,"code":"import { testAPI } from \"../api/api\";\nconst GET_GOODS_AC = \"GET_GOODS_AC\";\nconst GET_GOODBYID_AC = \"GET_GOODBYID_AC\";\nlet initialState = {\n  goods: [],\n  goodItem: []\n};\n\nconst CatalogReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_GOODS_AC:\n      return { ...state,\n        goods: [...action.dataGoods]\n      };\n\n    case GET_GOODBYID_AC:\n      return { ...state,\n        goodItem: [...action.goodItem]\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst getGoods = dataGoods => ({\n  type: GET_GOODS_AC,\n  dataGoods\n});\n\nconst getGood = goodItem => ({\n  type: GET_GOODBYID_AC,\n  goodItem\n});\n\nexport const getGoodsThunk = () => async dispatch => {\n  let response = await testAPI.getGoods();\n  dispatch(getGoods(response));\n};\nexport const getGoodsThunkById = id => async dispatch => {\n  let response = await testAPI.getGood(id);\n  dispatch(getGood(response.data));\n};\nexport default CatalogReducer;","map":{"version":3,"sources":["/Users/anton/Desktop/myApp/client/src/redux/CatalogReducer.js"],"names":["testAPI","GET_GOODS_AC","GET_GOODBYID_AC","initialState","goods","goodItem","CatalogReducer","state","action","type","dataGoods","getGoods","getGood","getGoodsThunk","dispatch","response","getGoodsThunkById","id","data"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AAEA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,eAAe,GAAG,iBAAxB;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,QAAQ,EAAC;AAFQ,CAAnB;;AAKA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,YAAL;AACE,aAAO,EAAE,GAAGM,KAAL;AAAYH,QAAAA,KAAK,EAAE,CAAC,GAAGI,MAAM,CAACE,SAAX;AAAnB,OAAP;;AACF,SAAKR,eAAL;AACE,aAAO,EAAE,GAAGK,KAAL;AAAYF,QAAAA,QAAQ,EAAC,CAAC,GAAGG,MAAM,CAACH,QAAX;AAArB,OAAP;;AACF;AACE,aAAOE,KAAP;AANJ;AAQD,CATD;;AAUA,MAAMI,QAAQ,GAAID,SAAD,KAAgB;AAAED,EAAAA,IAAI,EAAER,YAAR;AAAsBS,EAAAA;AAAtB,CAAhB,CAAjB;;AACA,MAAME,OAAO,GAAIP,QAAD,KAAe;AAAEI,EAAAA,IAAI,EAAEP,eAAR;AAAyBG,EAAAA;AAAzB,CAAf,CAAhB;;AAEA,OAAO,MAAMQ,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACrD,MAAIC,QAAQ,GAAG,MAAMf,OAAO,CAACW,QAAR,EAArB;AACAG,EAAAA,QAAQ,CAACH,QAAQ,CAACI,QAAD,CAAT,CAAR;AACD,CAHM;AAKP,OAAO,MAAMC,iBAAiB,GAAIC,EAAD,IAAQ,MAAOH,QAAP,IAAoB;AAC3D,MAAIC,QAAQ,GAAG,MAAMf,OAAO,CAACY,OAAR,CAAgBK,EAAhB,CAArB;AACAH,EAAAA,QAAQ,CAACF,OAAO,CAACG,QAAQ,CAACG,IAAV,CAAR,CAAR;AACD,CAHM;AAIP,eAAeZ,cAAf","sourcesContent":["import { testAPI } from \"../api/api\";\n\nconst GET_GOODS_AC = \"GET_GOODS_AC\";\nconst GET_GOODBYID_AC = \"GET_GOODBYID_AC\";\nlet initialState = {\n  goods: [],\n  goodItem:[],\n};\n\nconst CatalogReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_GOODS_AC:\n      return { ...state, goods: [...action.dataGoods] };\n    case GET_GOODBYID_AC:\n      return { ...state, goodItem:[...action.goodItem]};\n    default:\n      return state;\n  }\n};\nconst getGoods = (dataGoods) => ({ type: GET_GOODS_AC, dataGoods });\nconst getGood = (goodItem) => ({ type: GET_GOODBYID_AC, goodItem });\n\nexport const getGoodsThunk = () => async (dispatch) => {\n  let response = await testAPI.getGoods();\n  dispatch(getGoods(response));\n};\n\nexport const getGoodsThunkById = (id) => async (dispatch) => {\n  let response = await testAPI.getGood(id);\n  dispatch(getGood(response.data));\n};\nexport default CatalogReducer;\n"]},"metadata":{},"sourceType":"module"}