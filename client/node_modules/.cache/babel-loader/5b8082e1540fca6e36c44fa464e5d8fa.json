{"ast":null,"code":"var _jsxFileName = \"/Users/anton/Downloads/myApp-1/client/src/redux/modalContext.js\";\nimport React, { Component } from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"mongoose\";\nimport { stat } from \"fs\";\nconst ModalContext = React.createContext();\n\nclass ModalProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      goods: this.props.goods,\n      modalOpen: false,\n      modalProduct: null\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ModalContext.Provider, {\n      value: { ...this.state,\n        openModal: this.openModal,\n        closeModal: this.closeModal\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ModalConsumer = ModalContext.Consumer;\n\nlet mapStateToProps = state => {\n  return {\n    goods: state.goods.goods\n  };\n};\n\nexport default compose(connect(mapStateToProps))(ModalProvider, ModalConsumer);\nexport {};","map":{"version":3,"sources":["/Users/anton/Downloads/myApp-1/client/src/redux/modalContext.js"],"names":["React","Component","compose","connect","stat","ModalContext","createContext","ModalProvider","state","goods","props","modalOpen","modalProduct","getItem","id","product","products","find","item","openModal","setState","closeModal","render","children","ModalConsumer","Consumer","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,UAAxB;AACA,SAASC,IAAT,QAAqB,IAArB;AAEA,MAAMC,YAAY,GAAGL,KAAK,CAACM,aAAN,EAArB;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;AAAA,SACpCO,KADoC,GAC5B;AACNC,MAAAA,KAAK,EAAC,KAAKC,KAAL,CAAWD,KADX;AAENE,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,YAAY,EAAE;AAHR,KAD4B;;AAAA,SAMlCC,OANkC,GAMxBC,EAAE,IAAI;AACZ,YAAMC,OAAO,GAAG,KAAKP,KAAL,CAAWQ,QAAX,CAAoBC,IAApB,CAAyBC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYA,EAA7C,CAAhB;AACA,aAAOC,OAAP;AACD,KAT+B;;AAAA,SAUpCI,SAVoC,GAUxBL,EAAE,IAAI;AAChB,YAAMC,OAAO,GAAG,KAAKF,OAAL,CAAaC,EAAb,CAAhB;AACA,WAAKM,QAAL,CAAc,MAAM;AAClB,eAAO;AAAER,UAAAA,YAAY,EAAEG,OAAhB;AAAyBJ,UAAAA,SAAS,EAAE;AAApC,SAAP;AACD,OAFD;AAGD,KAfmC;;AAAA,SAgBpCU,UAhBoC,GAgBvB,MAAM;AACjB,WAAKD,QAAL,CAAc,MAAM;AAClB,eAAO;AAAET,UAAAA,SAAS,EAAE;AAAb,SAAP;AACD,OAFD;AAGD,KApBmC;AAAA;;AAqBpCW,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,YAAD,CAAc,QAAd;AACE,MAAA,KAAK,EAAE,EACL,GAAG,KAAKd,KADH;AAELW,QAAAA,SAAS,EAAE,KAAKA,SAFX;AAGLE,QAAAA,UAAU,EAAE,KAAKA;AAHZ,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOG,KAAKX,KAAL,CAAWa,QAPd,CADF;AAWD;;AAjCmC;;AAoCtC,MAAMC,aAAa,GAAGnB,YAAY,CAACoB,QAAnC;;AACA,IAAIC,eAAe,GAAElB,KAAD,IAAS;AACzB,SAAO;AACHC,IAAAA,KAAK,EAACD,KAAK,CAACC,KAAN,CAAYA;AADf,GAAP;AAGH,CAJD;;AAKA,eAAeP,OAAO,CACnBC,OAAO,CAACuB,eAAD,CADY,CAAP,CAEbnB,aAFa,EAEEiB,aAFF,CAAf;AAGA","sourcesContent":["import React, { Component } from \"react\";\nimport { compose } from \"redux\";\nimport { connect } from \"mongoose\";\nimport { stat } from \"fs\";\n\nconst ModalContext = React.createContext();\n\nclass ModalProvider extends Component {\n  state = {\n    goods:this.props.goods,\n    modalOpen: false,\n    modalProduct: null,\n  }\n    getItem = id => {\n        const product = this.state.products.find(item => item.id === id);\n        return product;\n      };\n  openModal = id => {\n    const product = this.getItem(id);\n    this.setState(() => {\n      return { modalProduct: product, modalOpen: true };\n    });\n  };\n  closeModal = () => {\n    this.setState(() => {\n      return { modalOpen: false };\n    });\n  };\n  render() {\n    return (\n      <ModalContext.Provider\n        value={{\n          ...this.state,\n          openModal: this.openModal,\n          closeModal: this.closeModal,\n        }}\n      >\n        {this.props.children}\n      </ModalContext.Provider>\n    );\n  }\n}\n\nconst ModalConsumer = ModalContext.Consumer;\nlet mapStateToProps=(state)=>{\n    return {\n        goods:state.goods.goods\n    }\n}\nexport default compose(\n   connect(mapStateToProps)\n)(ModalProvider, ModalConsumer)\nexport {  };"]},"metadata":{},"sourceType":"module"}