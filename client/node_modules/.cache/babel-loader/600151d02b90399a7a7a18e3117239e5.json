{"ast":null,"code":"var _jsxFileName = \"/Users/anton/Downloads/myApp-1/client/src/components/common/FormsControls/File.jsx\";\nimport React from 'react';\nexport const File = ({\n  input,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => {\n  const hasError = error && touched;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, input, {\n    type: type,\n    name: input.name,\n    multiple: true,\n    className: hasError ? \"error\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  })), hasError ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 26\n    }\n  }, error) : null);\n};","map":{"version":3,"sources":["/Users/anton/Downloads/myApp-1/client/src/components/common/FormsControls/File.jsx"],"names":["React","File","input","type","meta","touched","error","warning","hasError","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB;AAArB,CAAD,KAAwD;AAExE,QAAMC,QAAQ,GAAGF,KAAK,IAAID,OAA1B;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,+CAAWH,KAAX;AAAkB,IAAA,IAAI,EAAEC,IAAxB;AAA8B,IAAA,IAAI,EAAED,KAAK,CAACO,IAA1C;AAAiD,IAAA,QAAQ,MAAzD;AAA0D,IAAA,SAAS,EAAED,QAAQ,GAAG,OAAH,GAAa,EAA1F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADJ,EAEMA,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,KAAP,CAAH,GAA0B,IAFxC,CADJ;AAMH,CATM","sourcesContent":["import React from 'react'\n\n\n\nexport const File = ({ input, type, meta: { touched, error, warning } }) => {\n  \n    const hasError = error && touched\n    return (\n        <div>\n            <input {...input} type={type} name={input.name}  multiple className={hasError ? \"error\" : \"\"}  />\n             {hasError ? <span>{error}</span> : null}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}