{"ast":null,"code":"import * as axios from \"axios\";\nconst baseUrl = \"http://localhost:5000/\";\nlet instance = axios.create({\n  baseUrl: baseUrl,\n  headers: {\n    \"x-auth-token\": sessionStorage.getItem('token')\n  }\n});\nexport const testAPI = {\n  getMyUsers() {\n    return axios.get(\"http://localhost:5000/users\").then(response => response.data);\n  },\n\n  getGoods(token) {\n    return instance.get(\"http://localhost:5000/goods\").then(response => response.data);\n  },\n\n  login(email, password, rememberMe = false) {\n    return axios.post(\"http://localhost:5000/auth/\", {\n      email,\n      password,\n      rememberMe\n    });\n  },\n\n  register(name, email, password) {\n    return axios.post(\"http://localhost:5000/users\", {\n      name,\n      email,\n      password\n    });\n  },\n\n  getAuth() {\n    return instance.get(\"http://localhost:5000/auth/user\");\n  },\n\n  getReviews() {\n    return instance.get(\"http://localhost:5000/goods/reviews\").then(response => response.data);\n  },\n\n  setReviews(reviews, images) {\n    debugger;\n    const photoData = new FormData();\n    photoData.append(\"image\", images);\n    return instance.post('http://localhost:5000/goods/reviews', {\n      reviews,\n      photoData\n    }, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/anton/Desktop/myApp/client/src/api/api.js"],"names":["axios","baseUrl","instance","create","headers","sessionStorage","getItem","testAPI","getMyUsers","get","then","response","data","getGoods","token","login","email","password","rememberMe","post","register","name","getAuth","getReviews","setReviews","reviews","images","photoData","FormData","append"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,MAAMC,OAAO,GAAG,wBAAhB;AAEA,IAAIC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC1BF,EAAAA,OAAO,EAAEA,OADiB;AAE1BG,EAAAA,OAAO,EAAE;AACP,oBAAeC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AADR;AAFiB,CAAb,CAAf;AAOA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,UAAU,GAAG;AACX,WAAOR,KAAK,CACTS,GADI,CACA,6BADA,EAEJC,IAFI,CAEEC,QAAD,IAAcA,QAAQ,CAACC,IAFxB,CAAP;AAGD,GALoB;;AAMrBC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,WAAOZ,QAAQ,CACZO,GADI,CACA,6BADA,EAEJC,IAFI,CAEEC,QAAD,IAAcA,QAAQ,CAACC,IAFxB,CAAP;AAGD,GAVoB;;AAWrBG,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAiBC,UAAU,GAAC,KAA5B,EAAmC;AACtC,WAAOlB,KAAK,CAACmB,IAAN,CAAW,6BAAX,EAA0C;AAAEH,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAkBC,MAAAA;AAAlB,KAA1C,CAAP;AACD,GAboB;;AAcrBE,EAAAA,QAAQ,CAACC,IAAD,EAAOL,KAAP,EAAcC,QAAd,EAAwB;AAC9B,WAAOjB,KAAK,CAACmB,IAAN,CAAW,6BAAX,EAA0C;AAAEE,MAAAA,IAAF;AAAQL,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAA1C,CAAP;AACD,GAhBoB;;AAiBrBK,EAAAA,OAAO,GAAG;AACR,WAAOpB,QAAQ,CAACO,GAAT,CAAa,iCAAb,CAAP;AACD,GAnBoB;;AAoBrBc,EAAAA,UAAU,GAAE;AACV,WAAOrB,QAAQ,CAACO,GAAT,CAAa,qCAAb,EACNC,IADM,CACDC,QAAQ,IAAEA,QAAQ,CAACC,IADlB,CAAP;AAED,GAvBoB;;AAwBrBY,EAAAA,UAAU,CAACC,OAAD,EAASC,MAAT,EAAgB;AACxB;AACE,UAAMC,SAAS,GAAC,IAAIC,QAAJ,EAAhB;AACAD,IAAAA,SAAS,CAACE,MAAV,CAAiB,OAAjB,EAAyBH,MAAzB;AACD,WAAOxB,QAAQ,CAACiB,IAAT,CAAc,qCAAd,EAAoD;AAACM,MAAAA,OAAD;AAASE,MAAAA;AAAT,KAApD,EAAwE;AAC7EvB,MAAAA,OAAO,EAAC;AACR,wBAAe;AADP;AADqE,KAAxE,CAAP;AAKA;;AAjCkB,CAAhB","sourcesContent":["import * as axios from \"axios\";\n\n\nconst baseUrl = \"http://localhost:5000/\";\n\nlet instance = axios.create({\n  baseUrl: baseUrl,\n  headers: {\n    \"x-auth-token\":sessionStorage.getItem('token')\n  },\n});\n\nexport const testAPI = {\n  getMyUsers() {\n    return axios\n      .get(\"http://localhost:5000/users\")\n      .then((response) => response.data);\n  },\n  getGoods(token) {\n    return instance\n      .get(\"http://localhost:5000/goods\")\n      .then((response) => response.data);\n  },\n  login(email, password,rememberMe=false) {\n    return axios.post(\"http://localhost:5000/auth/\", { email, password,rememberMe });\n  },\n  register(name, email, password) {\n    return axios.post(\"http://localhost:5000/users\", { name, email, password });\n  },\n  getAuth() {\n    return instance.get(\"http://localhost:5000/auth/user\")\n  },\n  getReviews(){\n    return instance.get(\"http://localhost:5000/goods/reviews\")\n    .then(response=>response.data)\n  },\n  setReviews(reviews,images){\n    debugger\n      const photoData=new FormData();\n      photoData.append(\"image\",images);\n     return instance.post('http://localhost:5000/goods/reviews',{reviews,photoData},{\n       headers:{\n       'Content-Type':'multipart/form-data'\n       }\n     })\n    }\n};\n"]},"metadata":{},"sourceType":"module"}