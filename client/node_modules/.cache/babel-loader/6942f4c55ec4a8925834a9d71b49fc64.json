{"ast":null,"code":"import { stopSubmit } from \"redux-form\";\nimport { usersAPI } from \"../../src/api/api\";\nconst SETPROFILE_AC = \"SETPROFILE_AC\";\nconst SETPHOTOSUCCESS_AC = \"SETPHOTOSUCCESS_AC\";\nconst SETSTATUS_AC = \"SetStatus\";\nconst SET_GLOBAL_ERROR = \"SET_GLOBAL_ERROR\";\nlet initialState = {\n  profile: null,\n  status: null,\n  globalError: null\n}; //Reducer\n\nconst ProfileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SETSTATUS_AC:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    case SETPROFILE_AC:\n      {\n        return { ...state,\n          profile: action.profileData\n        };\n      }\n\n    case SETPHOTOSUCCESS_AC:\n      {\n        return { ...state,\n          profile: { ...state.profile,\n            photos: action.photos\n          }\n        };\n      }\n\n    case SET_GLOBAL_ERROR:\n      {\n        return { ...state,\n          globalError: action.globalError\n        };\n      }\n\n    default:\n      return state;\n  }\n}; //ActionCreator\n\n\nexport const setStatus = status => ({\n  type: SETSTATUS_AC,\n  status\n});\nexport const setProfileInform = profileData => ({\n  type: SETPROFILE_AC,\n  profileData\n});\nexport const setPhotoSuccess = photos => ({\n  type: SETPHOTOSUCCESS_AC,\n  photos\n});\nexport const setGlobalError = globalError => ({\n  type: SET_GLOBAL_ERROR,\n  globalError\n}); //ThunkCreator\n\nexport const getStatusThunkCreator = user_id => async dispatch => {\n  let data = await usersAPI.getStatus(user_id);\n  dispatch(setStatus(data));\n};\nexport const updateStatus = status => async dispatch => {\n  try {\n    let response = await usersAPI.updateStatus(status);\n\n    if (response.resultCode === 0) {\n      dispatch(setStatus(status));\n    } else {\n      dispatch(setGlobalError(response.messages[0]));\n      const timer = setTimeout(() => {\n        dispatch(setGlobalError(null));\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  } catch (error) {\n    dispatch(setGlobalError(error));\n    const timer = setTimeout(() => {\n      dispatch(setGlobalError(null));\n    }, 3000);\n    return () => clearTimeout(timer);\n  }\n};\nexport const getProfileThunk = user_id => async dispatch => {\n  try {\n    let response = await usersAPI.getProfileInform(user_id);\n    dispatch(setProfileInform(response.data));\n  } catch (error) {\n    dispatch(setGlobalError(error));\n    const timer = setTimeout(() => {\n      dispatch(setGlobalError(null));\n    }, 3000);\n    return () => clearTimeout(timer);\n  }\n};\nexport const saveProfile = data => async dispatch => {\n  try {\n    let response = await usersAPI.saveProfile(data);\n\n    if (response.data.resultCode === 0) {\n      dispatch(setProfileInform(data));\n    } else {\n      let errorMessage = response.data.messages.length > 0 ? response.data.messages[0] : \"someError\";\n      dispatch(stopSubmit(\"edit-profile\", {\n        _error: errorMessage\n      }));\n      return Promise.reject(errorMessage);\n    }\n  } catch (error) {\n    dispatch(setGlobalError(error));\n    const timer = setTimeout(() => {\n      dispatch(setGlobalError(null));\n    }, 3000);\n    return () => clearTimeout(timer);\n  }\n};\nexport const savePhoto = photo => async dispatch => {\n  try {\n    let response = await usersAPI.savePhoto(photo);\n\n    if (response.data.resultCode === 0) {\n      dispatch(setPhotoSuccess(response.data.data.photos));\n    } else {\n      return Promise.reject(response.data.messages[0]);\n    }\n  } catch (error) {\n    dispatch(setGlobalError(error));\n    const timer = setTimeout(() => {\n      dispatch(setGlobalError(null));\n    }, 3000);\n    return () => clearTimeout(timer);\n  }\n};\nexport default ProfileReducer;","map":{"version":3,"sources":["/Volumes/Anton/FullStack/myApp/client/src/redux/ProfileReducer.js"],"names":["stopSubmit","usersAPI","SETPROFILE_AC","SETPHOTOSUCCESS_AC","SETSTATUS_AC","SET_GLOBAL_ERROR","initialState","profile","status","globalError","ProfileReducer","state","action","type","profileData","photos","setStatus","setProfileInform","setPhotoSuccess","setGlobalError","getStatusThunkCreator","user_id","dispatch","data","getStatus","updateStatus","response","resultCode","messages","timer","setTimeout","clearTimeout","error","getProfileThunk","getProfileInform","saveProfile","errorMessage","length","_error","Promise","reject","savePhoto","photo"],"mappings":"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","sourcesContent":["import { stopSubmit } from \"redux-form\";\nimport { usersAPI } from \"../../src/api/api\";\n\nconst SETPROFILE_AC = \"SETPROFILE_AC\";\nconst SETPHOTOSUCCESS_AC = \"SETPHOTOSUCCESS_AC\";\nconst SETSTATUS_AC = \"SetStatus\";\nconst SET_GLOBAL_ERROR = \"SET_GLOBAL_ERROR\";\n\nlet initialState = {\n  profile: null,\n  status: null,\n  globalError: null,\n};\n\n//Reducer\nconst ProfileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SETSTATUS_AC: {\n  \n      return { ...state, status: action.status };\n    }\n    case SETPROFILE_AC: {\n      return { ...state, profile: action.profileData };\n    }\n    case SETPHOTOSUCCESS_AC: {\n      return { ...state, profile: { ...state.profile, photos: action.photos } };\n    }\n   \n    case SET_GLOBAL_ERROR: {\n      return { ...state, globalError: action.globalError };\n    }\n    default:\n      return state;\n  }\n};\n\n//ActionCreator\nexport const setStatus = (status) => ({ type: SETSTATUS_AC, status });\nexport const setProfileInform = (profileData) => ({\n  type: SETPROFILE_AC,\n  profileData,\n});\nexport const setPhotoSuccess = (photos) => ({\n  type: SETPHOTOSUCCESS_AC,\n  photos,\n});\nexport const setGlobalError = (globalError) => ({\n  type: SET_GLOBAL_ERROR,\n  globalError,\n});\n\n//ThunkCreator\nexport const getStatusThunkCreator = (user_id) => async (dispatch) => {\n  let data = await usersAPI.getStatus(user_id);\n  dispatch(setStatus(data));\n};\n\nexport const updateStatus = (status) => async (dispatch) => {\n  try {\n    let response = await usersAPI.updateStatus(status);\n    if (response.resultCode === 0) {\n      dispatch(setStatus(status));\n    } else {\n      dispatch(setGlobalError(response.messages[0]));\n      const timer=setTimeout(()=>{\n        dispatch(setGlobalError(null));\n      },5000)\n      return ()=>clearTimeout(timer);\n    \n    }\n  } catch (error) {\n    dispatch(setGlobalError(error));\n    const timer = setTimeout(() => {\n      dispatch(setGlobalError(null));\n    }, 3000);\n    return () => clearTimeout(timer);\n  }\n};\n\nexport const getProfileThunk = (user_id) => async (dispatch) => {\n  try {\n    let response = await usersAPI.getProfileInform(user_id);\n    dispatch(setProfileInform(response.data));\n  } catch (error) {\n    dispatch(setGlobalError(error));\n    const timer = setTimeout(() => {\n      dispatch(setGlobalError(null));\n    }, 3000);\n    return () => clearTimeout(timer);\n  }\n};\nexport const saveProfile = (data) => async (dispatch) => {\n  try {\n    let response = await usersAPI.saveProfile(data);\n    if (response.data.resultCode === 0) {\n      dispatch(setProfileInform(data));\n    } else {\n      let errorMessage =\n        response.data.messages.length > 0\n          ? response.data.messages[0]\n          : \"someError\";\n      dispatch(stopSubmit(\"edit-profile\", { _error: errorMessage }));\n      return Promise.reject(errorMessage);\n    }\n  } catch (error) {\n    dispatch(setGlobalError(error));\n    const timer = setTimeout(() => {\n      dispatch(setGlobalError(null));\n    }, 3000);\n    return () => clearTimeout(timer);\n  }\n};\n\nexport const savePhoto = (photo) => async (dispatch) => {\n  try {\n    let response = await usersAPI.savePhoto(photo);\n    if (response.data.resultCode === 0) {\n      dispatch(setPhotoSuccess(response.data.data.photos));\n    }else{\n      return Promise.reject(response.data.messages[0]);\n    }\n  } catch (error) {\n    dispatch(setGlobalError(error));\n    const timer = setTimeout(() => {\n      dispatch(setGlobalError(null));\n    }, 3000);\n    return () => clearTimeout(timer);\n  }\n};\nexport default ProfileReducer;\n"]},"metadata":{},"sourceType":"module"}