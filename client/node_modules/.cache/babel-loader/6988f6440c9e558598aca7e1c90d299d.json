{"ast":null,"code":"import { testAPI } from \"../api/api\";\nconst GET_GOODS_AC = \"GET_GOODS_AC\";\nconst GET_GOODBYID_AC = \"GET_GOODBYID_AC\";\nlet initialState = {\n  goods: [],\n  goodItem: null\n};\n\nconst CatalogReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_GOODS_AC:\n      return { ...state,\n        goods: [...action.dataGoods]\n      };\n\n    case GET_GOODBYID_AC:\n      return { ...state,\n        goodItem: action.goodItem\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst getGoods = dataGoods => ({\n  type: GET_GOODS_AC,\n  dataGoods\n});\n\nconst getGood = goodItem => ({\n  type: GET_GOODS_AC,\n  goodItem\n});\n\nexport const getGoodsThunk = () => async dispatch => {\n  let response = await testAPI.getGoods();\n  dispatch(getGoods(response));\n};\nexport const getGoodsThunkById = id => async dispatch => {\n  debugger;\n  let response = await testAPI.getGood(id);\n  dispatch(getGood(response.data));\n};\nexport default CatalogReducer;","map":{"version":3,"sources":["/Users/anton/Desktop/myApp/client/src/redux/CatalogReducer.js"],"names":["testAPI","GET_GOODS_AC","GET_GOODBYID_AC","initialState","goods","goodItem","CatalogReducer","state","action","type","dataGoods","getGoods","getGood","getGoodsThunk","dispatch","response","getGoodsThunkById","id","data"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AAEA,MAAMC,YAAY,GAAC,cAAnB;AACA,MAAMC,eAAe,GAAC,iBAAtB;AACA,IAAIC,YAAY,GAAC;AACbC,EAAAA,KAAK,EAAC,EADO;AAEbC,EAAAA,QAAQ,EAAC;AAFI,CAAjB;;AAKA,MAAMC,cAAc,GAAC,CAACC,KAAK,GAACJ,YAAP,EAAoBK,MAApB,KAA6B;AAC9C,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKR,YAAL;AACI,aAAM,EAAC,GAAGM,KAAJ;AAAUH,QAAAA,KAAK,EAAC,CAAC,GAAGI,MAAM,CAACE,SAAX;AAAhB,OAAN;;AACA,SAAKR,eAAL;AACI,aAAM,EAAC,GAAGK,KAAJ;AAAUF,QAAAA,QAAQ,EAACG,MAAM,CAACH;AAA1B,OAAN;;AACR;AAAS,aAAOE,KAAP;AALb;AAOH,CARD;;AASA,MAAMI,QAAQ,GAAED,SAAD,KAAc;AAACD,EAAAA,IAAI,EAACR,YAAN;AAAmBS,EAAAA;AAAnB,CAAd,CAAf;;AACA,MAAME,OAAO,GAAEP,QAAD,KAAa;AAACI,EAAAA,IAAI,EAACR,YAAN;AAAmBI,EAAAA;AAAnB,CAAb,CAAd;;AAEA,OAAO,MAAMQ,aAAa,GAAC,MAAI,MAAMC,QAAN,IAAiB;AAC5C,MAAIC,QAAQ,GAAC,MAAMf,OAAO,CAACW,QAAR,EAAnB;AACIG,EAAAA,QAAQ,CAACH,QAAQ,CAACI,QAAD,CAAT,CAAR;AACP,CAHM;AAIP,OAAO,MAAMC,iBAAiB,GAAEC,EAAD,IAAM,MAAMH,QAAN,IAAiB;AAClD;AACA,MAAIC,QAAQ,GAAC,MAAMf,OAAO,CAACY,OAAR,CAAgBK,EAAhB,CAAnB;AACAH,EAAAA,QAAQ,CAACF,OAAO,CAACG,QAAQ,CAACG,IAAV,CAAR,CAAR;AACH,CAJM;AAKP,eAAeZ,cAAf","sourcesContent":["import { testAPI } from \"../api/api\"\n\nconst GET_GOODS_AC=\"GET_GOODS_AC\"\nconst GET_GOODBYID_AC=\"GET_GOODBYID_AC\"\nlet initialState={\n    goods:[],\n    goodItem:null\n}\n\nconst CatalogReducer=(state=initialState,action)=>{\n    switch(action.type){\n        case GET_GOODS_AC:\n            return{...state,goods:[...action.dataGoods]}\n            case GET_GOODBYID_AC:\n                return{...state,goodItem:action.goodItem}\n        default: return state\n    }\n}\nconst getGoods=(dataGoods)=>({type:GET_GOODS_AC,dataGoods})\nconst getGood=(goodItem)=>({type:GET_GOODS_AC,goodItem})\n\nexport const getGoodsThunk=()=>async(dispatch)=>{\n    let response=await testAPI.getGoods()\n        dispatch(getGoods(response))\n}\nexport const getGoodsThunkById=(id)=>async(dispatch)=>{\n    debugger\n    let response=await testAPI.getGood(id)\n    dispatch(getGood(response.data))\n}\nexport default CatalogReducer"]},"metadata":{},"sourceType":"module"}