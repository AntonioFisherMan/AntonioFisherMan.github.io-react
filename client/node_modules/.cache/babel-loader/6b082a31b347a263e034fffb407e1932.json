{"ast":null,"code":"var _jsxFileName = \"/Users/anton/Downloads/myApp-1/client/src/components/common/Paginator/Paginator.jsx\";\nimport React, { useState } from 'react';\nimport cn from 'classnames';\nimport styles from './Paginator.module.css';\nimport { Link } from 'react-router-dom';\n\nconst Paginator = ({\n  totalCount,\n  pageSize,\n  portionSize = 5,\n  pageNumber,\n  onPageChanged\n}) => {\n  debugger;\n  let pagesCount = Math.ceil(totalItemsCount / pageSize);\n  let pages = [];\n\n  for (var i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let portionCount = Math.ceil(pagesCount / portionSize);\n  let [portionNumber, setPortionNumber] = useState(1);\n  let leftPortion = (portionNumber - 1) * portionSize + 1;\n  let rightPortion = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"prev\"), pages.filter(i => i >= leftPortion && i <= rightPortion).map(i => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => {\n        onPageChanged(i);\n      },\n      className: currentPage === i ? styles.selectedPage : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, i));\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 38\n    }\n  }, \"Next\")); // return (\n  //     <div className={styles.productsPagination}>\n  //         {portionNumber >= 1 &&\n  //             <button onClick={() => { setPortionNumber(portionNumber - 1) }}>  <li className={styles.pageItem}>\n  //                 <Link className={styles.pageLink} >\n  //                     <i className=\"fas fa-chevron-left\" aria-hidden=\"true\"></i>\n  //                 </Link>\n  //             </li></button>}\n  //         {pages\n  //             .filter(p => p >= leftPortion && p <= rightPortion)\n  //             .map((p) => \n  //             <li key={p} className={styles.pageItem}><Link className={pageNumber===p?styles.selectedPageLink:styles.pageLink}   onClick={(e) => { onPageChanged(p);}} >{p}</Link></li> )}\n  //         {portionCount >= portionNumber &&\n  //             <button onClick={() => { setPortionNumber(portionNumber + 1) }}>   <li className={styles.pageItem}>\n  //                 <Link className={styles.pageLink}> <i className=\"fas fa-chevron-right\" aria-hidden=\"true\"></i></Link>\n  //             </li></button>}\n  //     </div>\n  // )\n};\n\nexport default Paginator;","map":{"version":3,"sources":["/Users/anton/Downloads/myApp-1/client/src/components/common/Paginator/Paginator.jsx"],"names":["React","useState","cn","styles","Link","Paginator","totalCount","pageSize","portionSize","pageNumber","onPageChanged","pagesCount","Math","ceil","totalItemsCount","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortion","rightPortion","filter","map","e","currentPage","selectedPage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,QAAb;AAAuBC,EAAAA,WAAW,GAAC,CAAnC;AAAsCC,EAAAA,UAAtC;AAAkDC,EAAAA;AAAlD,CAAD,KAAsE;AACxF;AACA,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUC,eAAe,GAAGP,QAA5B,CAAjB;AACA,MAAIQ,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIL,UAArB,EAAiCK,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AACD,MAAIE,YAAY,GAACN,IAAI,CAACC,IAAL,CAAUF,UAAU,GAACH,WAArB,CAAjB;AACA,MAAI,CAACW,aAAD,EAAeC,gBAAf,IAAiCnB,QAAQ,CAAC,CAAD,CAA7C;AACA,MAAIoB,WAAW,GAAC,CAACF,aAAa,GAAC,CAAf,IAAkBX,WAAlB,GAA8B,CAA9C;AACA,MAAIc,YAAY,GAACH,aAAa,GAACX,WAA/B;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEDW,aAAa,GAAC,CAAd,iBAAiB;AAAQ,IAAA,OAAO,EAAE,MAAI;AAACC,MAAAA,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;AAAkC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFhB,EAGKJ,KAAK,CAACQ,MAAN,CAAaP,CAAC,IAAEA,CAAC,IAAEK,WAAH,IAAgBL,CAAC,IAAEM,YAAnC,EAAiDE,GAAjD,CAAqDR,CAAC,IAAI;AACvD,wBAAO;AAAM,MAAA,GAAG,EAAEA,CAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAQ,MAAA,OAAO,EAAGS,CAAD,IAAO;AAACf,QAAAA,aAAa,CAACM,CAAD,CAAb;AAAmB,OAA5C;AAA8C,MAAA,SAAS,EAAEU,WAAW,KAAKV,CAAhB,GAAoBb,MAAM,CAACwB,YAA3B,GAA0C,IAAnG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0GX,CAA1G,CADG,CAAP;AAGH,GAJA,CAHL,EAUKE,YAAY,GAACC,aAAb,iBAA4B;AAAQ,IAAA,OAAO,EAAE,MAAI;AAACC,MAAAA,gBAAgB,CAACD,aAAa,GAAC,CAAf,CAAhB;AAAkC,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVjC,CADJ,CAXwF,CA4BpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACH,CAlDD;;AAoDA,eAAed,SAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport cn from 'classnames'\r\nimport styles from './Paginator.module.css'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst Paginator = ({totalCount, pageSize, portionSize=5, pageNumber, onPageChanged}) => {\r\ndebugger\r\nlet pagesCount = Math.ceil(totalItemsCount / pageSize);\r\nlet pages = [];\r\nfor (var i = 1; i <= pagesCount; i++) {\r\n    pages.push(i);\r\n}\r\nlet portionCount=Math.ceil(pagesCount/portionSize)\r\nlet [portionNumber,setPortionNumber]=useState(1)\r\nlet leftPortion=(portionNumber-1)*portionSize+1;\r\nlet rightPortion=portionNumber*portionSize;\r\nreturn(\r\n    <div className=\"row d-flex justify-content-center\">\r\n   \r\n  {portionNumber>1&&<button onClick={()=>{setPortionNumber(portionNumber-1)}}>prev</button>}\r\n        {pages.filter(i=>i>=leftPortion&&i<=rightPortion).map(i => {\r\n            return <span key={i} >\r\n                <button onClick={(e) => {onPageChanged(i); }} className={currentPage === i ? styles.selectedPage : null}>{i}</button>\r\n            </span>\r\n        }\r\n    \r\n        )}\r\n        {portionCount>portionNumber&&<button onClick={()=>{setPortionNumber(portionNumber+1)}}>Next</button>} \r\n    \r\n    \r\n   </div>\r\n)\r\n    \r\n    // return (\r\n    //     <div className={styles.productsPagination}>\r\n    //         {portionNumber >= 1 &&\r\n    //             <button onClick={() => { setPortionNumber(portionNumber - 1) }}>  <li className={styles.pageItem}>\r\n    //                 <Link className={styles.pageLink} >\r\n    //                     <i className=\"fas fa-chevron-left\" aria-hidden=\"true\"></i>\r\n    //                 </Link>\r\n    //             </li></button>}\r\n                \r\n    //         {pages\r\n    //             .filter(p => p >= leftPortion && p <= rightPortion)\r\n    //             .map((p) => \r\n    //             <li key={p} className={styles.pageItem}><Link className={pageNumber===p?styles.selectedPageLink:styles.pageLink}   onClick={(e) => { onPageChanged(p);}} >{p}</Link></li> )}\r\n\r\n    //         {portionCount >= portionNumber &&\r\n    //             <button onClick={() => { setPortionNumber(portionNumber + 1) }}>   <li className={styles.pageItem}>\r\n    //                 <Link className={styles.pageLink}> <i className=\"fas fa-chevron-right\" aria-hidden=\"true\"></i></Link>\r\n    //             </li></button>}\r\n\r\n\r\n    //     </div>\r\n    // )\r\n}\r\n\r\nexport default Paginator\r\n"]},"metadata":{},"sourceType":"module"}