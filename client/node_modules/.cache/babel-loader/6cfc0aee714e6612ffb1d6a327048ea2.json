{"ast":null,"code":"import * as axios from \"axios\";\nconst baseUrl = \"http://localhost:5000/\";\nlet instance = axios.create({\n  baseUrl: baseUrl,\n  headers: {\n    \"x-auth-token\": sessionStorage.getItem('token')\n  }\n});\nexport const testAPI = {\n  getMyUsers() {\n    return axios.get(\"http://localhost:5000/users\").then(response => response.data);\n  },\n\n  getGoods(token) {\n    return instance.get(\"http://localhost:5000/goods\").then(response => response.data);\n  },\n\n  getGood(id) {\n    return instance.get(baseUrl + `goods/${id}`);\n  },\n\n  login(email, password, rememberMe = false) {\n    return axios.post(\"http://localhost:5000/auth/\", {\n      email,\n      password,\n      rememberMe\n    });\n  },\n\n  register(name, email, password) {\n    return axios.post(\"http://localhost:5000/users\", {\n      name,\n      email,\n      password\n    });\n  },\n\n  getAuth() {\n    return instance.get(\"http://localhost:5000/auth/user\");\n  },\n\n  getReviews() {\n    return instance.get(\"http://localhost:5000/goods/reviews\").then(response => response.data);\n  },\n\n  setReviews(name, photo, images, reviews, rating) {\n    debugger;\n    const photoData = new FormData();\n\n    for (var i = 0; i < images.length; i++) {\n      photoData.append(\"image\" + i, images[i]);\n    }\n\n    return instance.post('http://localhost:5000/goods/reviews', {\n      name,\n      photo,\n      photoData,\n      reviews,\n      rating\n    }, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/anton/Desktop/myApp/client/src/api/api.js"],"names":["axios","baseUrl","instance","create","headers","sessionStorage","getItem","testAPI","getMyUsers","get","then","response","data","getGoods","token","getGood","id","login","email","password","rememberMe","post","register","name","getAuth","getReviews","setReviews","photo","images","reviews","rating","photoData","FormData","i","length","append"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAGA,MAAMC,OAAO,GAAG,wBAAhB;AAEA,IAAIC,QAAQ,GAAGF,KAAK,CAACG,MAAN,CAAa;AAC1BF,EAAAA,OAAO,EAAEA,OADiB;AAE1BG,EAAAA,OAAO,EAAE;AACP,oBAAeC,cAAc,CAACC,OAAf,CAAuB,OAAvB;AADR;AAFiB,CAAb,CAAf;AAOA,OAAO,MAAMC,OAAO,GAAG;AACrBC,EAAAA,UAAU,GAAG;AACX,WAAOR,KAAK,CACTS,GADI,CACA,6BADA,EAEJC,IAFI,CAEEC,QAAD,IAAcA,QAAQ,CAACC,IAFxB,CAAP;AAGD,GALoB;;AAMrBC,EAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,WAAOZ,QAAQ,CACZO,GADI,CACA,6BADA,EAEJC,IAFI,CAEEC,QAAD,IAAcA,QAAQ,CAACC,IAFxB,CAAP;AAGD,GAVoB;;AAWrBG,EAAAA,OAAO,CAACC,EAAD,EAAI;AACV,WAAOd,QAAQ,CAACO,GAAT,CAAaR,OAAO,GAAE,SAAQe,EAAG,EAAjC,CAAP;AACA,GAboB;;AAcrBC,EAAAA,KAAK,CAACC,KAAD,EAAQC,QAAR,EAAiBC,UAAU,GAAC,KAA5B,EAAmC;AACtC,WAAOpB,KAAK,CAACqB,IAAN,CAAW,6BAAX,EAA0C;AAAEH,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAkBC,MAAAA;AAAlB,KAA1C,CAAP;AACD,GAhBoB;;AAiBrBE,EAAAA,QAAQ,CAACC,IAAD,EAAOL,KAAP,EAAcC,QAAd,EAAwB;AAC9B,WAAOnB,KAAK,CAACqB,IAAN,CAAW,6BAAX,EAA0C;AAAEE,MAAAA,IAAF;AAAQL,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAA1C,CAAP;AACD,GAnBoB;;AAoBrBK,EAAAA,OAAO,GAAG;AACR,WAAOtB,QAAQ,CAACO,GAAT,CAAa,iCAAb,CAAP;AACD,GAtBoB;;AAuBrBgB,EAAAA,UAAU,GAAE;AACV,WAAOvB,QAAQ,CAACO,GAAT,CAAa,qCAAb,EACNC,IADM,CACDC,QAAQ,IAAEA,QAAQ,CAACC,IADlB,CAAP;AAED,GA1BoB;;AA2BrBc,EAAAA,UAAU,CAACH,IAAD,EAAMI,KAAN,EAAYC,MAAZ,EAAmBC,OAAnB,EAA2BC,MAA3B,EAAkC;AAC1C;AACE,UAAMC,SAAS,GAAC,IAAIC,QAAJ,EAAhB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,MAAM,CAACM,MAArB,EAA4BD,CAAC,EAA7B,EAAgC;AAC9BF,MAAAA,SAAS,CAACI,MAAV,CAAiB,UAAQF,CAAzB,EAA2BL,MAAM,CAACK,CAAD,CAAjC;AACH;;AACA,WAAO/B,QAAQ,CAACmB,IAAT,CAAc,qCAAd,EAAoD;AAACE,MAAAA,IAAD;AAAMI,MAAAA,KAAN;AAAYI,MAAAA,SAAZ;AAAsBF,MAAAA,OAAtB;AAA8BC,MAAAA;AAA9B,KAApD,EAA0F;AAC/F1B,MAAAA,OAAO,EAAC;AACR,wBAAe;AADP;AADuF,KAA1F,CAAP;AAKA;;AAtCkB,CAAhB","sourcesContent":["import * as axios from \"axios\";\n\n\nconst baseUrl = \"http://localhost:5000/\";\n\nlet instance = axios.create({\n  baseUrl: baseUrl,\n  headers: {\n    \"x-auth-token\":sessionStorage.getItem('token')\n  },\n});\n\nexport const testAPI = {\n  getMyUsers() {\n    return axios\n      .get(\"http://localhost:5000/users\")\n      .then((response) => response.data);\n  },\n  getGoods(token) {\n    return instance\n      .get(\"http://localhost:5000/goods\")\n      .then((response) => response.data);\n  },\n  getGood(id){\n   return instance.get(baseUrl+`goods/${id}`)\n  },\n  login(email, password,rememberMe=false) {\n    return axios.post(\"http://localhost:5000/auth/\", { email, password,rememberMe });\n  },\n  register(name, email, password) {\n    return axios.post(\"http://localhost:5000/users\", { name, email, password });\n  },\n  getAuth() {\n    return instance.get(\"http://localhost:5000/auth/user\")\n  },\n  getReviews(){\n    return instance.get(\"http://localhost:5000/goods/reviews\")\n    .then(response=>response.data)\n  },\n  setReviews(name,photo,images,reviews,rating){\n    debugger\n      const photoData=new FormData();\n      for(var i=0;i<images.length;i++){\n        photoData.append(\"image\"+i,images[i]); \n    }\n     return instance.post('http://localhost:5000/goods/reviews',{name,photo,photoData,reviews,rating},{\n       headers:{\n       'Content-Type':'multipart/form-data'\n       }\n     })\n    }\n};\n"]},"metadata":{},"sourceType":"module"}