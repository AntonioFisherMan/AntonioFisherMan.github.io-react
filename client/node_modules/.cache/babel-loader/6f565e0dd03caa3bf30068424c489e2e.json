{"ast":null,"code":"import { USER_LOADING, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS, REGISTER_SUCCESS } from \"./actions\";\nimport { testAPI } from \"../../api/api\";\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuth: null,\n  isLoading: false,\n  user: null\n};\n\nconst authTestReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case USER_LOADED:\n      return { ...state,\n        isLoading: false,\n        isAuth: true,\n        user: action.payload\n      };\n\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      return { ...state,\n        ...action.payload,\n        isAuth: true,\n        isLoading: false\n      };\n\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case LOGOUT_SUCCESS:\n      return { ...state,\n        isAuth: false,\n        isLoading: false,\n        user: null,\n        token: null\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const loginTest = (email, login) => async dispatch => {\n  let response = await testAPI.login();\n};\nexport default authTestReducer;","map":{"version":3,"sources":["/Volumes/Anton/FullStack/myApp/client/src/redux/Test/authReducer.js"],"names":["USER_LOADING","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","REGISTER_SUCCESS","testAPI","initialState","token","localStorage","getItem","isAuth","isLoading","user","authTestReducer","state","action","type","payload","loginTest","email","login","dispatch","response"],"mappings":"AAAA,SACEA,YADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,cAPF,EAQEC,gBARF,QASO,WATP;AAUA,SAASC,OAAT,QAAwB,eAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,MAAM,EAAE,IAFW;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;;AAOA,MAAMC,eAAe,GAAG,CAACC,KAAK,GAAGR,YAAT,EAAuBS,MAAvB,KAAkC;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKnB,YAAL;AACE,aAAO,EAAE,GAAGiB,KAAL;AAAYH,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKZ,WAAL;AACE,aAAO,EAAE,GAAGe,KAAL;AAAYH,QAAAA,SAAS,EAAE,KAAvB;AAA8BD,QAAAA,MAAM,EAAE,IAAtC;AAA4CE,QAAAA,IAAI,EAAEG,MAAM,CAACE;AAAzD,OAAP;;AACF,SAAKhB,aAAL;AACA,SAAKG,gBAAL;AACE,aAAO,EAAE,GAAGU,KAAL;AAAY,WAAGC,MAAM,CAACE,OAAtB;AAA+BP,QAAAA,MAAM,EAAE,IAAvC;AAA6CC,QAAAA,SAAS,EAAE;AAAxD,OAAP;;AACF,SAAKX,UAAL;AACA,SAAKE,UAAL;AACA,SAAKJ,aAAL;AACA,SAAKK,cAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,MAAM,EAAE,KAFH;AAGLC,QAAAA,SAAS,EAAE,KAHN;AAILC,QAAAA,IAAI,EAAE,IAJD;AAKLL,QAAAA,KAAK,EAAE;AALF,OAAP;;AAOF;AACE,aAAOO,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,OAAO,MAAMI,SAAS,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB,MAAMC,QAAN,IAAmB;AAC1D,MAAIC,QAAQ,GAAC,MAAMjB,OAAO,CAACe,KAAR,EAAnB;AACH,CAFM;AAIP,eAAeP,eAAf","sourcesContent":["import {\n  USER_LOADING,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n} from \"./actions\";\nimport { testAPI } from \"../../api/api\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuth: null,\n  isLoading: false,\n  user: null,\n};\n\nconst authTestReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_LOADING:\n      return { ...state, isLoading: true };\n    case USER_LOADED:\n      return { ...state, isLoading: false, isAuth: true, user: action.payload };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      return { ...state, ...action.payload, isAuth: true, isLoading: false };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case REGISTER_FAIL:\n    case LOGOUT_SUCCESS:\n      return {\n        ...state,\n        isAuth: false,\n        isLoading: false,\n        user: null,\n        token: null,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const loginTest = (email, login) => async(dispatch) => {\n    let response=await testAPI.login()\n};\n\nexport default authTestReducer;\n"]},"metadata":{},"sourceType":"module"}