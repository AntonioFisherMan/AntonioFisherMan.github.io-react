{"ast":null,"code":"var _jsxFileName = \"/Volumes/Anton/FullStack/myApp/client/src/components/Users/UsersContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Users from './Users';\nimport { setPage, getUsersThunkCreator, follow, unfollow } from '../../redux/UsersReducer';\nimport Preloader from '../common/Preloader';\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect';\nimport { compose } from 'redux';\nimport { getPageSize, getStatus, getTotalItemsCount, getCurrentPage, getIsFetching, getAuth, getUsers } from '../../redux/UsersSelectors';\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setPage(pageNumber);\n      this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 42\n      }\n    }) : null), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Users, {\n      totalItemsCount: this.props.totalItemsCount,\n      pageSize: this.props.pageSize,\n      currentPage: this.props.currentPage,\n      onPageChanged: this.onPageChanged,\n      users: this.props.users,\n      follow: this.props.follow,\n      unfollow: this.props.unfollow,\n      auth: this.props.auth,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }));\n  }\n\n} // let mapStateToProps = (state) => {\n//     return {\n//         users: state.users.users,\n//         pageSize: state.users.pageSize,\n//         totalUsersCount: state.users.totalUsersCount,\n//         currentPage: state.users.currentPage,\n//         isFetching: state.users.isFetching,\n//         auth:state.auth,\n//         status:state.users.status\n//     }\n// }\n\n\nlet mapStateToProps = state => {\n  debugger;\n  return {\n    users: getUsers(state),\n    pageSize: getPageSize(state),\n    totalItemsCount: getTotalItemsCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    auth: getAuth(state),\n    status: getStatus(state)\n  };\n};\n\nexport default compose(WithAuthRedirect, connect(mapStateToProps, {\n  setPage,\n  follow,\n  unfollow,\n  getUsersThunkCreator\n}))(UsersContainer);","map":{"version":3,"sources":["/Volumes/Anton/FullStack/myApp/client/src/components/Users/UsersContainer.jsx"],"names":["React","connect","Users","setPage","getUsersThunkCreator","follow","unfollow","Preloader","WithAuthRedirect","compose","getPageSize","getStatus","getTotalItemsCount","getCurrentPage","getIsFetching","getAuth","getUsers","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","componentDidMount","currentPage","render","isFetching","totalItemsCount","users","auth","status","updateStatus","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Users from './Users'\nimport { setPage, getUsersThunkCreator, follow, unfollow} from '../../redux/UsersReducer'\nimport Preloader from '../common/Preloader'\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect'\nimport { compose } from 'redux'\nimport { getPageSize,getStatus, getTotalItemsCount, getCurrentPage, getIsFetching, getAuth,getUsers} from '../../redux/UsersSelectors'\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsersThunkCreator(this.props.currentPage, this.props.pageSize);\n    }\n    onPageChanged = (pageNumber) => {\n        this.props.setPage(pageNumber);\n        this.props.getUsersThunkCreator(pageNumber, this.props.pageSize);\n    }\n    \n    render() {\n        return <>\n            <div className=\"row justify-content-center\">\n                {this.props.isFetching ? <Preloader /> : null}\n            </div>\n            <div>\n    \n           \n            </div>\n            <Users\n                totalItemsCount={this.props.totalItemsCount}\n                pageSize={this.props.pageSize}\n                currentPage={this.props.currentPage}\n                onPageChanged={this.onPageChanged}\n                users={this.props.users}\n                follow={this.props.follow}\n                unfollow={this.props.unfollow}\n                auth={this.props.auth}\n                status={this.props.status}\n                updateStatus={this.props.updateStatus}\n            \n              \n            \n            />\n\n        </>\n    }\n}\n\n// let mapStateToProps = (state) => {\n//     return {\n//         users: state.users.users,\n//         pageSize: state.users.pageSize,\n//         totalUsersCount: state.users.totalUsersCount,\n//         currentPage: state.users.currentPage,\n//         isFetching: state.users.isFetching,\n//         auth:state.auth,\n//         status:state.users.status\n//     }\n// }\nlet mapStateToProps = (state) => {\n    debugger\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalItemsCount: getTotalItemsCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        auth: getAuth(state),\n        status: getStatus(state),\n      \n    }\n}\n\nexport default compose(\n    WithAuthRedirect,\n    connect(mapStateToProps, {\n        setPage, follow, unfollow,\n        getUsersThunkCreator\n    })\n)(UsersContainer)\n\n"]},"metadata":{},"sourceType":"module"}