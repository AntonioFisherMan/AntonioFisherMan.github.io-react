{"ast":null,"code":"var _jsxFileName = \"/Users/anton/Downloads/myApp-1/client/src/components/Forms/ForgotPassword/ForgotPassword.jsx\";\nimport React from 'react';\nimport { changePass, requestToken, resetEmailSentClear } from '../../../redux/AuthReducer';\nimport { Alert } from 'reactstrap';\nimport { compose } from 'redux';\nimport { SuccessErrorsData } from '../../../hoc/SuccessErrorsData';\nimport { connect } from 'react-redux';\n\nclass ForgotPassword extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.changePassword = e => {\n      this.props.changePass(e.target.value);\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.requestToken();\n    };\n\n    this.generateForm = () => {\n      debugger;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-12 d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"email\",\n        onChange: this.changePassword,\n        placeholder: \"Enter your email\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        className: \"btn btn-success\",\n        style: {\n          width: \"100%\",\n          marginTop: '20px'\n        },\n        type: \"submit\",\n        value: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }\n      }, this.props.errors.id === 'FORGOT_ERROR' ? /*#__PURE__*/React.createElement(Alert, {\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 64\n        }\n      }, this.props.errors.message.message) : null)));\n    };\n\n    this.generateSuccessMessage = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row justify-content-center \",\n        style: {\n          color: '#E77E83'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \" d-flex flex-column align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 87\n        }\n      }, \"If account exist you will recieve message with instructions\", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 201\n        }\n      }), /*#__PURE__*/React.createElement(\"i\", {\n        class: \"fab fa-linux\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 207\n        }\n      })));\n    };\n  }\n\n  componentDidMount() {\n    this.props.clearSuccess();\n    this.props.clearErrors();\n    this.props.resetEmailSentClear();\n    console.log(\"asd\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }\n    }, \"asdasdas\"), this.props.emailSent ? this.generateSuccessMessage() : this.generateForm());\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    email: state.auth.forgotEmail,\n    emailSent: state.auth.emailSent\n  };\n};\n\nexport default compose(SuccessErrorsData, connect(mapStateToProps, {\n  changePass,\n  requestToken,\n  resetEmailSentClear\n}));","map":{"version":3,"sources":["/Users/anton/Downloads/myApp-1/client/src/components/Forms/ForgotPassword/ForgotPassword.jsx"],"names":["React","changePass","requestToken","resetEmailSentClear","Alert","compose","SuccessErrorsData","connect","ForgotPassword","Component","changePassword","e","props","target","value","handleSubmit","preventDefault","generateForm","width","marginTop","errors","id","message","generateSuccessMessage","color","componentDidMount","clearSuccess","clearErrors","console","log","render","emailSent","mapStateToProps","state","email","auth","forgotEmail"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { changePass, requestToken, resetEmailSentClear } from '../../../redux/AuthReducer'\r\nimport { Alert } from 'reactstrap'\r\nimport { compose } from 'redux';\r\nimport { SuccessErrorsData } from '../../../hoc/SuccessErrorsData';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nclass ForgotPassword extends React.Component {\r\n    componentDidMount() {\r\n        this.props.clearSuccess()\r\n        this.props.clearErrors();\r\n        this.props.resetEmailSentClear()\r\n        console.log(\"asd\")\r\n    }\r\n    changePassword = (e) => {\r\n        this.props.changePass(e.target.value)\r\n    }\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        this.props.requestToken();\r\n    }\r\n    generateForm = () => {\r\n        debugger\r\n        return (\r\n            <div>\r\n                <div className=\"container\">\r\n                <div className=\"row \">\r\n                    <div className=\"col-12 d-flex justify-content-center\">\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <input className=\"form-control\" type=\"email\" onChange={this.changePassword} placeholder=\"Enter your email\" />\r\n                            <input className=\"btn btn-success\" style={{ width: \"100%\", marginTop: '20px' }} type=\"submit\" value=\"Отправить\" />\r\n                        </form>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"row d-flex justify-content-center\">\r\n                    {this.props.errors.id === 'FORGOT_ERROR' ? <Alert color=\"danger\">{this.props.errors.message.message}</Alert> : null}\r\n                </div>\r\n            </div>\r\n            </div>\r\n            \r\n\r\n        )\r\n    }\r\n    generateSuccessMessage = () => {\r\n        return (\r\n            <div className=\"row justify-content-center \" style={{ color: '#E77E83' }}><h4 className=\" d-flex flex-column align-items-center\">If account exist you will recieve message with instructions<br /><i class=\"fab fa-linux\"></i></h4>\r\n\r\n            </div>\r\n\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>asdasdas</p>\r\n                {this.props.emailSent ? this.generateSuccessMessage() : this.generateForm()}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        email: state.auth.forgotEmail,\r\n        emailSent: state.auth.emailSent\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    SuccessErrorsData,\r\n    connect(mapStateToProps,{changePass, requestToken, resetEmailSentClear})\r\n)\r\n\r\n"]},"metadata":{},"sourceType":"module"}