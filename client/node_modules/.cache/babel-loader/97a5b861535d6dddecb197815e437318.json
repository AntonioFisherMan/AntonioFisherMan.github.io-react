{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUPERSVETA\\\\Desktop\\\\myApp\\\\client\\\\src\\\\components\\\\Forms\\\\ForgotPassword\\\\ForgotChangePassword.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { resetPass } from '../../../redux/AuthReducer';\nimport { Input } from '../../common/FormsControls/Input';\nimport { Field, reduxForm } from 'redux-form';\nimport { Alert } from 'reactstrap';\nimport { compose } from 'redux';\nimport { SuccessErrorsData } from '../../../hoc/SuccessErrorsData';\n\nclass ForgotChangePassword extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onSubmit = formData => {\n      const token = this.props.match.params.token;\n      this.props.resetPass(formData.newPassword, formData.verifyPassword, token);\n    };\n\n    this.generateForm = () => {\n      return /*#__PURE__*/React.createElement(ReduxForgotChangePassword, {\n        onSubmit: this.onSubmit,\n        errors: this.props.errors,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }\n      });\n    };\n\n    this.generateSuccessMessage = () => {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }\n      }, \"If account exist you will recieve message with instructions\");\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, this.props.emailSent ? this.generateSuccessMessage() : this.generateForm());\n  }\n\n}\n\nconst ForgotChangePasswordForm = props => {\n  debugger;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12 d-flex justif-content-center flex-column align-items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 22\n    }\n  }, \"Password confirmation!\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: props.handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"newPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"New Password\"), /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    component: Input,\n    name: \"newPassword\",\n    id: \"newPassword\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    for: \"verifyPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Confirm Password\"), /*#__PURE__*/React.createElement(Field, {\n    type: \"text\",\n    component: Input,\n    name: \"verifyPassword\",\n    id: \"verifyPassword\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \" Reset Password\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row d-flex justify-content-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, props.errors.id === 'RESET_ERROR' ? /*#__PURE__*/React.createElement(Alert, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 51\n    }\n  }, props.errors.message.message) : null));\n};\n\nconst ReduxForgotChangePassword = reduxForm({\n  form: 'forgotForm'\n})(ForgotChangePasswordForm);\nexport default compose(SuccessErrorsData, connect(null, {\n  resetPass\n}))(ForgotChangePassword);","map":{"version":3,"sources":["C:/Users/SUPERSVETA/Desktop/myApp/client/src/components/Forms/ForgotPassword/ForgotChangePassword.jsx"],"names":["React","connect","resetPass","Input","Field","reduxForm","Alert","compose","SuccessErrorsData","ForgotChangePassword","Component","onSubmit","formData","token","props","match","params","newPassword","verifyPassword","generateForm","errors","generateSuccessMessage","render","emailSent","ForgotChangePasswordForm","handleSubmit","id","message","ReduxForgotChangePassword","form"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { resetPass } from '../../../redux/AuthReducer'\r\nimport { Input } from '../../common/FormsControls/Input'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Alert } from 'reactstrap'\r\nimport { compose } from 'redux'\r\nimport { SuccessErrorsData } from '../../../hoc/SuccessErrorsData'\r\n\r\nclass ForgotChangePassword extends React.Component {\r\n    \r\n    onSubmit = (formData) => {\r\n        const token = this.props.match.params.token\r\n        this.props.resetPass(formData.newPassword, formData.verifyPassword, token)\r\n    }\r\n    generateForm = () => {\r\n        return (\r\n            <ReduxForgotChangePassword onSubmit={this.onSubmit} errors={this.props.errors}/>\r\n        )\r\n    }\r\n    generateSuccessMessage = () => {\r\n        return (\r\n            <p>If account exist you will recieve message with instructions</p>\r\n        )\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.emailSent? this.generateSuccessMessage() : this.generateForm()}\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst ForgotChangePasswordForm = (props) => {\r\n    debugger\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12 d-flex justif-content-center flex-column align-items-center\">\r\n                <div><h3>Password confirmation!</h3>\r\n        <form onSubmit={props.handleSubmit}>\r\n            <label for=\"newPassword\">New Password</label>\r\n            <Field type=\"text\" component={Input} name=\"newPassword\" id=\"newPassword\" required />\r\n            <label for=\"verifyPassword\">Confirm Password</label>\r\n            <Field type=\"text\" component={Input} name=\"verifyPassword\" id=\"verifyPassword\" required />\r\n            <button> Reset Password</button>\r\n        </form>\r\n    </div>\r\n                </div>\r\n            </div>\r\n           \r\n            <div className=\"row d-flex justify-content-center\">\r\n                {props.errors.id==='RESET_ERROR' ?<Alert color=\"danger\">{props.errors.message.message}</Alert> : null}\r\n                </div>\r\n        </div>\r\n  )\r\n}\r\n\r\nconst ReduxForgotChangePassword = reduxForm({\r\n    form: 'forgotForm'\r\n})(ForgotChangePasswordForm)\r\n\r\n\r\nexport default compose(\r\n    SuccessErrorsData,\r\n    connect(null, { resetPass })\r\n) (ForgotChangePassword)\r\n"]},"metadata":{},"sourceType":"module"}