{"ast":null,"code":"var _jsxFileName = \"/Users/anton/Downloads/myApp-1/client/src/components/Pages/CatalogPage/CatalogPageContainer.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport CatalogPage from './CatalogPage';\nimport { compose } from 'redux';\nimport { getGoodsThunk, changeSortBy, removeFilter, getGoodsThunkById, changePageNumber, ClearGoods } from '../../../redux/CatalogReducer';\nimport { orderBy } from 'lodash';\nimport { IsPopUpHook } from '../../../hoc/IsPopUpHook';\nimport { isPopUp } from '../../../redux/AppReducer';\nimport { getFilterBy, getTotalGoods } from '../../../redux/CatalogSelector';\nimport { reset } from 'redux-form';\n\nclass CatalogPageContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      const {\n        pageSize\n      } = this.props;\n      this.props.getGoodsThunk(pageNumber, pageSize, this.props.filter);\n      this.props.changePageNumber(pageNumber);\n    };\n\n    this.changePageSize = (pageSize, pageNumber = 1) => {\n      this.props.getGoodsThunk(pageNumber, pageSize, this.props.filter);\n    };\n\n    this.changeFilter = filter => {\n      dispatch(reset('filter'));\n      this.props.getGoodsThunk(this.props.pageNumber, this.props.pageSize, filter);\n    };\n  }\n\n  componentWillUnmount() {\n    this.props.ClearGoods();\n  }\n\n  componentDidMount() {\n    const {\n      pageNumber,\n      pageSize\n    } = this.props;\n    this.props.getGoodsThunk(pageNumber, pageSize, this.props.filter);\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      pageNumber,\n      pageSize\n    } = this.props;\n\n    if (prevProps.filter !== this.props.filter) {\n      this.props.getGoodsThunk(pageNumber, pageSize, this.props.filter);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CatalogPage, Object.assign({}, this.props, {\n      onPageChanged: this.onPageChanged,\n      changeFilter: this.changeFilter,\n      removeFilter: this.props.removeFilter,\n      changeSortBy: this.props.changeSortBy,\n      changePageSize: this.changePageSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    goods: getTotalGoods(state),\n    filterBy: getFilterBy(state),\n    filter: state.goods.filter,\n    token: state.auth.token,\n    items: state.card.items,\n    pageSize: state.goods.pageSize,\n    pageNumber: state.goods.pageNumber,\n    totalCount: state.goods.totalCount\n  };\n};\n\nexport default compose(IsPopUpHook, connect(mapStateToProps, {\n  getGoodsThunk,\n  getGoodsThunkById,\n  changePageNumber,\n  removeFilter,\n  isPopUp,\n  changeSortBy,\n  ClearGoods\n}))(CatalogPageContainer);","map":{"version":3,"sources":["/Users/anton/Downloads/myApp-1/client/src/components/Pages/CatalogPage/CatalogPageContainer.jsx"],"names":["React","connect","CatalogPage","compose","getGoodsThunk","changeSortBy","removeFilter","getGoodsThunkById","changePageNumber","ClearGoods","orderBy","IsPopUpHook","isPopUp","getFilterBy","getTotalGoods","reset","CatalogPageContainer","Component","onPageChanged","pageNumber","pageSize","props","filter","changePageSize","changeFilter","dispatch","componentWillUnmount","componentDidMount","componentDidUpdate","prevProps","render","mapStateToProps","state","goods","filterBy","token","auth","items","card","totalCount"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { connect } from 'react-redux'\nimport CatalogPage from './CatalogPage'\nimport { compose } from 'redux'\nimport { getGoodsThunk, changeSortBy,removeFilter,getGoodsThunkById, changePageNumber, ClearGoods } from '../../../redux/CatalogReducer'\nimport { orderBy } from 'lodash'\nimport { IsPopUpHook } from '../../../hoc/IsPopUpHook'\nimport { isPopUp } from '../../../redux/AppReducer'\nimport { getFilterBy,getTotalGoods } from '../../../redux/CatalogSelector'\nimport {reset} from 'redux-form';\n\n\nclass CatalogPageContainer extends React.Component {\n  componentWillUnmount() {\n    this.props.ClearGoods();\n  }\n  componentDidMount() {\n    const { pageNumber, pageSize } = this.props;\n    this.props.getGoodsThunk(pageNumber,pageSize,this.props.filter);\n  }\n  componentDidUpdate(prevProps){\n    const { pageNumber, pageSize } = this.props;\n    if(prevProps.filter!==this.props.filter){\n      this.props.getGoodsThunk(pageNumber,pageSize,this.props.filter);\n    }\n  }\n  onPageChanged = (pageNumber) => {\n    const { pageSize } = this.props;\n    this.props.getGoodsThunk(pageNumber, pageSize,this.props.filter)\n    this.props.changePageNumber(pageNumber)\n  }\n  changePageSize = (pageSize, pageNumber=1) => {\n    this.props.getGoodsThunk(pageNumber,pageSize,this.props.filter)\n  }\n  changeFilter=(filter)=>{\n      dispatch(reset('filter'));\n     this.props.getGoodsThunk(this.props.pageNumber,this.props.pageSize,filter)\n  }\n  render() {\n    return (\n      <>\n        <CatalogPage  {...this.props} onPageChanged={this.onPageChanged}changeFilter={this.changeFilter} removeFilter={this.props.removeFilter} changeSortBy={this.props.changeSortBy} changePageSize={this.changePageSize}\n        />\n      </>\n    )\n  }\n}\n\n\nlet mapStateToProps = (state) => {\n  return {\n    goods: getTotalGoods(state),\n    filterBy:getFilterBy(state),\n    filter:state.goods.filter,\n    token: state.auth.token,\n    items: state.card.items,\n    pageSize: state.goods.pageSize,\n    pageNumber: state.goods.pageNumber,\n    totalCount: state.goods.totalCount\n  }\n}\n\nexport default compose(\n  IsPopUpHook,\n  connect(mapStateToProps, { getGoodsThunk, getGoodsThunkById, changePageNumber,removeFilter, isPopUp, changeSortBy, ClearGoods })\n)(CatalogPageContainer)\n\n"]},"metadata":{},"sourceType":"module"}