{"ast":null,"code":"import { clearCardItems } from './CardReducer';\nimport { testAPI } from \"../api/api\";\nconst ADD_ORDERS = \"ADD_ORDERS\";\nconst ADD_UNLOGINORDER = \"ADD_UNLOGINORDER\";\nlet initialState = {\n  orders: [],\n  unloginOrder: null,\n  inform: null\n};\n\nlet OrdersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_ORDERS:\n      return { ...state,\n        orders: [...action.data]\n      };\n\n    case ADD_UNLOGINORDER:\n      return { ...state,\n        unloginOrder: action.data\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const addOrders = data => ({\n  type: ADD_ORDERS,\n  data\n});\n\nconst addUnloginOrders = data => ({\n  type: ADD_UNLOGINORDER,\n  data\n});\n\nexport const addUnloginOrdersThunk = data => dispatch => {\n  dispatch(addUnloginOrders(data));\n  dispatch(clearCardItems(null, null, null));\n};\nexport const getOrders = id => dispatch => {\n  testAPI.getOrders(id).then(response => {\n    dispatch(addOrders(response.data));\n  });\n};\nexport const addOrdersThunk = ({\n  items,\n  inform,\n  id\n}) => dispatch => {\n  testAPI.setOrders(items, inform, id).then(response => {\n    dispatch(clearCardItems(null, null, null));\n  });\n};\nexport default OrdersReducer;","map":{"version":3,"sources":["/Users/anton/Desktop/myApp/client/src/redux/OrdersReducer.js"],"names":["clearCardItems","testAPI","ADD_ORDERS","ADD_UNLOGINORDER","initialState","orders","unloginOrder","inform","OrdersReducer","state","action","type","data","addOrders","addUnloginOrders","addUnloginOrdersThunk","dispatch","getOrders","id","then","response","addOrdersThunk","items","setOrders"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,eAA7B;AACA,SAASC,OAAT,QAAwB,YAAxB;AAGA,MAAMC,UAAU,GAAC,YAAjB;AACA,MAAMC,gBAAgB,GAAC,kBAAvB;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAE,EADS;AAEjBC,EAAAA,YAAY,EAAC,IAFI;AAGjBC,EAAAA,MAAM,EAAC;AAHU,CAAnB;;AAMA,IAAIC,aAAa,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,UAAL;AACI,aAAM,EAAC,GAAGO,KAAJ;AAAUJ,QAAAA,MAAM,EAAC,CAAC,GAAGK,MAAM,CAACE,IAAX;AAAjB,OAAN;;AACA,SAAKT,gBAAL;AACA,aAAM,EAAC,GAAGM,KAAJ;AAAUH,QAAAA,YAAY,EAACI,MAAM,CAACE;AAA9B,OAAN;;AACN;AACE,aAAOH,KAAP;AANJ;AAQD,CATD;;AAYC,OAAO,MAAMI,SAAS,GAAED,IAAD,KAAS;AAACD,EAAAA,IAAI,EAACT,UAAN;AAAiBU,EAAAA;AAAjB,CAAT,CAAhB;;AACN,MAAME,gBAAgB,GAAEF,IAAD,KAAS;AAACD,EAAAA,IAAI,EAACR,gBAAN;AAAuBS,EAAAA;AAAvB,CAAT,CAAvB;;AAGD,OAAO,MAAMG,qBAAqB,GAAEH,IAAD,IAAQI,QAAQ,IAAE;AACnDA,EAAAA,QAAQ,CAACF,gBAAgB,CAACF,IAAD,CAAjB,CAAR;AACAI,EAAAA,QAAQ,CAAChB,cAAc,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAAf,CAAR;AACA,CAHK;AAIR,OAAO,MAAMiB,SAAS,GAAEC,EAAD,IAAMF,QAAQ,IAAE;AACtCf,EAAAA,OAAO,CAACgB,SAAR,CAAkBC,EAAlB,EAAsBC,IAAtB,CAA2BC,QAAQ,IAAE;AACjCJ,IAAAA,QAAQ,CAACH,SAAS,CAACO,QAAQ,CAACR,IAAV,CAAV,CAAR;AACH,GAFD;AAGA,CAJM;AAMP,OAAO,MAAMS,cAAc,GAAC,CAAC;AAACC,EAAAA,KAAD;AAAOf,EAAAA,MAAP;AAAcW,EAAAA;AAAd,CAAD,KAAqBF,QAAQ,IAAE;AACvDf,EAAAA,OAAO,CAACsB,SAAR,CAAkBD,KAAlB,EAAwBf,MAAxB,EAA+BW,EAA/B,EAAmCC,IAAnC,CAAwCC,QAAQ,IAAE;AAC9CJ,IAAAA,QAAQ,CAAChB,cAAc,CAAC,IAAD,EAAM,IAAN,EAAW,IAAX,CAAf,CAAR;AACD,GAFH;AAIH,CALM;AAOP,eAAeQ,aAAf","sourcesContent":["import {clearCardItems} from './CardReducer'\nimport { testAPI } from \"../api/api\";\n\n\nconst ADD_ORDERS=\"ADD_ORDERS\"\nconst ADD_UNLOGINORDER=\"ADD_UNLOGINORDER\"\n\nlet initialState = {\n  orders: [],\n  unloginOrder:null,\n  inform:null\n};\n\nlet OrdersReducer = (state = initialState, action) => {\n  switch (action.type) {\n      case ADD_ORDERS:\n          return{...state,orders:[...action.data]}\n          case ADD_UNLOGINORDER:\n          return{...state,unloginOrder:action.data}\n    default:\n      return state;\n  }\n};\n\n\n export const addOrders=(data)=>({type:ADD_ORDERS,data})\n  const addUnloginOrders=(data)=>({type:ADD_UNLOGINORDER,data})\n\n\n export const addUnloginOrdersThunk=(data)=>dispatch=>{\n   dispatch(addUnloginOrders(data))\n   dispatch(clearCardItems(null,null,null))\n  }\nexport const getOrders=(id)=>dispatch=>{\n testAPI.getOrders(id).then(response=>{\n     dispatch(addOrders(response.data));\n })\n}\n\nexport const addOrdersThunk=({items,inform,id})=>dispatch=>{\n    testAPI.setOrders(items,inform,id).then(response=>{\n        dispatch(clearCardItems(null,null,null))\n      })\n    \n}\n\nexport default OrdersReducer"]},"metadata":{},"sourceType":"module"}