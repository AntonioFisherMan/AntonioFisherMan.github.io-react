{"ast":null,"code":"var _jsxFileName = \"/Users/anton/Downloads/myApp-1/client/src/components/common/FormsControls/File.jsx\";\nimport React from 'react';\nexport const File = ({\n  input,\n  type,\n  meta: {\n    touched,\n    error,\n    warning\n  }\n}) => {\n  const hasError = error && touched;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: type,\n    name: input.name,\n    multiple: true,\n    className: hasError ? \"error\" : \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }\n  }), hasError ? /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 25\n    }\n  }, error) : null, /*#__PURE__*/React.createElement(\"input\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/anton/Downloads/myApp-1/client/src/components/common/FormsControls/File.jsx"],"names":["React","File","input","type","meta","touched","error","warning","hasError","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB;AAArB,CAAD,KAAwD;AACxE,QAAMC,QAAQ,GAAGF,KAAK,IAAID,OAA1B;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAO,IAAA,IAAI,EAAEF,IAAb;AAAmB,IAAA,IAAI,EAAED,KAAK,CAACO,IAA/B;AAAoC,IAAA,QAAQ,MAA5C;AAA6C,IAAA,SAAS,EAAED,QAAQ,GAAG,OAAH,GAAa,EAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEKA,QAAQ,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOF,KAAP,CAAH,GAA0B,IAFvC,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH,CATM","sourcesContent":["import React from 'react'\n\n\nexport const File = ({ input, type, meta: { touched, error, warning } }) => {\n    const hasError = error && touched\n    return (\n        <div>\n            <input type={type} name={input.name}multiple className={hasError ? \"error\" : \"\"}  />\n            {hasError ? <span>{error}</span> : null}\n            <input />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}