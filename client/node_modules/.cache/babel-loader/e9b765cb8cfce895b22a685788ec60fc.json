{"ast":null,"code":"var _jsxFileName = \"/Users/anton/Desktop/myApp/client/src/components/Pages/DetailsPage/DetailsContainer.jsx\";\nimport React from 'react';\nimport DetailsPage from './DetailsPage';\nimport { connect } from 'react-redux';\nimport { getReviews } from '../../../redux/ReviewsReducer';\nimport { getGoodsThunkById } from '../../../redux/CatalogReducer';\nimport { setProduct } from '../../../redux/CardReducer';\n\nclass DetailsContainer extends React.Component {\n  refreshProfile() {\n    const id = this.props.match.params.id;\n\n    if (id) {\n      this.props.getGoodsThunkById(id);\n      this.props.getReviews();\n    }\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(prevProps) {\n    debugger;\n\n    if (this.props.match.params.id != prevProps.match.params.id) {\n      this.refreshProfile();\n    }\n  }\n\n  componentDidMount() {}\n\n  componentDidUpdate(prevProps) {\n    const id = this.props.match.params.id;\n\n    if (id != prevProps.id) {\n      this.props.getGoodsThunkById(id);\n      this.props.getReviews();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(DetailsPage, Object.assign({}, this.props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    reviews: state.reviews.reviews,\n    goodItem: state.goods.goodItem\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getReviews,\n  getGoodsThunkById,\n  setProduct\n})(DetailsContainer);","map":{"version":3,"sources":["/Users/anton/Desktop/myApp/client/src/components/Pages/DetailsPage/DetailsContainer.jsx"],"names":["React","DetailsPage","connect","getReviews","getGoodsThunkById","setProduct","DetailsContainer","Component","refreshProfile","id","props","match","params","componentDidMount","componentDidUpdate","prevProps","render","mapStateToProps","state","reviews","goodItem","goods"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,UAAR,QAAyB,+BAAzB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,SAAQC,UAAR,QAAyB,4BAAzB;;AAEA,MAAMC,gBAAN,SAA+BN,KAAK,CAACO,SAArC,CAA8C;AAC1CC,EAAAA,cAAc,GAAG;AACb,UAAMC,EAAE,GAAC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAAjC;;AACA,QAAGA,EAAH,EAAM;AACN,WAAKC,KAAL,CAAWN,iBAAX,CAA6BK,EAA7B;AACA,WAAKC,KAAL,CAAWP,UAAX;AAAyB;AAC1B;;AACDU,EAAAA,iBAAiB,GAAG;AAClB,SAAKL,cAAL;AACD;;AACDM,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B;;AACA,QAAI,KAAKL,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAAxB,IAA8BM,SAAS,CAACJ,KAAV,CAAgBC,MAAhB,CAAuBH,EAAzD,EAA6D;AAC3D,WAAKD,cAAL;AACD;AACF;;AACHK,EAAAA,iBAAiB,GAAE,CAElB;;AACDC,EAAAA,kBAAkB,CAACC,SAAD,EAAW;AACzB,UAAMN,EAAE,GAAC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,EAAjC;;AACA,QAAGA,EAAE,IAAEM,SAAS,CAACN,EAAjB,EAAoB;AACpB,WAAKC,KAAL,CAAWN,iBAAX,CAA6BK,EAA7B;AACA,WAAKC,KAAL,CAAWP,UAAX;AAAyB;AAC5B;;AACDa,EAAAA,MAAM,GAAE;AACJ,wBACI,oBAAC,WAAD,oBAAiB,KAAKN,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ;AAGH;;AA7ByC;;AA+B9C,IAAIO,eAAe,GAAEC,KAAD,IAAS;AACzB,SAAM;AACFC,IAAAA,OAAO,EAACD,KAAK,CAACC,OAAN,CAAcA,OADpB;AAEFC,IAAAA,QAAQ,EAACF,KAAK,CAACG,KAAN,CAAYD;AAFnB,GAAN;AAIH,CALD;;AAMA,eAAelB,OAAO,CAACe,eAAD,EAAiB;AAACd,EAAAA,UAAD;AAAYC,EAAAA,iBAAZ;AAA8BC,EAAAA;AAA9B,CAAjB,CAAP,CAAmEC,gBAAnE,CAAf","sourcesContent":["import React from 'react'\nimport DetailsPage from './DetailsPage'\nimport { connect } from 'react-redux'\nimport {getReviews} from '../../../redux/ReviewsReducer'\nimport {getGoodsThunkById} from '../../../redux/CatalogReducer'\nimport {setProduct} from '../../../redux/CardReducer'\n\nclass DetailsContainer extends React.Component{\n    refreshProfile() {\n        const id=this.props.match.params.id;\n        if(id){\n        this.props.getGoodsThunkById(id)\n        this.props.getReviews();}\n      }\n      componentDidMount() {\n        this.refreshProfile();\n      }\n      componentDidUpdate(prevProps) {\n        debugger\n        if (this.props.match.params.id != prevProps.match.params.id) {\n          this.refreshProfile();\n        }\n      }\n    componentDidMount(){\n       \n    }\n    componentDidUpdate(prevProps){\n        const id=this.props.match.params.id;\n        if(id!=prevProps.id){\n        this.props.getGoodsThunkById(id)\n        this.props.getReviews();}\n    }\n    render(){\n        return(\n            <DetailsPage {...this.props}/>\n        )\n    }\n}\nlet mapStateToProps=(state)=>{\n    return{\n        reviews:state.reviews.reviews,\n        goodItem:state.goods.goodItem\n    }\n}\nexport default connect(mapStateToProps,{getReviews,getGoodsThunkById,setProduct})(DetailsContainer)"]},"metadata":{},"sourceType":"module"}