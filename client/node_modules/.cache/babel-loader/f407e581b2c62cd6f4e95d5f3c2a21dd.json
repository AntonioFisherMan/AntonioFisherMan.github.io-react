{"ast":null,"code":"export const GET_ERRORS = \"GET_ERRORS\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\nexport const GET_SUCCESS = \"GET_SUCCESS\";\nexport const CLEAR_SUCCESS = \"CLEAR_SUCCESS\";\nconst initialState = {\n  successMessage: {\n    message: null,\n    status: null,\n    id: null\n  },\n  errorsMessage: {\n    message: null,\n    status: null,\n    id: null\n  }\n};\n\nconst SuccessErrorReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ERRORS:\n      {\n        debugger;\n        return {\n          message: action.payload.message,\n          status: action.payload.status,\n          id: action.payload.id\n        };\n      }\n\n    case GET_SUCCESS:\n      {\n        return {\n          message: action.payload.message,\n          status: action.payload.status,\n          id: action.payload.id\n        };\n      }\n\n    case CLEAR_ERRORS:\n      {\n        return initialState;\n      }\n\n    case CLEAR_SUCCESS:\n      {\n        return initialState;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const clearErrors = () => ({\n  type: CLEAR_ERRORS\n});\nexport const clearSuccess = () => ({\n  type: CLEAR_SUCCESS\n});\nexport const returnErrors = (message, status, id = null) => ({\n  type: GET_ERRORS,\n  payload: {\n    message,\n    status,\n    id\n  }\n});\nexport const returnSuccess = (message, status, id = null) => ({\n  type: GET_SUCCESS,\n  payload: {\n    message,\n    status,\n    id\n  }\n});\nexport default SuccessErrorReducer;","map":{"version":3,"sources":["C:/Users/SUPERSVETA/Desktop/myApp/client/src/redux/SuccessErrorReducer.js"],"names":["GET_ERRORS","CLEAR_ERRORS","GET_SUCCESS","CLEAR_SUCCESS","initialState","successMessage","message","status","id","errorsMessage","SuccessErrorReducer","state","action","type","payload","clearErrors","clearSuccess","returnErrors","returnSuccess"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,YAAY,GAAG,cAArB;AACP,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAGP,MAAMC,YAAY,GAAG;AACjBC,EAAAA,cAAc,EAAE;AACZC,IAAAA,OAAO,EAAE,IADG;AAEZC,IAAAA,MAAM,EAAE,IAFI;AAGZC,IAAAA,EAAE,EAAE;AAHQ,GADC;AAMjBC,EAAAA,aAAa,EAAE;AACXH,IAAAA,OAAO,EAAE,IADE;AAEXC,IAAAA,MAAM,EAAE,IAFG;AAGXC,IAAAA,EAAE,EAAE;AAHO;AANE,CAArB;;AAcA,MAAME,mBAAmB,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAsBQ,MAAtB,KAAiC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,UAAL;AAAiB;AACb;AACA,eAAO;AACHM,UAAAA,OAAO,EAAEM,MAAM,CAACE,OAAP,CAAeR,OADrB;AAEHC,UAAAA,MAAM,EAAEK,MAAM,CAACE,OAAP,CAAeP,MAFpB;AAGHC,UAAAA,EAAE,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAHhB,SAAP;AAKH;;AACD,SAAKN,WAAL;AAAiB;AACb,eAAO;AACHI,UAAAA,OAAO,EAAEM,MAAM,CAACE,OAAP,CAAeR,OADrB;AAEHC,UAAAA,MAAM,EAAEK,MAAM,CAACE,OAAP,CAAeP,MAFpB;AAGHC,UAAAA,EAAE,EAAEI,MAAM,CAACE,OAAP,CAAeN;AAHhB,SAAP;AAKH;;AACD,SAAKP,YAAL;AAAmB;AACf,eAAOG,YAAP;AACH;;AACD,SAAKD,aAAL;AAAoB;AAChB,eAAOC,YAAP;AACH;;AACD;AAAS,aAAOO,KAAP;AAtBb;AAwBH,CAzBD;;AA4BA,OAAO,MAAMI,WAAW,GAAG,OAAO;AAAEF,EAAAA,IAAI,EAAEZ;AAAR,CAAP,CAApB;AACP,OAAO,MAAMe,YAAY,GAAG,OAAO;AAAEH,EAAAA,IAAI,EAAEV;AAAR,CAAP,CAArB;AACP,OAAO,MAAMc,YAAY,GAAG,CAACX,OAAD,EAAUC,MAAV,EAAkBC,EAAE,GAAG,IAAvB,MAAiC;AAAEK,EAAAA,IAAI,EAAEb,UAAR;AAAoBc,EAAAA,OAAO,EAAE;AAAER,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB;AAA7B,CAAjC,CAArB;AACP,OAAO,MAAMU,aAAa,GAAG,CAACZ,OAAD,EAAUC,MAAV,EAAkBC,EAAE,GAAG,IAAvB,MAAiC;AAAEK,EAAAA,IAAI,EAAEX,WAAR;AAAqBY,EAAAA,OAAO,EAAE;AAAER,IAAAA,OAAF;AAAWC,IAAAA,MAAX;AAAmBC,IAAAA;AAAnB;AAA9B,CAAjC,CAAtB;AAGP,eAAeE,mBAAf","sourcesContent":["export const GET_ERRORS = \"GET_ERRORS\"\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\"\nexport const GET_SUCCESS = \"GET_SUCCESS\"\nexport const CLEAR_SUCCESS = \"CLEAR_SUCCESS\"\n\n\nconst initialState = {\n    successMessage: {\n        message: null,\n        status: null,\n        id: null\n    },\n    errorsMessage: {\n        message: null,\n        status: null,\n        id: null\n    }\n}\n\n\nconst SuccessErrorReducer = (state = initialState,action) => {\n    switch (action.type) {\n        case GET_ERRORS: {\n            debugger\n            return {\n                message: action.payload.message,\n                status: action.payload.status,\n                id: action.payload.id\n            }\n        }\n        case GET_SUCCESS:{\n            return {\n                message: action.payload.message,\n                status: action.payload.status,\n                id: action.payload.id\n            }\n        }\n        case CLEAR_ERRORS: {\n            return initialState\n        }\n        case CLEAR_SUCCESS: {\n            return initialState\n        }\n        default: return state;\n    }\n}\n\n\nexport const clearErrors = () => ({ type: CLEAR_ERRORS })\nexport const clearSuccess = () => ({ type: CLEAR_SUCCESS })\nexport const returnErrors = (message, status, id = null) => ({ type: GET_ERRORS, payload: { message, status, id } })\nexport const returnSuccess = (message, status, id = null) => ({ type: GET_SUCCESS, payload: { message, status, id } })\n\n\nexport default SuccessErrorReducer"]},"metadata":{},"sourceType":"module"}