{"ast":null,"code":"import React from 'react';\nimport { getAuthThunkCreator } from './AuthReducer';\nconst SET_INITIALIZED = \"SET_INITIALIZED\";\nconst APP_IS_POPUP = \"APP_IS_POPUP\";\nlet initialState = {\n  initialized: false,\n  globalError: null,\n  isPopUp: false\n};\n\nconst AppReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_INITIALIZED:\n      return { ...state,\n        initialized: true\n      };\n\n    case APP_IS_POPUP:\n      debugger;\n      return { ...state,\n        isPopUp: action.isPopUp\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const setInitialize = () => ({\n  type: SET_INITIALIZED\n});\nexport const isPopUp = isPopUp => ({\n  type: APP_IS_POPUP,\n  isPopUp\n});\nexport const initializeThunkApp = () => dispatch => {\n  let promise = dispatch(getAuthThunkCreator());\n  Promise.all([promise]).then(() => {\n    dispatch(setInitialize());\n  });\n};\nexport default AppReducer;","map":{"version":3,"sources":["/Volumes/Anton/FullStack/myApp/client/src/redux/AppReducer.js"],"names":["React","getAuthThunkCreator","SET_INITIALIZED","APP_IS_POPUP","initialState","initialized","globalError","isPopUp","AppReducer","state","action","type","setInitialize","initializeThunkApp","dispatch","promise","Promise","all","then"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,mBAAT,QAAoC,eAApC;AAEA,MAAMC,eAAe,GAAC,iBAAtB;AACA,MAAMC,YAAY,GAAC,cAAnB;AAEA,IAAIC,YAAY,GAAC;AACXC,EAAAA,WAAW,EAAC,KADD;AAEXC,EAAAA,WAAW,EAAC,IAFD;AAGXC,EAAAA,OAAO,EAAC;AAHG,CAAjB;;AAMA,MAAMC,UAAU,GAAC,CAACC,KAAK,GAACL,YAAP,EAAoBM,MAApB,KAA6B;AAC3C,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKT,eAAL;AACC,aAAM,EACF,GAAGO,KADD;AACOJ,QAAAA,WAAW,EAAC;AADnB,OAAN;;AAGA,SAAKF,YAAL;AACI;AACA,aAAM,EAAC,GAAGM,KAAJ;AAAUF,QAAAA,OAAO,EAACG,MAAM,CAACH;AAAzB,OAAN;;AAEN;AAAQ,aAAOE,KAAP;AATT;AAWF,CAZD;;AAcA,OAAO,MAAMG,aAAa,GAAC,OAAK;AAACD,EAAAA,IAAI,EAACT;AAAN,CAAL,CAApB;AACP,OAAO,MAAMK,OAAO,GAAEA,OAAD,KAAY;AAACI,EAAAA,IAAI,EAACR,YAAN;AAAmBI,EAAAA;AAAnB,CAAZ,CAAd;AAGP,OAAO,MAAMM,kBAAkB,GAAC,MAAKC,QAAD,IAAY;AAC5C,MAAIC,OAAO,GAACD,QAAQ,CAACb,mBAAmB,EAApB,CAApB;AACAe,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EAAuBG,IAAvB,CAA4B,MAAI;AAC5BJ,IAAAA,QAAQ,CAACF,aAAa,EAAd,CAAR;AACH,GAFD;AAGH,CALM;AAQP,eAAeJ,UAAf","sourcesContent":["import React from 'react'\nimport { getAuthThunkCreator } from './AuthReducer'\n\nconst SET_INITIALIZED=\"SET_INITIALIZED\"\nconst APP_IS_POPUP=\"APP_IS_POPUP\"\n\nlet initialState={\n      initialized:false,\n      globalError:null,\n      isPopUp:false\n}\n\nconst AppReducer=(state=initialState,action)=>{\n   switch(action.type) {\n     case SET_INITIALIZED:\n      return{\n          ...state,initialized:true\n      }\n      case APP_IS_POPUP:\n          debugger\n          return{...state,isPopUp:action.isPopUp}\n\n    default:return state\n   }\n}\n\nexport const setInitialize=()=>({type:SET_INITIALIZED})\nexport const isPopUp=(isPopUp)=>({type:APP_IS_POPUP,isPopUp})\n\n\nexport const initializeThunkApp=()=>(dispatch)=>{\n    let promise=dispatch(getAuthThunkCreator())\n    Promise.all([promise]).then(()=>{\n        dispatch(setInitialize());\n    })\n}\n\n\nexport default AppReducer"]},"metadata":{},"sourceType":"module"}